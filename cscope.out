cscope 15 $HOME/hawkbeans-skeleton               0000414656
	@include/arch/x64-linux/bootstrap_loader.h

1 #i‚de‡
__BOOTSTRAP_H__


2 
	#__BOOTSTRAP_H__


	)

4 
java_˛ass
 * 
hb_lﬂd_˛ass
 (c⁄° * 
∑th
);

	@include/arch/x64-linux/util.h

1 #i‚de‡
__UTIL_H__


2 
	#__UTIL_H__


	)

4 
	~<ty≥s.h
>

6 
ölöe
 
u1


7 
	$gë_u1
 (
u1
 * 
§c
)

9  *
§c
;

10 
	}
}

12 
ölöe
 
u2


13 
	$gë_u2
 (
u1
 * 
§c
)

15 
u1
 
f°
 = *
§c
;

16 
u2
 
£c
 = *(
§c
+1);

17  ((
u2
)
f°
 << 8Ë| 
£c
;

18 
	}
}

20 
ölöe
 
u4


21 
	$gë_u4
 (
u1
 * 
§c
)

23 
u1
 
f°
 = *
§c
;

24 
u1
 
£c
 = *(
§c
+1);

25 
u1
 
thr
 = *(
§c
+2);

26 
u1
 
fou
 = *(
§c
+3);

28  ((
u4
)
f°
 << 24) |

29 ((
u4
)
£c
 << 16) |

30 ((
u4
)
thr
 << 8) |

31 ((
u4
)
fou
);

32 
	}
}

34 
ölöe
 
u8


35 
	$gë_u8
 (
u1
 * 
§c
)

37 
u1
 
f°
 = *
§c
;

38 
u1
 
£c
 = *(
§c
+1);

39 
u1
 
thr
 = *(
§c
+2);

40 
u1
 
fou
 = *(
§c
+3);

41 
u1
 
fif
 = *(
§c
+4);

42 
u1
 
six
 = *(
§c
+5);

43 
u1
 
£v
 = *(
§c
+6);

44 
u1
 
eig
 = *(
§c
+7);

46  ((
u8
)
f°
 << 56) |

47 ((
u8
)
£c
 << 48) |

48 ((
u8
)
thr
 << 40) |

49 ((
u8
)
fou
 << 32) |

50 ((
u8
)
fif
 << 24) |

51 ((
u8
)
six
 << 16) |

52 ((
u8
)
£v
 << 8) |

53 ((
u8
)
eig
);

54 
	}
}

	@include/bc_interp.h

15 #i‚de‡
__BC_INTERP_H__


16 
	#__BC_INTERP_H__


	)

19 
	~<hawkbóns.h
>

20 
	~<thªad.h
>

21 
	~<˛ass.h
>

23 #i‡
DEBUG_INTERP
 == 1

24 
	#BC_DEBUG
(
fmt
, 
¨gs
...Ë
	`HB_DEBUG
(fmt, ##¨gs)

	)

26 
	#BC_DEBUG
(
fmt
, 
¨gs
...)

	)

29 
	#ESHOULD_RETURN
 2

	)

30 
	#ESHOULD_BRANCH
 3

	)

31 
	#ETHREAD_DEATH
 4

	)

33 
hb_övoke_˘‹
 (
obj_ªf
 * 
‹ef
);

34 
hb_exec
(
jthªad_t
 * 
t
);

	@include/class.h

15 #i‚de‡
__CLASS_H__


16 
	#__CLASS_H__


	)

18 
	~<ty≥s.h
>

19 
	~<c⁄°™ts.h
>

20 
	~<hawkbóns.h
>

22 #i‡
DEBUG_CLASS
 == 1

23 
	#CL_DEBUG
(
fmt
, 
¨gs
...Ë
	`HB_DEBUG
(fmt, ##¨gs)

	)

25 
	#CL_DEBUG
(
fmt
, 
¨gs
...)

	)

29 
	#ACC_PUBLIC
 0x0001

	)

30 
	#ACC_PRIVATE
 0x0002

	)

31 
	#ACC_PROTECTED
 0x0004

	)

32 
	#ACC_STATIC
 0x0008

	)

33 
	#ACC_FINAL
 0x0010

	)

34 
	#ACC_SUPER
 0x0020

	)

35 
	#ACC_VOLATILE
 0x0040

	)

36 
	#ACC_TRANSIENT
 0x0080

	)

37 
	#ACC_INTERFACE
 0x0200

	)

38 
	#ACC_ABSTRACT
 0x0400

	)

39 
	#ACC_SYNTHETIC
 0x1000

	)

40 
	#ACC_ANNOTATION
 0x2000

	)

41 
	#ACC_ENUM
 0x4000

	)

44 
	#JAVA_MAGIC
 0xCAFEBABE

	)

47 
	#MARK_RESOLVED
(
x
Ë(()(xË| (1UL << 63))

	)

48 
	#IS_RESOLVED
(
x
Ë(()(xË& (1UL << 63))

	)

49 
	#MASK_RESOLVED_BIT
(
x
Ë(()(xË& ~(1UL << 63))

	)

51 
	#MARK_FIELD_RESOLVED
(
x
Ë
	`MARK_RESOLVED
(x)

	)

52 
	#FIELD_IS_RESOLVED
(
x
Ë
	`IS_RESOLVED
(x)

	)

54 #i‡
DEBUG_CLASS
 == 1

55 
	#CL_DEBUG
(
fmt
, 
¨gs
...Ë
	`HB_DEBUG
(fmt, ##¨gs)

	)

57 
	#CL_DEBUG
(
fmt
, 
¨gs
...)

	)

61 
	eªf_ty≥s
 {

62 
	mOBJ_OBJ
,

63 
	mOBJ_ARRAY
,

66 
	sobj_ªf
 {

67 
u8
 
	mhóp_±r
;

68 
u1
 
	mty≥
;

69 } 
	tobj_ªf_t
;

71 
	uv¨übÀ
 {

73 
u1
 
	mch¨_vÆ
;

74 
u2
 
	msh‹t_vÆ
;

75 
u4
 
	möt_vÆ
;

76 
u8
 
	ml⁄g_vÆ
;

77 
f4
 
	mÊﬂt_vÆ
;

78 
d8
 
	mdbl_vÆ
;

79 
u8
 
	m±r_vÆ
;

80 
obj_ªf
 * 
	mobj
;

81 } 
	tv¨_t
;

83 
	sc⁄°_poﬁ_öfo
 {

84 
u1
 
	mèg
;

85 
u1
 
	möfo
[0];

86 } 
	tc⁄°_poﬁ_öfo_t
;

88 
	s©å_öfo
 {

89 
u2
 
	m©å_«me_idx
;

90 
u4
 
	m©å_Àn
;

91 
u1
 
	möfo
[0];

92 } 
	t©å_öfo_t
;

94 
	sex˝_èbÀ
 {

95 
u2
 
	m°¨t_pc
;

96 
u2
 
	míd_pc
;

97 
u2
 
	mh™dÀr_pc
;

98 
u2
 
	mˇtch_ty≥
;

99 } 
	tex˝_èbÀ_t
;

101 
	scode_©å
 {

102 
u2
 
	m©å_«me_idx
;

103 
u4
 
	m©å_Àn
;

104 
u2
 
	mmax_°ack
;

105 
u2
 
	mmax_loˇls
;

106 
u4
 
	mcode_Àn
;

107 
u1
 * 
	mcode
;

108 
u2
 
	mex˝_èbÀ_Àn
;

109 
ex˝_èbÀ_t
 * 
	mex˝_èbÀ
;

110 
u2
 
	m©å_cou¡
;

111 } 
	tcode_©å_t
;

113 
	smëhod_öfo
 {

114 
u2
 
	macc_Êags
;

115 
u2
 
	m«me_idx
;

116 
u2
 
	mdesc_idx
;

117 
u2
 
	m©å_cou¡
;

119 
java_˛ass
 * 
	mow√r
;

120 
code_©å_t
 * 
	mcode_©å
;

122 } 
	tmëhod_öfo_t
;

124 
	sfõld_öfo
 {

125 
u2
 
	macc_Êags
;

126 
u2
 
	m«me_idx
;

127 
u2
 
	mdesc_idx
;

128 
u2
 
	m©å_cou¡
;

130 
©å_öfo_t
 * 
	m©ås
;

133 
java_˛ass
 * 
	mow√r
;

134 
c⁄°_poﬁ_öfo_t
 * 
	m˝e
;

135 
u1
 
	mhas_c⁄°
;

136 
v¨_t
 * 
	mvÆue
;

138 } 
	tfõld_öfo_t
;

141 
	e˛ass_°©us
 {

142 
	mCLS_NONE
,

143 
	mCLS_LOADED
,

144 
	mCLS_PREPPED
,

145 
	mCLS_INITED
,

146 } 
	t˛ass_°©_t
;

149 
	sjava_˛ass
 {

150 
u4
 
	mmagic
;

151 
u2
 
	mmö‹_vîsi⁄
;

152 
u2
 
	mmaj‹_vîsi⁄
;

153 
u2
 
	mc⁄°_poﬁ_cou¡
;

154 
c⁄°_poﬁ_öfo_t
 **
	mc⁄°_poﬁ
;

155 
u2
 
	macc_Êags
;

156 
u2
 
	mthis
;

157 
u2
 
	msu≥r
;

158 
u2
 
	möãrÁ˚s_cou¡
;

159 
u2
 *
	möãrÁ˚s
;

160 
u2
 
	mfõlds_cou¡
;

161 
fõld_öfo_t
 *
	mfõlds
;

162 
u2
 
	mmëhods_cou¡
;

163 
mëhod_öfo_t
 * 
	mmëhods
;

164 
u2
 
	m©å_cou¡
;

165 
©å_öfo_t
 ** 
	m©åibuãs
;

167 
˛ass_°©_t
 
	m°©us
;

169 
v¨_t
 * 
	mfõld_vÆs
;

171 c⁄° * 
	m«me
;

173 } 
	tjava_˛ass_t
;

176 
	~<li°.h
>

179 
	s«tive_obje˘
 {

182 
u2
 
	m‹dî
;

184 
li°_hód
 
	mlök
;

186 
java_˛ass_t
 * 
	m˛ass
;

190 
u2
 
	mvÆ
;

192 
	s_obj
 {

193 
u1
 
	mißºay
 : 1;

194 
u1
 
	mgc_m¨k
 : 1;

195 
u2
 
	m∑d
 : 14;

196 } 
obj
 
__©åibuã__
((
∑cked
));

198 
	s_¨r
 {

199 
u1
 
	mißºay
 : 1;

200 
u1
 
	mgc_m¨k
 : 1;

201 
u1
 
	mty≥
 : 5;

202 
u2
 
	mÀngth
 : 9;

203 } 
¨øy
 
__©åibuã__
((
∑cked
));

205 } 
Êags
 
__©åibuã__
((
∑cked
));

207 
u2
 
	mfõld_cou¡
;

209 
v¨_t
 * 
	mfõlds
;

212 
fõld_öfo_t
 ** 
	mfõld_öfos
;

214 } 
	t«tive_obj_t
;

217 c⁄° * 
hb_gë_c⁄°_°r
(
u2
 
idx
, 
java_˛ass
 * 
˛s
);

218 c⁄° * 
hb_gë_˛ass_«me
(
java_˛ass
 * 
˛s
);

221 
java_˛ass_t
 * 
hb_ªsﬁve_˛ass
(
u2
 
c⁄°_idx
, java_˛ass_à* 
§c_˛s
);

224 
fõld_öfo_t
 * 
hb_föd_fõld
 (
u2
 
idx
, 
java_˛ass_t
 * 
§c_˛s
, java_˛ass_à* 
èrgë_˛s
);

225 
hb_ªsﬁve_fõld
 (
fõld_öfo_t
 * 
f
, 
«tive_obj_t
 * 
obj
, 
java_˛ass_t
 * 
˛s
, 
u2
 
c⁄°_idx
);

226 
hb_ªsﬁve_°©ic_fõld
 (
fõld_öfo_t
 * 
f
, 
java_˛ass_t
 * 
˛s
, 
u2
 
c⁄°_idx
);

229 
mëhod_öfo_t
 * 
hb_föd_mëhod_by_desc
 (c⁄° * 
m«me
,

230 c⁄° * 
mdesc
,

231 
java_˛ass_t
 * 
˛s
);

232 
mëhod_öfo_t
 * 
hb_gë_˘‹_möfo
(
java_˛ass_t
 * 
˛s
);

233 
mëhod_öfo_t
 * 
hb_ªsﬁve_mëhod
(
u2
 
c⁄°_idx
, 
java_˛ass_t
 * 
§c_˛s
, java_˛ass_à* 
èrgë_˛s
);

234 
hb_gë_mëhod_idx
(c⁄° * 
«me
, 
java_˛ass_t
 * 
˛s
);

237 
hb_¥ï_˛ass
(
java_˛ass_t
 * 
˛s
);

238 
hb_öô_˛ass
(
java_˛ass_t
 * 
˛s
);

241 
hb_˛assm≠_öô
();

242 
hb_˛ass_is_lﬂded
(c⁄° * 
˛ass_nm
);

243 
hb_add_˛ass
 (c⁄° * 
˛ass_nm
, 
java_˛ass_t
 * 
˛s
);

244 
java_˛ass_t
 * 
hb_gë_˛ass
 (c⁄° * 
˛ass_nm
);

245 
java_˛ass_t
 * 
hb_gë_‹_lﬂd_˛ass
 (c⁄° * 
˛ass_nm
);

248 
hb_£tup_obj_fõlds
 (
«tive_obj_t
 * 
obj
, 
java_˛ass_t
 * 
˛s
);

249 
hb_gë_obj_fõld_cou¡
 (
java_˛ass_t
 * 
˛s
);

252 c⁄° * 
hb_gë_su≥r_˛ass_nm
 (
java_˛ass_t
 * 
˛s
);

253 
java_˛ass_t
 * 
hb_gë_su≥r_˛ass
 (java_˛ass_à* 
˛s
);

256 
nk_hashèbÀ
 * 
hb_gë_˛assm≠
();

259 
ölöe
 

260 
	$hb_gë_fõld_cou¡
 (
java_˛ass_t
 * 
˛s
)

262  
˛s
->
fõlds_cou¡
;

263 
	}
}

265 
ölöe
 

266 
	$hb_is_öãrÁ˚
 (
java_˛ass_t
 * 
˛s
)

268  
˛s
->
acc_Êags
 & 
ACC_INTERFACE
;

269 
	}
}

271 
ölöe
 

272 
	$hb_is_ab°ø˘
 (
java_˛ass_t
 * 
˛s
)

274  
˛s
->
acc_Êags
 & 
ACC_ABSTRACT
;

275 
	}
}

277 
ölöe
 

278 
	$hb_u£_su≥r_£m
 (
java_˛ass_t
 * 
˛s
)

280  
˛s
->
acc_Êags
 & 
ACC_SUPER
;

281 
	}
}

283 
ölöe
 

284 
	$hb_is_public
 (
java_˛ass_t
 * 
˛s
)

286  
˛s
->
acc_Êags
 & 
ACC_PUBLIC
;

287 
	}
}

290 
ölöe
 

291 
	$hb_gë_max_loˇls
 (
java_˛ass_t
 * 
˛s
, 
mëhod_idx
)

293  
˛s
->
mëhods
[
mëhod_idx
].
code_©å
->
max_loˇls
;

294 
	}
}

296 
ölöe
 

297 
	$hb_gë_max_›rs
 (
java_˛ass_t
 * 
˛s
, 
mëhod_idx
)

299  
˛s
->
mëhods
[
mëhod_idx
].
code_©å
->
max_°ack
;

300 
	}
}

	@include/config.h

1 #i‚de‡
__CONFIG_H__


2 
	#__CONFIG_H__


	)

10 
	#DEBUG_ENABLE
 1

	)

16 
	#DEBUG_INTERP
 1

17 
	#DEBUG_GC
 0

18 
	#DEBUG_MM
 0

19 
	#DEBUG_BUDDY
 0

20 
	#DEBUG_EXCP
 0

21 
	#DEBUG_CLASS
 1

22 
	#DEBUG_NATIVE
 0

23 
	#DEBUG_THREAD
 0

24 
	#DEBUG_STACK
 0

25 

	)

	@include/constants.h

15 #i‚de‡
__CONSTANTS_H__


16 
	#__CONSTANTS_H__


	)

19 
	#CONSTANT_Cœss
 7

	)

20 
	#CONSTANT_Fõldªf
 9

	)

21 
	#CONSTANT_Mëhodªf
 10

	)

22 
	#CONSTANT_I¡îÁ˚Mëhodªf
 11

	)

23 
	#CONSTANT_Såög
 8

	)

24 
	#CONSTANT_I¡egî
 3

	)

25 
	#CONSTANT_Flﬂt
 4

	)

26 
	#CONSTANT_L⁄g
 5

	)

27 
	#CONSTANT_DoubÀ
 6

	)

28 
	#CONSTANT_NameAndTy≥
 12

	)

29 
	#CONSTANT_Utf8
 1

	)

30 
	#CONSTANT_MëhodH™dÀ
 15

	)

31 
	#CONSTANT_MëhodTy≥
 16

	)

32 
	#CONSTANT_InvokeDy«mic
 18

	)

34 
	~<ty≥s.h
>

37 
	sCONSTANT_Cœss_öfo
 {

38 
u1
 
	mèg
;

39 
u2
 
	m«me_idx
;

40 } 
	tCONSTANT_Cœss_öfo_t
;

42 
	sCONSTANT_Fõldªf_öfo
 {

43 
u1
 
	mèg
;

44 
u2
 
	m˛ass_idx
;

45 
u2
 
	m«me_™d_ty≥_idx
;

46 } 
	tCONSTANT_Fõldªf_öfo_t
;

48 
	sCONSTANT_Mëhodªf_öfo
 {

49 
u1
 
	mèg
;

50 
u2
 
	m˛ass_idx
;

51 
u2
 
	m«me_™d_ty≥_idx
;

52 } 
	tCONSTANT_Mëhodªf_öfo_t
;

54 
	sCONSTANT_I¡îÁ˚Mëhodªf_öfo
 {

55 
u1
 
	mèg
;

56 
u2
 
	m˛ass_idx
;

57 
u2
 
	m«me_™d_ty≥_idx
;

58 } 
	tCONSTANT_I¡îÁ˚Mëhodªf_öfo_t
;

60 
	sCONSTANT_Såög_öfo
 {

61 
u1
 
	mèg
;

62 
u2
 
	m°r_idx
;

63 } 
	tCONSTANT_Såög_öfo_t
;

65 
	sCONSTANT_I¡egî_öfo
 {

66 
u1
 
	mèg
;

67 
u4
 
	mbyãs
;

68 } 
	tCONSTANT_I¡egî_öfo_t
;

70 
	sCONSTANT_Flﬂt_öfo
 {

71 
u1
 
	mèg
;

72 
u4
 
	mbyãs
;

73 } 
	tCONSTANT_Flﬂt_öfo_t
;

75 
	sCONSTANT_L⁄g_öfo
 {

76 
u1
 
	mèg
;

77 
u4
 
	mhi_byãs
;

78 
u4
 
	mlo_byãs
;

79 } 
	tCONSTANT_L⁄g_öfo_t
;

81 
	sCONSTANT_DoubÀ_öfo
 {

82 
u1
 
	mèg
;

83 
u4
 
	mhi_byãs
;

84 
u4
 
	mlo_byãs
;

85 } 
	tCONSTANT_DoubÀ_öfo_t
;

87 
	sCONSTANT_NameAndTy≥_öfo
 {

88 
u1
 
	mèg
;

89 
u2
 
	m«me_idx
;

90 
u2
 
	mdesc_idx
;

91 } 
	tCONSTANT_NameAndTy≥_öfo_t
;

93 
	sCONSTANT_Utf8_öfo
 {

94 
u1
 
	mèg
;

95 
u2
 
	mÀn
;

96 
u1
 
	mbyãs
[0];

97 } 
	tCONSTANT_Utf8_öfo_t
;

99 
	sCONSTANT_MëhodH™dÀ_öfo
 {

100 
u1
 
	mèg
;

101 
u1
 
	mªf_köd
;

102 
u2
 
	mªf_idx
;

103 } 
	tCONSTANT_MëhodH™dÀ_öfo_t
;

105 
	sCONSTANT_MëhodTy≥_öfo
 {

106 
u1
 
	mèg
;

107 
u2
 
	mdesc_idx
;

108 } 
	tCONSTANT_MëhodTy≥_öfo_t
;

110 
	sCONSTANT_InvokeDy«mic_öfo
 {

111 
u1
 
	mèg
;

112 
u2
 
	mboŸ°øp_mëhod_©å_idx
;

113 
u2
 
	m«me_™d_ty≥_idx
;

114 } 
	tCONSTANT_InvokeDy«mic_öfo_t
;

	@include/exceptions.h

15 #i‚de‡
__EXCEPTIONS_H__


16 
	#__EXCEPTIONS_H__


	)

18 
	~<ty≥s.h
>

19 
	~<hawkbóns.h
>

21 #i‡
DEBUG_EXCP
 == 1

22 
	#EXCP_DEBUG
(
fmt
, 
¨gs
...Ë
	`HB_DEBUG
(fmt, ##¨gs)

	)

24 
	#EXCP_DEBUG
(
fmt
, 
¨gs
...)

	)

27 
	#EXCP_NULL_PTR
 0

	)

28 
	#EXCP_IDX_OOB
 1

	)

29 
	#EXCP_ARR_IDX_OOB
 2

	)

30 
	#EXCP_INCMP_CLS_CH
 3

	)

31 
	#EXCP_NEG_ARR_SIZE
 4

	)

32 
	#EXCP_OOM
 5

	)

33 
	#EXCP_CLS_NO_FOUND
 6

	)

34 
	#EXCP_ARITH
 7

	)

35 
	#EXCP_NO_FIELD
 8

	)

36 
	#EXCP_NO_METHOD
 9

	)

37 
	#EXCP_RUNTIME
 10

	)

38 
	#EXCP_IO
 11

	)

39 
	#EXCP_NO_FILE
 12

	)

40 
	#EXCP_INT
 13

	)

41 
	#EXCP_NUM_FORMAT
 14

	)

42 
	#EXCP_STR_IDXZ_OOB
 15

	)

45 
hb_throw_™d_¸óã_ex˝
 (
u1
 
ty≥
);

46 
hb_throw_ex˚±i⁄
 (
obj_ªf
 * 
îef
);

	@include/gc.h

15 #i‚de‡
__GC_H__


16 
	#__GC_H__


	)

18 
	~<hawkbóns.h
>

20 #i‡
DEBUG_GC
 == 1

21 
	#GC_DEBUG
(
fmt
, 
¨gs
...Ë
	`HB_DEBUG
(fmt, ##¨gs)

	)

23 
	#GC_DEBUG
(
fmt
, 
¨gs
...)

	)

27 
	#GC_DEFAULT_INTERVAL
 20

	)

29 
	gnk_hashèbÀ
;

30 
	gjthªad
;

32 
	eªf_°©e
 {

33 
	mGC_REF_ABSENT
,

34 
	mGC_REF_PRESENT
,

35 } 
	tªf_°©e_t
;

38 
	sªf_íåy
 {

39 
ªf_°©e_t
 
	m°©e
;

40 } 
	tªf_íåy_t
;

42 
	sgc_ªf_tbl
 {

43 
nk_hashèbÀ
 * 
	mhèbÀ
;

44 } 
	tgc_ªf_tbl_t
;

46 
	sgc_°©s
 {

47 
u8
 
	mgc_time
;

48 
u8
 
	mm¨k_time
;

49 
u8
 
	mswìp_time
;

50 
u4
 
	mobj_cﬁÀ˘ed
;

51 
u4
 
	mbyãs_ª˛aimed
;

52 } 
	tgc_°©s_t
;

54 
	sgc_time
 {

55 
u8
 
	mtime_sö˚_cﬁÀ˘
;

56 
	möãrvÆ_ms
;

57 } 
	tgc_time_t
;

59 
	sgc_°©e
 {

60 
li°_hód
 
	mroŸ_li°
;

61 
gc_ªf_tbl_t
 * 
	mªf_tbl
;

63 
gc_°©s_t
 
	mcﬁÀ˘_°©s
;

64 
gc_time_t
 
	mtime_öfo
;

65 
	måa˚
;

66 } 
	tgc_°©e_t
;

68 
	sgc_roŸ
 {

69 
li°_hód
 
	mlök
;

70 (*
	msˇn
)(
gc_°©e
 * 
	mgc_°©e
, * 
	m¥iv_d©a
);

71 c⁄° * 
	m«me
;

72 * 
	m±r
;

73 } 
	tgc_roŸ_t
;

76 
gc_ö£π_ªf
(
obj_ªf
 * 
ªf
);

77 
gc_cﬁÀ˘
(
jthªad
 * 
t
);

78 
gc_should_cﬁÀ˘
(
jthªad
 * 
t
);

79 
gc_öô
(
jthªad
 * 
maö
, 
obj_ªf
 * 
ba£_obj
, 
åa˚
, 
öãrvÆ
);

82 
obj_ªf
 * 
gc_¨øy_Æloc
(
u1
 
ty≥
, 
i4
 
cou¡
);

83 
obj_ªf
 * 
gc_°r_obj_Æloc
(c⁄° * 
°r
);

84 
obj_ªf
 * 
gc_obj_Æloc
(
java_˛ass
 * 
˛s
);

	@include/hashtable.h

37 #i‚de‡
__HASHTABLE_H__


38 
	#__HASHTABLE_H__


	)

40 
	gnk_hashèbÀ
;

98 
	#DEFINE_HASHTABLE_INSERT
(
‚«me
, 
keyty≥
, 
vÆuëy≥
) \

99 
	`‚«me
 (
nk_hashèbÀ
 * 
hèbÀ
, 
keyty≥
 
key
, 
vÆuëy≥
 
vÆue
) { \

100  
	`nk_hèbÀ_ö£π
(
hèbÀ
, ()
key
, ()
vÆue
); \

101 }

	)

103 
	#DEFINE_HASHTABLE_SEARCH
(
‚«me
, 
keyty≥
, 
vÆuëy≥
) \

104 
vÆuëy≥
 * 
	`‚«me
 (
nk_hashèbÀ
 * 
hèbÀ
, 
keyty≥
 
key
) { \

105  (
vÆuëy≥
 *Ë(
	`nk_hèbÀ_£¨ch
(
hèbÀ
, ()
key
)); \

106 }

	)

108 
	#DEFINE_HASHTABLE_REMOVE
(
‚«me
, 
keyty≥
, 
vÆuëy≥
, 
‰ì_key
) \

109 
vÆuëy≥
 * 
	`‚«me
 (
nk_hashèbÀ
 * 
hèbÀ
, 
keyty≥
 
key
) { \

110  (
vÆuëy≥
 *Ë(
	`nk_hèbÀ_ªmove
(
hèbÀ
, ()
key
, 
‰ì_key
)); \

111 }

	)

118 
nk_hash_l⁄g
(
vÆ
, 
bôs
);

119 
nk_hash_buf„r
(* 
msg
, 
Àngth
);

123 
nk_hashèbÀ
 * 
nk_¸óã_hèbÀ
(
mö_size
,

124 (*
hashfun˘i⁄
Ë(
key
),

125 (*
key_eq_‚
Ë(
key1
, 
key2
));

127 
	`nk_‰ì_hèbÀ
(
nk_hashèbÀ
 * 
hèbÀ
, 
‰ì_vÆues
, 
‰ì_keys
);

141 
	`nk_hèbÀ_ö£π
(
nk_hashèbÀ
 * 
hèbÀ
, 
key
, 
vÆue
);

143 
	`nk_hèbÀ_ch™ge
(
nk_hashèbÀ
 * 
hèbÀ
, 
key
, 
vÆue
, 
‰ì_vÆue
);

147 
	`nk_hèbÀ_£¨ch
(
nk_hashèbÀ
 * 
hèbÀ
, 
key
);

150 
	`nk_hèbÀ_ªmove
(
nk_hashèbÀ
 * 
hèbÀ
, 
key
, 
‰ì_key
);

152 
	`nk_hèbÀ_cou¡
(
nk_hashèbÀ
 * 
hèbÀ
);

155 
	`nk_hèbÀ_öc
(
nk_hashèbÀ
 * 
hèbÀ
, 
key
, 
vÆue
);

156 
	`nk_hèbÀ_dec
(
nk_hashèbÀ
 * 
hèbÀ
, 
key
, 
vÆue
);

163 
	#DEFINE_HASHTABLE_ITERATOR_SEARCH
(
‚«me
, 
keyty≥
) \

164 
	`‚«me
 (
nk_hashèbÀ_ôr
 * 
ôî
, 
nk_hashèbÀ
 * 
hèbÀ
, 
keyty≥
 * 
key
) { \

165  (
	`nk_hèbÀ_ôî_£¨ch
(
ôî
, 
hèbÀ
, 
key
)); \

166 
	}

	)
}

173 
	snk_hashèbÀ_ôî
 {

174 
nk_hashèbÀ
 * 
	mhèbÀ
;

175 
nk_hash_íåy
 * 
	míåy
;

176 
nk_hash_íåy
 * 
	m∑ª¡
;

177 
	mödex
;

181 
nk_hashèbÀ_ôî
 * 
nk_¸óã_hèbÀ_ôî
(
nk_hashèbÀ
 * 
hèbÀ
);

182 
nk_de°roy_hèbÀ_ôî
(
nk_hashèbÀ_ôî
 * 
ôî
);

186 
nk_hèbÀ_gë_ôî_key
(
nk_hashèbÀ_ôî
 * 
ôî
);

195 
nk_hèbÀ_gë_ôî_vÆue
(
nk_hashèbÀ_ôî
 * 
ôî
);

204 
nk_hèbÀ_ôî_adv™˚
(
nk_hashèbÀ_ôî
 * 
ôî
);

211 
nk_hèbÀ_ôî_ªmove
(
nk_hashèbÀ_ôî
 * 
ôî
, 
‰ì_key
);

217 
nk_hèbÀ_ôî_£¨ch
(
nk_hashèbÀ_ôî
 * 
ôî
, 
nk_hashèbÀ
 * 
hèbÀ
, 
key
);

	@include/hawkbeans.h

15 #i‚de‡
__HAWKBEANS_H__


16 
	#__HAWKBEANS_H__


	)

18 
	#HAWKBEANS_VERSION_STRING
 "0.0.1"

	)

21 
	~<°dio.h
>

22 
	#HB_INFO
(
fmt
, 
¨gs
...Ë
	`¥ötf
("Hawkbóns: " fmt, ##¨gs)

	)

23 
	#HB_ERR
(
fmt
, 
¨gs
...Ë
	`Ârötf
(
°dîr
, "HB ERROR: " fmt, ##¨gs)

	)

25 
	~<c⁄fig.h
>

27 #i‡
DEBUG_ENABLE
 == 1

28 
	#HB_DEBUG
(
fmt
, 
¨gs
...Ë
	`Ârötf
(
°dîr
, "HB DEBUG: " fmt, ##¨gs)

	)

30 
	#HB_DEBUG
(
fmt
, 
¨gs
...)

	)

	@include/hb_util.h

15 #i‚de‡
__HB_UTIL_H__


16 
	#__HB_UTIL_H__


	)

18 
	~<°döt.h
>

26 
__©åibuã__
((c⁄°, 
n‹ëu∫
)Ë
____ûog2_NaN
();

28 
	#is_powî_of_2
(
x
Ë((xË!0 && (((xË& ((xË- 1)Ë=0))

	)

34 
ölöe
 
__©åibuã__
((const)) 

35 
	$__ûog2_u32
 (
uöt32_t
 
n
)

37  (8*(Ë- 
	`__buûtö_˛z
(
n
) - 1);

38 
	}
}

44 
ölöe
 
__©åibuã__
((const)) 

45 
	$__ûog2_u64
 (
uöt64_t
 
n
)

47  (8*(Ë- 
	`__buûtö_˛zŒ
(
n
) - 1);

48 
	}
}

50 
ölöe
 

51 
	$Ês
 (
x
)

53 
r
;

64 
	`asm
("bsrl %1,%0"

65 : "Ù" (
r
)

66 : "rm" (
x
), "0" (-1));

67  
r
 + 1;

68 
	}
}

82 
ölöe
 

83 
	$Ês64
 (
uöt64_t
 
x
)

85 
bôpos
 = -1;

91 
	`asm
("bsrq %1,%q0"

92 : "+r" (
bôpos
)

93 : "rm" (
x
));

94  
bôpos
 + 1;

95 
	}
}

98 
ölöe
 

99 
	$Ês_l⁄g
 (
l
)

101 i‡((
l
)== 4) {

102  
	`Ês
(
l
);

104  
	`Ês64
(
l
);

105 
	}
}

116 
	#roundup_pow_of_two
(
n
) \

118 
	`__buûtö_c⁄°™t_p
(
n
) ? ( \

119 (
n
 == 1) ? 1 : \

120 (1UL << (
	`ûog2
((
n
) - 1) + 1)) \

122 
	`__roundup_pow_of_two
(
n
) \

123 )

	)

128 
ölöe
 
__©åibuã__
((const)) 

129 
	$__roundup_pow_of_two
 (
n
)

131  1UL << 
	`Ês_l⁄g
(
n
 - 1);

132 
	}
}

134 #i‚de‡
ûog2


135 
	#ûog2
(
n
) \

137 
	`__buûtö_c⁄°™t_p
(
n
) ? ( \

138 (
n
Ë< 1 ? 
	`____ûog2_NaN
() : \

139 (
n
) & (1ULL << 63) ? 63 : \

140 (
n
) & (1ULL << 62) ? 62 : \

141 (
n
) & (1ULL << 61) ? 61 : \

142 (
n
) & (1ULL << 60) ? 60 : \

143 (
n
) & (1ULL << 59) ? 59 : \

144 (
n
) & (1ULL << 58) ? 58 : \

145 (
n
) & (1ULL << 57) ? 57 : \

146 (
n
) & (1ULL << 56) ? 56 : \

147 (
n
) & (1ULL << 55) ? 55 : \

148 (
n
) & (1ULL << 54) ? 54 : \

149 (
n
) & (1ULL << 53) ? 53 : \

150 (
n
) & (1ULL << 52) ? 52 : \

151 (
n
) & (1ULL << 51) ? 51 : \

152 (
n
) & (1ULL << 50) ? 50 : \

153 (
n
) & (1ULL << 49) ? 49 : \

154 (
n
) & (1ULL << 48) ? 48 : \

155 (
n
) & (1ULL << 47) ? 47 : \

156 (
n
) & (1ULL << 46) ? 46 : \

157 (
n
) & (1ULL << 45) ? 45 : \

158 (
n
) & (1ULL << 44) ? 44 : \

159 (
n
) & (1ULL << 43) ? 43 : \

160 (
n
) & (1ULL << 42) ? 42 : \

161 (
n
) & (1ULL << 41) ? 41 : \

162 (
n
) & (1ULL << 40) ? 40 : \

163 (
n
) & (1ULL << 39) ? 39 : \

164 (
n
) & (1ULL << 38) ? 38 : \

165 (
n
) & (1ULL << 37) ? 37 : \

166 (
n
) & (1ULL << 36) ? 36 : \

167 (
n
) & (1ULL << 35) ? 35 : \

168 (
n
) & (1ULL << 34) ? 34 : \

169 (
n
) & (1ULL << 33) ? 33 : \

170 (
n
) & (1ULL << 32) ? 32 : \

171 (
n
) & (1ULL << 31) ? 31 : \

172 (
n
) & (1ULL << 30) ? 30 : \

173 (
n
) & (1ULL << 29) ? 29 : \

174 (
n
) & (1ULL << 28) ? 28 : \

175 (
n
) & (1ULL << 27) ? 27 : \

176 (
n
) & (1ULL << 26) ? 26 : \

177 (
n
) & (1ULL << 25) ? 25 : \

178 (
n
) & (1ULL << 24) ? 24 : \

179 (
n
) & (1ULL << 23) ? 23 : \

180 (
n
) & (1ULL << 22) ? 22 : \

181 (
n
) & (1ULL << 21) ? 21 : \

182 (
n
) & (1ULL << 20) ? 20 : \

183 (
n
) & (1ULL << 19) ? 19 : \

184 (
n
) & (1ULL << 18) ? 18 : \

185 (
n
) & (1ULL << 17) ? 17 : \

186 (
n
) & (1ULL << 16) ? 16 : \

187 (
n
) & (1ULL << 15) ? 15 : \

188 (
n
) & (1ULL << 14) ? 14 : \

189 (
n
) & (1ULL << 13) ? 13 : \

190 (
n
) & (1ULL << 12) ? 12 : \

191 (
n
) & (1ULL << 11) ? 11 : \

192 (
n
) & (1ULL << 10) ? 10 : \

193 (
n
) & (1ULL << 9) ? 9 : \

194 (
n
) & (1ULL << 8) ? 8 : \

195 (
n
) & (1ULL << 7) ? 7 : \

196 (
n
) & (1ULL << 6) ? 6 : \

197 (
n
) & (1ULL << 5) ? 5 : \

198 (
n
) & (1ULL << 4) ? 4 : \

199 (
n
) & (1ULL << 3) ? 3 : \

200 (
n
) & (1ULL << 2) ? 2 : \

201 (
n
) & (1ULL << 1) ? 1 : \

202 (
n
) & (1ULL << 0) ? 0 : \

203 
	`____ûog2_NaN
() \

205 ((
n
) <= 4) ? \

206 
	`__ûog2_u32
(
n
) : \

207 
	`__ûog2_u64
(
n
) \

208 )

	)

211 
	#DIV_ROUND_UP
(
n
,
d
Ë((“Ë+ (dË- 1Ë/ (d))

	)

212 
	#BITS_PER_BYTE
 8

	)

213 
	#BITS_PER_INT
 (()*
BITS_PER_BYTE
)

	)

214 
	#BITS_PER_LONG
 (()*
BITS_PER_BYTE
)

	)

216 
	#BIT
(
ƒ
Ë(1UL << (ƒ))

	)

217 
	#BIT_MASK
(
ƒ
Ë(1UL << (“rË% 
BITS_PER_LONG
))

	)

218 
	#BIT_WORD
(
ƒ
Ë(“rË/ 
BITS_PER_LONG
)

	)

219 
	#BITS_PER_BYTE
 8

	)

220 
	#BITS_TO_LONGS
(
ƒ
Ë
	`DIV_ROUND_UP
“r, 
BITS_PER_BYTE
 * ())

	)

221 
	#mö
(
x
, 
y
) ({ \

222 
	`ty≥of
(
x
Ë
_mö1
 = (x); \

223 
	`ty≥of
(
y
Ë
_mö2
 = (y); \

224 (Ë(&
_mö1
 =(*)&
_mö2
); \

225 
_mö1
 < 
_mö2
 ? _mö1 : _mö2; })

	)

227 
	#max
(
x
, 
y
) ({ \

228 
	`ty≥of
(
x
Ë
_max1
 = (x); \

229 
	`ty≥of
(
y
Ë
_max2
 = (y); \

230 (Ë(&
_max1
 =(*)&
_max2
); \

231 
_max1
 > 
_max2
 ? _max1 : _max2; })

	)

233 
	#mö3
(
x
, 
y
, 
z
) ({ \

234 
	`ty≥of
(
x
Ë
_mö1
 = (x); \

235 
	`ty≥of
(
y
Ë
_mö2
 = (y); \

236 
	`ty≥of
(
z
Ë
_mö3
 = (z); \

237 (Ë(&
_mö1
 =(*)&
_mö2
); \

238 (Ë(&
_mö1
 =(*)&
_mö3
); \

239 
_mö1
 < 
_mö2
 ? (_mö1 < 
_mö3
 ? _min1 : _min3) : \

240 (
_mö2
 < 
_mö3
 ? _mö2 : _mö3); })

	)

242 
	#max3
(
x
, 
y
, 
z
) ({ \

243 
	`ty≥of
(
x
Ë
_max1
 = (x); \

244 
	`ty≥of
(
y
Ë
_max2
 = (y); \

245 
	`ty≥of
(
z
Ë
_max3
 = (z); \

246 (Ë(&
_max1
 =(*)&
_max2
); \

247 (Ë(&
_max1
 =(*)&
_max3
); \

248 
_max1
 > 
_max2
 ? (_max1 > 
_max3
 ? _max1 : _max3) : \

249 (
_max2
 > 
_max3
 ? _max2 : _max3); })

	)

253 
	#f‹_óch_£t_bô
(
bô
, 
addr
, 
size
) \

254 (
bô
Ë
	`föd_fú°_bô
((
addr
), (
size
)); \

255 (
bô
Ë< (
size
); \

256 (
bô
Ë
	`föd_√xt_bô
((
addr
), (
size
), (bôË+ 1))

	)

259 
	#f‹_óch_£t_bô_‰om
(
bô
, 
addr
, 
size
) \

260 (
bô
Ë
	`föd_√xt_bô
((
addr
), (
size
), (bit)); \

261 (
bô
Ë< (
size
); \

262 (
bô
Ë
	`föd_√xt_bô
((
addr
), (
size
), (bôË+ 1))

	)

264 
	#f‹_óch_˛ór_bô
(
bô
, 
addr
, 
size
) \

265 (
bô
Ë
	`föd_fú°_zîo_bô
((
addr
), (
size
)); \

266 (
bô
Ë< (
size
); \

267 (
bô
Ë
	`föd_√xt_zîo_bô
((
addr
), (
size
), (bôË+ 1))

	)

270 
	#f‹_óch_˛ór_bô_‰om
(
bô
, 
addr
, 
size
) \

271 (
bô
Ë
	`föd_√xt_zîo_bô
((
addr
), (
size
), (bit)); \

272 (
bô
Ë< (
size
); \

273 (
bô
Ë
	`föd_√xt_zîo_bô
((
addr
), (
size
), (bôË+ 1))

	)

278 
	#smÆl_c⁄°_nbôs
(
nbôs
) \

279 (
	`__buûtö_c⁄°™t_p
(
nbôs
Ë&& (nbôsË<
BITS_PER_LONG
)

	)

281 
ölöe
 

282 
	$bôm≠_zîo
 (*
d°
, 
nbôs
)

284 i‡(
	`smÆl_c⁄°_nbôs
(
nbôs
))

285 *
d°
 = 0UL;

287 
Àn
 = 
	`BITS_TO_LONGS
(
nbôs
) * ();

288 
	`mem£t
(
d°
, 0, 
Àn
);

290 
	}
}

292 
ölöe
 

293 
	$ã°_bô
 (
ƒ
, c⁄° vﬁ©ûê*
addr
)

295  ((1UL << (
ƒ
 % 
BITS_PER_LONG
)) &

296 (
addr
[
ƒ
 / 
BITS_PER_LONG
])) != 0;

297 
	}
}

	@include/list.h

21 #i‚de‡
__LIST_H__


22 
	#__LIST_H__


	)

25 #unde‡
off£tof


26 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
Ë&((TYPE *)0)->MEMBER)

	)

29 
	#c⁄èöî_of
(
±r
, 
ty≥
, 
membî
) ({ \

30 c⁄° 
	`ty≥of
–((
ty≥
 *)0)->
membî
 ) *
__m±r
 = (
±r
); \

31 (
ty≥
 *)–(*)
__m±r
 - 
	`off£tof
—y≥,
membî
Ë);})

	)

35 
	#¥e„tch
(
x
Ë
	`__buûtö_¥e„tch
(x)

	)

44 
	#LIST_POISON1
 ((*Ë0xf000000000100100ULL)

	)

45 
	#LIST_POISON2
 ((*Ë0xf000000000200200ULL)

	)

57 
	sli°_hód
 {

58 
li°_hód
 *
	m√xt
, *
	m¥ev
;

61 
	#LIST_HEAD_INIT
(
«me
Ë{ &“ame), &“ameË}

	)

63 
	#LIST_HEAD
(
«me
) \

64 
li°_hód
 
«me
 = 
	`LIST_HEAD_INIT
“ame)

	)

66 
ölöe
 
	$INIT_LIST_HEAD
(
li°_hód
 *
li°
)

68 
li°
->
√xt
 =Üist;

69 
li°
->
¥ev
 =Üist;

70 
	}
}

78 
ölöe
 
	$__li°_add
(
li°_hód
 *
√lm
,

79 
li°_hód
 *
¥ev
,

80 
li°_hód
 *
√xt
)

82 
√xt
->
¥ev
 = 
√lm
;

83 
√lm
->
√xt
 =Çext;

84 
√lm
->
¥ev
 =Örev;

85 
¥ev
->
√xt
 = 
√lm
;

86 
	}
}

96 
ölöe
 
	$li°_add
(
li°_hód
 *
√lm
, li°_hód *
hód
)

98 
	`__li°_add
(
√lm
, 
hód
, hód->
√xt
);

99 
	}
}

109 
ölöe
 
	$li°_add_èû
(
li°_hód
 *
√lm
, li°_hód *
hód
)

111 
	`__li°_add
(
√lm
, 
hód
->
¥ev
, head);

112 
	}
}

121 
ölöe
 
	$__li°_dñ
(
li°_hód
 * 
¥ev
, li°_hód * 
√xt
)

123 
√xt
->
¥ev
 =Örev;

124 
¥ev
->
√xt
 =Çext;

125 
	}
}

133 
ölöe
 
	$li°_dñ
(
li°_hód
 *
íåy
)

135 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

136 
íåy
->
√xt
 = (
li°_hód
*)
LIST_POISON1
;

137 
íåy
->
¥ev
 = (
li°_hód
*)
LIST_POISON2
;

138 
	}
}

144 
ölöe
 
	$li°_dñ_öô
(
li°_hód
 *
íåy
)

146 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

147 
	`INIT_LIST_HEAD
(
íåy
);

148 
	}
}

155 
ölöe
 
	$li°_move
(
li°_hód
 *
li°
, li°_hód *
hód
)

157 
	`__li°_dñ
(
li°
->
¥ev
,Üi°->
√xt
);

158 
	`li°_add
(
li°
, 
hód
);

159 
	}
}

166 
ölöe
 
	$li°_move_èû
(
li°_hód
 *
li°
,

167 
li°_hód
 *
hód
)

169 
	`__li°_dñ
(
li°
->
¥ev
,Üi°->
√xt
);

170 
	`li°_add_èû
(
li°
, 
hód
);

171 
	}
}

177 
ölöe
 
	$li°_em±y
(c⁄° 
li°_hód
 *
hód
)

179  
hód
->
√xt
 == head;

180 
	}
}

194 
ölöe
 
	$li°_em±y_ˇªful
(c⁄° 
li°_hód
 *
hód
)

196 
li°_hód
 *
√xt
 = 
hód
->next;

197  (
√xt
 =
hód
Ë&& (√xà=hód->
¥ev
);

198 
	}
}

200 
ölöe
 
	$__li°_•li˚
(
li°_hód
 *
li°
,

201 
li°_hód
 *
hód
)

203 
li°_hód
 *
fú°
 = 
li°
->
√xt
;

204 
li°_hód
 *
œ°
 = 
li°
->
¥ev
;

205 
li°_hód
 *
©
 = 
hód
->
√xt
;

207 
fú°
->
¥ev
 = 
hód
;

208 
hód
->
√xt
 = 
fú°
;

210 
œ°
->
√xt
 = 
©
;

211 
©
->
¥ev
 = 
œ°
;

212 
	}
}

219 
ölöe
 
	$li°_•li˚
(
li°_hód
 *
li°
, li°_hód *
hód
)

221 i‡(!
	`li°_em±y
(
li°
))

222 
	`__li°_•li˚
(
li°
, 
hód
);

223 
	}
}

232 
ölöe
 
	$li°_•li˚_öô
(
li°_hód
 *
li°
,

233 
li°_hód
 *
hód
)

235 i‡(!
	`li°_em±y
(
li°
)) {

236 
	`__li°_•li˚
(
li°
, 
hód
);

237 
	`INIT_LIST_HEAD
(
li°
);

239 
	}
}

247 
	#li°_íåy
(
±r
, 
ty≥
, 
membî
) \

248 
	`c⁄èöî_of
(
±r
, 
ty≥
, 
membî
)

	)

256 
	#li°_èû_íåy
(
hód
, 
ty≥
, 
membî
) ({ \

257 
ty≥
 * 
èû
 = 
NULL
; \

258 i‡((
hód
)->
¥ev
 != (head)) { \

259 
èû
 = 
	`li°_íåy
((
hód
)->
¥ev
, 
ty≥
, 
membî
); \

261 
èû
; \

262 })

	)

270 
	#li°_fú°_íåy
(
hód
, 
ty≥
, 
membî
) \

272 
ty≥
 * 
fú°
 = 
NULL
; \

273 i‡((
hód
)->
√xt
 != (head)) { \

274 
fú°
 = 
	`li°_íåy
((
hód
)->
√xt
, 
ty≥
, 
membî
); \

276 
fú°
; \

277 })

	)

287 
	#li°_√xt_íåy
(
node
, 
ty≥
, 
membî
) \

289 
ty≥
 * 
√xt
 = 
NULL
; \

290 i‡((
node
)->
√xt
 != (node)) { \

291 
√xt
 = 
	`li°_íåy
((
node
)->√xt, 
ty≥
, 
membî
); \

293 
√xt
; \

294 })

	)

296 
	#li°_¥ev_íåy
(
pos
, 
membî
) \

297 
	`li°_íåy
((
pos
)->
membî
.
¥ev
, 
	`ty≥of
(*’os)), membî)

	)

304 
	#li°_f‹_óch
(
pos
, 
hód
) \

305 
pos
 = (
hód
)->
√xt
; 
	`¥e„tch
(pos->next),Öos != (head); \

306 
pos
 =Öos->
√xt
)

	)

318 
	#__li°_f‹_óch
(
pos
, 
hód
) \

319 
pos
 = (
hód
)->
√xt
;Öo†!(hód);Öo†pos->√xt)

	)

326 
	#li°_f‹_óch_¥ev
(
pos
, 
hód
) \

327 
pos
 = (
hód
)->
¥ev
; 
	`¥e„tch
(pos->prev),Öos != (head); \

328 
pos
 =Öos->
¥ev
)

	)

336 
	#li°_f‹_óch_ß„
(
pos
, 
n
, 
hód
) \

337 
pos
 = (
hód
)->
√xt
, 
n
 =Öos->next;Öos != (head); \

338 
pos
 = 
n
,Ç =Öos->
√xt
)

	)

346 
	#li°_f‹_óch_íåy
(
pos
, 
hód
, 
membî
) \

347 
pos
 = 
	`li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
); \

348 
	`¥e„tch
(
pos
->
membî
.
√xt
), &pos->membî !(
hód
); \

349 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), membî))

	)

357 
	#li°_f‹_óch_íåy_ªvî£
(
pos
, 
hód
, 
membî
) \

358 
pos
 = 
	`li°_íåy
((
hód
)->
¥ev
, 
	`ty≥of
(*pos), 
membî
); \

359 
	`¥e„tch
(
pos
->
membî
.
¥ev
), &pos->membî !(
hód
); \

360 
pos
 = 
	`li°_íåy
’os->
membî
.
¥ev
, 
	`ty≥of
(*pos), membî))

	)

369 
	#li°_¥ï¨e_íåy
(
pos
, 
hód
, 
membî
) \

370 ((
pos
Ë? : 
	`li°_íåy
(
hód
, 
	`ty≥of
(*pos), 
membî
))

	)

379 
	#li°_f‹_óch_íåy_c⁄töue
(
pos
, 
hód
, 
membî
) \

380 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

381 
	`¥e„tch
(
pos
->
membî
.
√xt
), &pos->membî !(
hód
); \

382 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), membî))

	)

391 
	#li°_f‹_óch_íåy_‰om
(
pos
, 
hód
, 
membî
) \

392 ; 
	`¥e„tch
(
pos
->
membî
.
√xt
), &pos->membî !(
hód
); \

393 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), membî))

	)

402 
	#li°_f‹_óch_íåy_ß„
(
pos
, 
n
, 
hód
, 
membî
) \

403 
pos
 = 
	`li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
), \

404 
n
 = 
	`li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

405 &
pos
->
membî
 !(
hód
); \

406 
pos
 = 
n
,Ç = 
	`li°_íåy
“->
membî
.
√xt
, 
	`ty≥of
(*n), membî))

	)

416 
	#li°_f‹_óch_íåy_ß„_c⁄töue
(
pos
, 
n
, 
hód
, 
membî
) \

417 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member), \

418 
n
 = 
	`li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

419 &
pos
->
membî
 !(
hód
); \

420 
pos
 = 
n
,Ç = 
	`li°_íåy
“->
membî
.
√xt
, 
	`ty≥of
(*n), membî))

	)

430 
	#li°_f‹_óch_íåy_ß„_‰om
(
pos
, 
n
, 
hód
, 
membî
) \

431 
n
 = 
	`li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

432 &
pos
->
membî
 !(
hód
); \

433 
pos
 = 
n
,Ç = 
	`li°_íåy
“->
membî
.
√xt
, 
	`ty≥of
(*n), membî))

	)

443 
	#li°_f‹_óch_íåy_ß„_ªvî£
(
pos
, 
n
, 
hód
, 
membî
) \

444 
pos
 = 
	`li°_íåy
((
hód
)->
¥ev
, 
	`ty≥of
(*pos), 
membî
), \

445 
n
 = 
	`li°_íåy
(
pos
->
membî
.
¥ev
, 
	`ty≥of
(*pos), member); \

446 &
pos
->
membî
 !(
hód
); \

447 
pos
 = 
n
,Ç = 
	`li°_íåy
“->
membî
.
¥ev
, 
	`ty≥of
(*n), membî))

	)

456 
	shli°_hód
 {

457 
hli°_node
 *
	mfú°
;

460 
	shli°_node
 {

461 
hli°_node
 *
	m√xt
, **
	mµªv
;

464 
	#HLIST_HEAD_INIT
 { .
fú°
 = 
NULL
 }

	)

465 
	#HLIST_HEAD
(
«me
Ë
hli°_hód
Çamê{ .
fú°
 = 
NULL
 }

	)

466 
	#INIT_HLIST_HEAD
(
±r
Ë(’å)->
fú°
 = 
NULL
)

	)

467 
ölöe
 
	$INIT_HLIST_NODE
(
hli°_node
 *
h
)

469 
h
->
√xt
 = 
NULL
;

470 
h
->
µªv
 = 
NULL
;

471 
	}
}

473 
ölöe
 
	$hli°_unhashed
(c⁄° 
hli°_node
 *
h
)

475  !
h
->
µªv
;

476 
	}
}

478 
ölöe
 
	$hli°_em±y
(c⁄° 
hli°_hód
 *
h
)

480  !
h
->
fú°
;

481 
	}
}

483 
ölöe
 
	$__hli°_dñ
(
hli°_node
 *
n
)

485 
hli°_node
 *
√xt
 = 
n
->next;

486 
hli°_node
 **
µªv
 = 
n
->pprev;

487 *
µªv
 = 
√xt
;

488 i‡(
√xt
)

489 
√xt
->
µªv
 =Öprev;

490 
	}
}

492 
ölöe
 
	$hli°_dñ
(
hli°_node
 *
n
)

494 
	`__hli°_dñ
(
n
);

495 
n
->
√xt
 = (
hli°_node
*)
LIST_POISON1
;

496 
n
->
µªv
 = (
hli°_node
**)
LIST_POISON2
;

497 
	}
}

499 
ölöe
 
	$hli°_dñ_öô
(
hli°_node
 *
n
)

501 i‡(!
	`hli°_unhashed
(
n
)) {

502 
	`__hli°_dñ
(
n
);

503 
	`INIT_HLIST_NODE
(
n
);

505 
	}
}

507 
ölöe
 
	$hli°_add_hód
(
hli°_node
 *
n
, 
hli°_hód
 *
h
)

509 
hli°_node
 *
fú°
 = 
h
->first;

510 
n
->
√xt
 = 
fú°
;

511 i‡(
fú°
)

512 
fú°
->
µªv
 = &
n
->
√xt
;

513 
h
->
fú°
 = 
n
;

514 
n
->
µªv
 = &
h
->
fú°
;

515 
	}
}

518 
ölöe
 
	$hli°_add_bef‹e
(
hli°_node
 *
n
,

519 
hli°_node
 *
√xt
)

521 
n
->
µªv
 = 
√xt
->pprev;

522 
n
->
√xt
 =Çext;

523 
√xt
->
µªv
 = &
n
->next;

524 *(
n
->
µªv
) =Ç;

525 
	}
}

527 
ölöe
 
	$hli°_add_a·î
(
hli°_node
 *
n
,

528 
hli°_node
 *
√xt
)

530 
√xt
->√xà
n
->next;

531 
n
->
√xt
 =Çext;

532 
√xt
->
µªv
 = &
n
->next;

534 if(
√xt
->next)

535 
√xt
->√xt->
µªv
 = &next->next;

536 
	}
}

538 
	#hli°_íåy
(
±r
, 
ty≥
, 
membî
Ë
	`c⁄èöî_of
’å,ty≥,membî)

	)

540 
	#hli°_f‹_óch
(
pos
, 
hód
) \

541 
pos
 = (
hód
)->
fú°
;Öo†&& ({ 
	`¥e„tch
’os->
√xt
); 1; }); \

542 
pos
 =Öos->
√xt
)

	)

544 
	#hli°_f‹_óch_ß„
(
pos
, 
n
, 
hód
) \

545 
pos
 = (
hód
)->
fú°
;Öo†&& ({ 
n
 =Öos->
√xt
; 1; }); \

546 
pos
 = 
n
)

	)

555 
	#hli°_f‹_óch_íåy
(
ços
, 
pos
, 
hód
, 
membî
) \

556 
pos
 = (
hód
)->
fú°
; \

557 
pos
 && ({ 
	`¥e„tch
’os->
√xt
); 1;}) && \

558 ({ 
ços
 = 
	`hli°_íåy
(
pos
, 
	`ty≥of
(*ços), 
membî
); 1;}); \

559 
pos
 =Öos->
√xt
)

	)

567 
	#hli°_f‹_óch_íåy_c⁄töue
(
ços
, 
pos
, 
membî
) \

568 
pos
 = (pos)->
√xt
; \

569 
pos
 && ({ 
	`¥e„tch
’os->
√xt
); 1;}) && \

570 ({ 
ços
 = 
	`hli°_íåy
(
pos
, 
	`ty≥of
(*ços), 
membî
); 1;}); \

571 
pos
 =Öos->
√xt
)

	)

579 
	#hli°_f‹_óch_íåy_‰om
(
ços
, 
pos
, 
membî
) \

580 ; 
pos
 && ({ 
	`¥e„tch
’os->
√xt
); 1;}) && \

581 ({ 
ços
 = 
	`hli°_íåy
(
pos
, 
	`ty≥of
(*ços), 
membî
); 1;}); \

582 
pos
 =Öos->
√xt
)

	)

592 
	#hli°_f‹_óch_íåy_ß„
(
ços
, 
pos
, 
n
, 
hód
, 
membî
) \

593 
pos
 = (
hód
)->
fú°
; \

594 
pos
 && ({ 
n
 =Öos->
√xt
; 1; }) && \

595 ({ 
ços
 = 
	`hli°_íåy
(
pos
, 
	`ty≥of
(*ços), 
membî
); 1;}); \

596 
pos
 = 
n
)

	)

	@include/methods.h

15 #i‚de‡
__METHODS_H__


16 
	#__METHODS_H__


	)

18 
	#ACC_PUBLIC
 0x0001

19 
	#ACC_PRIVATE
 0x0002

20 
	#ACC_PROTECTED
 0x0004

21 
	#ACC_STATIC
 0x0008

22 
	#ACC_FINAL
 0x0010

23 
	#ACC_SYNCHRONIZED
 0x0020

24 
	#ACC_BRIDGE
 0x0040

25 
	#ACC_VARARGS
 0x0080

26 
	#ACC_NATIVE
 0x0100

27 
	#ACC_ABSTRACT
 0x0400

28 
	#ACC_STRICT
 0x0800

29 
	#ACC_SYNTHETIC
 0x1000

30 

	)

	@include/mm.h

15 #i‚de‡
__MM_H__


16 
	#__MM_H__


	)

19 
	~<ty≥s.h
>

21 
	~<hawkbóns.h
>

23 #i‡
DEBUG_MM
 == 1

24 
	#MM_DEBUG
(
fmt
, 
¨gs
...Ë
	`HB_DEBUG
(fmt, ##¨gs)

	)

26 
	#MM_DEBUG
(
fmt
, 
¨gs
...)

	)

29 #i‡
DEBUG_BUDDY
 == 1

30 
	#BUDDY_DEBUG
(
fmt
, 
¨gs
...Ë
	`HB_DEBUG
(fmt, ##¨gs)

	)

32 
	#BUDDY_DEBUG
(
fmt
, 
¨gs
...)

	)

36 
	#HB_DEFAULT_HEAP_SIZE
 (1024*1024)

	)

38 
	shóp_öfo
 {

39 * 
	mhóp_ªgi⁄
;

41 
u8
 
	mÆloˇãd
;

43 
u2
 
	m‹dî
;

44 
u2
 
	mmö_‹dî
;

45 
u8
 
	mnum_mö_blocks
;

46 
u8
 
	mobj_cou¡
;

47 
li°_hód
 * 
	m‰ì_li°s
;

49 
u8
 * 
	mèg_bôs
;

52 
	gjava_˛ass
;

54 
hóp_öô
(
hóp_size_megs
);

56 
obj_ªf
 * 
¨øy_Æloc
(
u1
 
ty≥
, 
i4
 
cou¡
);

57 
obj_ªf
 * 
°rög_obje˘_Æloc
(c⁄° * 
°r
);

58 
obj_ªf
 * 
obje˘_Æloc
(
java_˛ass
 * 
˛s
);

59 
«tive_obje˘
 * 
Æloc_checked
(c⁄° 
u4
 
size
);

60 
obje˘_‰ì
(
«tive_obje˘
 * 
obj
);

61 * 
buddy_Æloc
 (
u2
 
‹dî
);

62 
buddy_‰ì
 (* 
addr
, 
u2
 
‹dî
);

63 
buddy_°©s
 ();

	@include/mnemonics.h

17 c⁄° * 
	gm√m⁄ics
[256] 
__©åibuã__
((
u£d
)) = {

	@include/native.h

15 #i‚de‡
__NATIVE_H__


16 
	#__NATIVE_H__


	)

18 
	~<ty≥s.h
>

19 
	~<hawkbóns.h
>

21 #i‡
DEBUG_NATIVE
 == 1

22 
	#NATIVE_DEBUG
(
fmt
, 
¨gs
...Ë
	`HB_DEBUG
(fmt, ##¨gs)

	)

24 
	#NATIVE_DEBUG
(
fmt
, 
¨gs
...)

	)

27 
	gmëhod_öfo
;

28 
	gjava_˛ass
;

30 
hb_h™dÀ_«tive
 (
mëhod_öfo
 * 
mi
,

31 
java_˛ass
 * 
˛s
,

32 
u1
 
övoke_ty≥
);

	@include/opcode_map.h

16 
›_h™dÀr_t
 
	gh™dÀrs
[256] = {

17 
h™dÀ_n›
,

18 
h™dÀ_ac⁄°_nuŒ
,

19 
h™dÀ_ic⁄°_m1
,

20 
h™dÀ_ic⁄°_0
,

21 
h™dÀ_ic⁄°_1
,

22 
h™dÀ_ic⁄°_2
,

23 
h™dÀ_ic⁄°_3
,

24 
h™dÀ_ic⁄°_4
,

25 
h™dÀ_ic⁄°_5
,

26 
h™dÀ_lc⁄°_0
,

27 
h™dÀ_lc⁄°_1
,

28 
h™dÀ_fc⁄°_0
,

29 
h™dÀ_fc⁄°_1
,

30 
h™dÀ_fc⁄°_2
,

31 
h™dÀ_dc⁄°_0
,

32 
h™dÀ_dc⁄°_1
,

33 
h™dÀ_bùush
,

34 
h™dÀ_sùush
,

35 
h™dÀ_ldc
,

36 
h™dÀ_ldc_w
,

37 
h™dÀ_ldc2_w
,

38 
h™dÀ_ûﬂd
,

39 
h™dÀ_Œﬂd
,

40 
h™dÀ_Êﬂd
,

41 
h™dÀ_dlﬂd
,

42 
h™dÀ_Æﬂd
,

43 
h™dÀ_ûﬂd_0
,

44 
h™dÀ_ûﬂd_1
,

45 
h™dÀ_ûﬂd_2
,

46 
h™dÀ_ûﬂd_3
,

47 
h™dÀ_Œﬂd_0
,

48 
h™dÀ_Œﬂd_1
,

49 
h™dÀ_Œﬂd_2
,

50 
h™dÀ_Œﬂd_3
,

51 
h™dÀ_Êﬂd_0
,

52 
h™dÀ_Êﬂd_1
,

53 
h™dÀ_Êﬂd_2
,

54 
h™dÀ_Êﬂd_3
,

55 
h™dÀ_dlﬂd_0
,

56 
h™dÀ_dlﬂd_1
,

57 
h™dÀ_dlﬂd_2
,

58 
h™dÀ_dlﬂd_3
,

59 
h™dÀ_Æﬂd_0
,

60 
h™dÀ_Æﬂd_1
,

61 
h™dÀ_Æﬂd_2
,

62 
h™dÀ_Æﬂd_3
,

63 
h™dÀ_ülﬂd
,

64 
h™dÀ_œlﬂd
,

65 
h™dÀ_Álﬂd
,

66 
h™dÀ_dÆﬂd
,

67 
h™dÀ_Ølﬂd
,

68 
h™dÀ_bÆﬂd
,

69 
h™dÀ_ˇlﬂd
,

70 
h™dÀ_ßlﬂd
,

71 
h™dÀ_i°‹e
,

72 
h™dÀ_l°‹e
,

73 
h™dÀ_f°‹e
,

74 
h™dÀ_d°‹e
,

75 
h™dÀ_a°‹e
,

76 
h™dÀ_i°‹e_0
,

77 
h™dÀ_i°‹e_1
,

78 
h™dÀ_i°‹e_2
,

79 
h™dÀ_i°‹e_3
,

80 
h™dÀ_l°‹e_0
,

81 
h™dÀ_l°‹e_1
,

82 
h™dÀ_l°‹e_2
,

83 
h™dÀ_l°‹e_3
,

84 
h™dÀ_f°‹e_0
,

85 
h™dÀ_f°‹e_1
,

86 
h™dÀ_f°‹e_2
,

87 
h™dÀ_f°‹e_3
,

88 
h™dÀ_d°‹e_0
,

89 
h™dÀ_d°‹e_1
,

90 
h™dÀ_d°‹e_2
,

91 
h™dÀ_d°‹e_3
,

92 
h™dÀ_a°‹e_0
,

93 
h™dÀ_a°‹e_1
,

94 
h™dÀ_a°‹e_2
,

95 
h™dÀ_a°‹e_3
,

96 
h™dÀ_ü°‹e
,

97 
h™dÀ_œ°‹e
,

98 
h™dÀ_Á°‹e
,

99 
h™dÀ_da°‹e
,

100 
h™dÀ_Ø°‹e
,

101 
h™dÀ_ba°‹e
,

102 
h™dÀ_ˇ°‹e
,

103 
h™dÀ_ß°‹e
,

104 
h™dÀ_p›
,

105 
h™dÀ_p›2
,

106 
h™dÀ_dup
,

107 
h™dÀ_dup_x1
,

108 
h™dÀ_dup_x2
,

109 
h™dÀ_dup2
,

110 
h™dÀ_dup2_x1
,

111 
h™dÀ_dup2_x2
,

112 
h™dÀ_sw≠
,

113 
h™dÀ_üdd
,

114 
h™dÀ_œdd
,

115 
h™dÀ_Ádd
,

116 
h™dÀ_dadd
,

117 
h™dÀ_isub
,

118 
h™dÀ_lsub
,

119 
h™dÀ_fsub
,

120 
h™dÀ_dsub
,

121 
h™dÀ_imul
,

122 
h™dÀ_lmul
,

123 
h™dÀ_fmul
,

124 
h™dÀ_dmul
,

125 
h™dÀ_idiv
,

126 
h™dÀ_ldiv
,

127 
h™dÀ_fdiv
,

128 
h™dÀ_ddiv
,

129 
h™dÀ_úem
,

130 
h™dÀ_Ãem
,

131 
h™dÀ_‰em
,

132 
h™dÀ_dªm
,

133 
h™dÀ_öeg
,

134 
h™dÀ_ eg
,

135 
h™dÀ_‚eg
,

136 
h™dÀ_d√g
,

137 
h™dÀ_ishl
,

138 
h™dÀ_lshl
,

139 
h™dÀ_ishr
,

140 
h™dÀ_lshr
,

141 
h™dÀ_iushr
,

142 
h™dÀ_lushr
,

143 
h™dÀ_ünd
,

144 
h™dÀ_œnd
,

145 
h™dÀ_i‹
,

146 
h™dÀ_l‹
,

147 
h™dÀ_ix‹
,

148 
h™dÀ_lx‹
,

149 
h™dÀ_iöc
,

150 
h™dÀ_i2l
,

151 
h™dÀ_i2f
,

152 
h™dÀ_i2d
,

153 
h™dÀ_l2i
,

154 
h™dÀ_l2f
,

155 
h™dÀ_l2d
,

156 
h™dÀ_f2i
,

157 
h™dÀ_f2l
,

158 
h™dÀ_f2d
,

159 
h™dÀ_d2i
,

160 
h™dÀ_d2l
,

161 
h™dÀ_d2f
,

162 
h™dÀ_i2b
,

163 
h™dÀ_i2c
,

164 
h™dÀ_i2s
,

165 
h™dÀ_lcmp
,

166 
h™dÀ_fcm∂
,

167 
h™dÀ_fcmpg
,

168 
h™dÀ_dcm∂
,

169 
h™dÀ_dcmpg
,

170 
h™dÀ_i„q
,

171 
h™dÀ_i‚e
,

172 
h™dÀ_iÊt
,

173 
h™dÀ_ifge
,

174 
h™dÀ_ifgt
,

175 
h™dÀ_iÊe
,

176 
h™dÀ_if_icm≥q
,

177 
h™dÀ_if_icm≤e
,

178 
h™dÀ_if_icm∂t
,

179 
h™dÀ_if_icmpge
,

180 
h™dÀ_if_icmpgt
,

181 
h™dÀ_if_icm∂e
,

182 
h™dÀ_if_acm≥q
,

183 
h™dÀ_if_acm≤e
,

184 
h™dÀ_gŸo
,

185 
h™dÀ_j§
,

186 
h™dÀ_ªt
,

187 
h™dÀ_èbÀswôch
,

188 
h™dÀ_lookupswôch
,

189 
h™dÀ_úëu∫
,

190 
h™dÀ_Ãëu∫
,

191 
h™dÀ_‰ëu∫
,

192 
h™dÀ_dªtu∫
,

193 
h™dÀ_¨ëu∫
,

194 
h™dÀ_ªtu∫
,

195 
h™dÀ_gë°©ic
,

196 
h™dÀ_put°©ic
,

197 
h™dÀ_gëfõld
,

198 
h™dÀ_putfõld
,

199 
h™dÀ_övokevútuÆ
,

200 
h™dÀ_övoke•ecül
,

201 
h™dÀ_övoke°©ic
,

202 
h™dÀ_övokeöãrÁ˚
,

203 
h™dÀ_övokedy«mic
,

204 
h™dÀ_√w
,

205 
h™dÀ_√w¨øy
,

206 
h™dÀ_™ew¨øy
,

207 
h™dÀ_¨øyÀngth
,

208 
h™dÀ_©hrow
,

209 
h™dÀ_checkˇ°
,

210 
h™dÀ_ö°™˚of
,

211 
h™dÀ_m⁄ô‹íãr
,

212 
h™dÀ_m⁄ô‹exô
,

213 
h™dÀ_wide
,

214 
h™dÀ_mu…ü√w¨øy
,

215 
h™dÀ_i‚uŒ
,

216 
h™dÀ_i‚⁄nuŒ
,

217 
h™dÀ_gŸo_w
,

218 
h™dÀ_j§_w
,

219 
h™dÀ_bªakpoöt
,

220 
h™dÀ_övÆid
,

221 
h™dÀ_övÆid
,

222 
h™dÀ_övÆid
,

223 
h™dÀ_övÆid
,

224 
h™dÀ_övÆid
,

225 
h™dÀ_övÆid
,

226 
h™dÀ_övÆid
,

227 
h™dÀ_övÆid
,

228 
h™dÀ_övÆid
,

229 
h™dÀ_övÆid
,

230 
h™dÀ_övÆid
,

231 
h™dÀ_övÆid
,

232 
h™dÀ_övÆid
,

233 
h™dÀ_övÆid
,

234 
h™dÀ_övÆid
,

235 
h™dÀ_övÆid
,

236 
h™dÀ_övÆid
,

237 
h™dÀ_övÆid
,

238 
h™dÀ_övÆid
,

239 
h™dÀ_övÆid
,

240 
h™dÀ_övÆid
,

241 
h™dÀ_övÆid
,

242 
h™dÀ_övÆid
,

243 
h™dÀ_övÆid
,

244 
h™dÀ_övÆid
,

245 
h™dÀ_övÆid
,

246 
h™dÀ_övÆid
,

247 
h™dÀ_övÆid
,

248 
h™dÀ_övÆid
,

249 
h™dÀ_övÆid
,

250 
h™dÀ_övÆid
,

251 
h™dÀ_övÆid
,

252 
h™dÀ_övÆid
,

253 
h™dÀ_övÆid
,

254 
h™dÀ_övÆid
,

255 
h™dÀ_övÆid
,

256 
h™dÀ_övÆid
,

257 
h™dÀ_övÆid
,

258 
h™dÀ_övÆid
,

259 
h™dÀ_övÆid
,

260 
h™dÀ_övÆid
,

261 
h™dÀ_övÆid
,

262 
h™dÀ_övÆid
,

263 
h™dÀ_övÆid
,

264 
h™dÀ_övÆid
,

265 
h™dÀ_övÆid
,

266 
h™dÀ_övÆid
,

267 
h™dÀ_övÆid
,

268 
h™dÀ_övÆid
,

269 
h™dÀ_övÆid
,

270 
h™dÀ_övÆid
,

271 
h™dÀ_impdï1
,

272 
h™dÀ_impdï2
,

	@include/stack.h

15 #i‚de‡
__STACK_H__


16 
	#__STACK_H__


	)

18 
	~<˛ass.h
>

19 
	~<hawkbóns.h
>

21 #i‡
DEBUG_STACXK
 == 1

22 
	#ST_DEBUG
(
fmt
, 
¨gs
...Ë
	`HB_DEBUG
(fmt, ##¨gs)

	)

24 
	#ST_DEBUG
(
fmt
, 
¨gs
...)

	)

28 
	#ST_INVOKE_SPECIAL
 0

	)

29 
	#ST_INVOKE_STATIC
 1

	)

30 
	#ST_INVOKE_VIRT
 2

	)

32 
	s›_°ack
 {

33 
u4
 
	mmax_›rs
;

34 
	m•
;

36 
°ack_‰ame
 * 
	m‰ame
;

38 
v¨_t
 
	m›rs
[0];

40 } 
	t›_°ack_t
;

43 
	s°ack_‰ame
 {

45 
u2
 
	mpc
;

47 
mëhod_öfo_t
 * 
	mmöfo
;

49 
v¨_t
 * 
	mloˇls
;

50 
u4
 
	mmax_loˇls
;

52 
›_°ack_t
 * 
	m›_°ack
;

54 
°ack_‰ame
 * 
	m¥ev
;

55 
°ack_‰ame
 * 
	m√xt
;

57 
jthªad
 * 
	mow√r
;

59 
java_˛ass
 * 
	m˛s
;

61 } 
	t°ack_‰ame_t
;

64 
hb_push_ba£_‰ame
 (
jthªad
 * 
t
,

65 
java_˛ass_t
 * 
˛s
,

66 
obj_ªf_t
 * 
ba£_obj
,

67 
u2
 
mëhod_idx
);

69 
hb_dump_›_°ack
 ();

70 
hb_dump_loˇls
();

71 
hb_p›_‰ame
 (
jthªad
 * 
t
);

72 
hb_push_‰ame_by_mëhod
 (
jthªad
 * 
t
,

73 
mëhod_öfo
 * 
mi
);

74 
hb_push_‰ame
 (
jthªad
 * 
t
,

75 
java_˛ass_t
 * 
˛s
,

76 
u2
 
mëhod_idx
);

77 
hb_push_˘‹_‰ame
 (
jthªad
 * 
t
, 
obj_ªf
 * 
‹ef
);

79 
hb_gë_∑rm_cou¡_‰om_mëhod
 (
jthªad
 * 
t
,

80 
mëhod_öfo
 * 
mi
,

81 
u1
 
övoke_ty≥
,

82 * 
nwide
);

83 
hb_£tup_mëhod_∑rms
 (
jthªad
 * 
t
,

84 
mëhod_öfo
 * 
mi
,

85 
u1
 
övoke_ty≥
);

	@include/thread.h

15 #i‚de‡
__THREAD_H__


16 
	#__THREAD_H__


	)

18 
	~<hawkbóns.h
>

19 
	~<ty≥s.h
>

20 
	~<li°.h
>

22 #i‡
DEBUG_THREAD
 == 1

23 
	#THR_DEBUG
(
fmt
, 
¨gs
...Ë
	`HB_DEBUG
(fmt, ##¨gs)

	)

25 
	#THR_DEBUG
(
fmt
, 
¨gs
...)

	)

29 
	sjthªad
 {

31 
°ack_‰ame
 * 
	mcur_‰ame
;

33 
java_˛ass
 * 
	m˛ass
;

35 
gc_°©e
 * 
	mgc_°©e
;

37 c⁄° * 
	m«me
;

39 } 
	tjthªad_t
;

42 
jthªad_t
 *

43 
hb_¸óã_thªad
(
java_˛ass
 * 
˛s
, c⁄° * 
«me
);

	@include/types.h

15 #i‚de‡
__TYPES_H__


16 
	#__TYPES_H__


	)

19 
	ti8
;

20 
	ti4
;

21 
	ti2
;

22 
	tu8
;

23 
	tu4
;

24 
	tu2
;

25 
	tu1
;

26 
	tf4
;

27 
	td8
;

29 
	#HB_NULL
 (0)

	)

31 
	#T_BOOLEAN
 4

	)

32 
	#T_CHAR
 5

	)

33 
	#T_FLOAT
 6

	)

34 
	#T_DOUBLE
 7

	)

35 
	#T_BYTE
 8

	)

36 
	#T_SHORT
 9

	)

37 
	#T_INT
 10

	)

38 
	#T_LONG
 11

	)

39 
	#T_REF
 12

	)

	@src/arch/x64-linux/bootstrap_loader.c

15 
	~<sys/mm™.h
>

16 
	~<sys/°©.h
>

17 
	~<î∫o.h
>

18 
	~<°rög.h
>

19 
	~<f˙é.h
>

21 
	~<hawkbóns.h
>

22 
	~<ty≥s.h
>

23 
	~<c⁄°™ts.h
>

24 
	~<˛ass.h
>

26 
	~<¨ch/x64-löux/boŸ°øp_lﬂdî.h
>

27 
	~<¨ch/x64-löux/utû.h
>

29 
	#GET_AND_INC
(
fõld
, 
sz
) \

30 
˛s
->
fõld
 = 
gë_u
##
	`sz
(
˛b
); clb +
sz


	)

32 
	#PARSE_AND_CHECK
(
cou¡
, 
func
, 
°r
) \

33 i‡(
˛s
->
cou¡
 > 0) { \

34 
skù
 = 0; \

35 i‡(
	`func
(
˛b
, 
˛s
, &
skù
) != 0) { \

36 
	`HB_ERR
("CouldÇŸÖ¨£ %s\n", 
°r
); \

39 
˛b
 +
skù
; \

40 }

	)

43 
u1
*

44 
	$›í_˛ass_fûe
 (c⁄° * 
∑th
)

46 
fd
;

47 
°©
 
s
;

48 * 
cm
 = 
NULL
;

49 c⁄° * 
suf
 = ".class";

50 
buf
[512];

53 i‡(!
	`°r°r
(
∑th
, 
suf
)) {

54 
	`mem£t
(
buf
, 0, 512);

55 
	`°∫˝y
(
buf
, 
∑th
, 512);

56 
	`°∫ˇt
(
buf
, 
suf
, 7);

57 
∑th
 = 
buf
;

60 i‡((
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
)) == -1) {

61 
	`HB_ERR
("CouldÇŸ o≥¿fûê(%s): %s\n", 
∑th
, 
	`°ªº‹
(
î∫o
));

62  
NULL
;

65 i‡(
	`f°©
(
fd
, &
s
) == -1) {

66 
	`HB_ERR
("CouldÇŸ sèàfûê(%s): %s\n", 
∑th
, 
	`°ªº‹
(
î∫o
));

67  
NULL
;

70 i‡((
cm
 = 
	`mm≠
(
NULL
,

71 
s
.
°_size
,

72 
PROT_READ
,

73 
MAP_PRIVATE
,

74 
fd
,

75 0)Ë=
MAP_FAILED
) {

76 
	`HB_ERR
("CouldÇŸ m≠ fûê(%s): %s\n", 
∑th
, 
	`°ªº‹
(
î∫o
));

77  
NULL
;

80  (
u1
*)
cm
;

81 
	}
}

84 
c⁄°_poﬁ_öfo_t
 *

85 
	$∑r£_c⁄°_poﬁ_íåy
 (
u1
 * 
±r
, u1 * 
sz
)

87 *
±r
) {

88 
CONSTANT_Cœss
: {

89 
CONSTANT_Cœss_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_Class_info_t));

90 
c
->
èg
 = *
±r
;

91 
c
->
«me_idx
 = 
	`gë_u2
(
±r
+1);

92 *
sz
 = 3;

93  (
c⁄°_poﬁ_öfo_t
*)
c
;

95 
CONSTANT_Fõldªf
: {

96 
CONSTANT_Fõldªf_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_Fieldref_info_t));

97 
c
->
èg
 = *
±r
;

98 
c
->
˛ass_idx
 = 
	`gë_u2
(
±r
+1);

99 
c
->
«me_™d_ty≥_idx
 = 
	`gë_u2
(
±r
+3);

100 *
sz
 = 5;

101  (
c⁄°_poﬁ_öfo_t
*)
c
;

103 
CONSTANT_Mëhodªf
: {

104 
CONSTANT_Mëhodªf_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_Methodref_info_t));

105 
c
->
èg
 = *
±r
;

106 
c
->
˛ass_idx
 = 
	`gë_u2
(
±r
+1);

107 
c
->
«me_™d_ty≥_idx
 = 
	`gë_u2
(
±r
+3);

108 *
sz
 = 5;

109  (
c⁄°_poﬁ_öfo_t
*)
c
;

111 
CONSTANT_I¡îÁ˚Mëhodªf
: {

112 
CONSTANT_I¡îÁ˚Mëhodªf_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_InterfaceMethodref_info_t));

113 
c
->
èg
 = *
±r
;

114 
c
->
˛ass_idx
 = 
	`gë_u2
(
±r
+1);

115 
c
->
«me_™d_ty≥_idx
 = 
	`gë_u2
(
±r
+3);

116 *
sz
 = 5;

117  (
c⁄°_poﬁ_öfo_t
*)
c
;

119 
CONSTANT_Såög
: {

120 
CONSTANT_Såög_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_String_info_t));

121 
c
->
èg
 = *
±r
;

122 
c
->
°r_idx
 = 
	`gë_u2
(
±r
+1);

123 *
sz
 = 3;

124  (
c⁄°_poﬁ_öfo_t
*)
c
;

126 
CONSTANT_I¡egî
: {

127 
CONSTANT_I¡egî_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_Integer_info_t));

128 
c
->
èg
 = *
±r
;

129 
c
->
byãs
 = 
	`gë_u4
(
±r
+1);

130 *
sz
 = 5;

131  (
c⁄°_poﬁ_öfo_t
*)
c
;

133 
CONSTANT_Flﬂt
: {

134 
CONSTANT_Flﬂt_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_Float_info_t));

135 
c
->
èg
 = *
±r
;

136 
c
->
byãs
 = 
	`gë_u4
(
±r
+1);

137 *
sz
 = 5;

138  (
c⁄°_poﬁ_öfo_t
*)
c
;

140 
CONSTANT_L⁄g
: {

141 
CONSTANT_L⁄g_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_Long_info_t));

142 
c
->
èg
 = *
±r
;

143 
c
->
hi_byãs
 = 
	`gë_u4
(
±r
+1);

144 
c
->
lo_byãs
 = 
	`gë_u4
(
±r
+5);

145 *
sz
 = 9;

146  (
c⁄°_poﬁ_öfo_t
*)
c
;

148 
CONSTANT_DoubÀ
: {

149 
CONSTANT_DoubÀ_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_Double_info_t));

150 
c
->
èg
 = *
±r
;

151 
c
->
hi_byãs
 = 
	`gë_u4
(
±r
+1);

152 
c
->
lo_byãs
 = 
	`gë_u4
(
±r
+5);

153 *
sz
 = 9;

154  (
c⁄°_poﬁ_öfo_t
*)
c
;

156 
CONSTANT_NameAndTy≥
: {

157 
CONSTANT_NameAndTy≥_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_NameAndType_info_t));

158 
c
->
èg
 = *
±r
;

159 
c
->
«me_idx
 = 
	`gë_u2
(
±r
+1);

160 
c
->
desc_idx
 = 
	`gë_u2
(
±r
+3);

161 *
sz
 = 5;

162  (
c⁄°_poﬁ_öfo_t
*)
c
;

164 
CONSTANT_Utf8
: {

165 
CONSTANT_Utf8_öfo_t
 * 
c
 = 
NULL
;

166 
u1
 
èg
 = *
±r
;

167 
u2
 
Àn
 = 
	`gë_u2
(
±r
+1);

168 
c
 = 
	`mÆloc
((
CONSTANT_Utf8_öfo_t
Ë+ 
Àn
 + 1);

169 
c
->
èg
 =Åag;

170 
c
->
Àn
 =Üen;

171 *
sz
 = 3 + 
Àn
;

172 
	`mem£t
(
c
->
byãs
, 0, 
Àn
 + 1);

173 
	`mem˝y
(
c
->
byãs
, 
±r
+3, 
Àn
);

174  (
c⁄°_poﬁ_öfo_t
*)
c
;

176 
CONSTANT_MëhodH™dÀ
: {

177 
CONSTANT_MëhodH™dÀ_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_MethodHandle_info_t));

178 
c
->
èg
 = *
±r
;

179 
c
->
ªf_köd
 = *(
±r
+1);

180 
c
->
ªf_idx
 = 
	`gë_u2
(
±r
+2);

181 *
sz
 = 4;

182  (
c⁄°_poﬁ_öfo_t
*)
c
;

184 
CONSTANT_MëhodTy≥
: {

185 
CONSTANT_MëhodTy≥_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_MethodType_info_t));

186 
c
->
èg
 = *
±r
;

187 
c
->
desc_idx
 = 
	`gë_u2
(
±r
+1);

188 *
sz
 = 3;

189  (
c⁄°_poﬁ_öfo_t
*)
c
;

191 
CONSTANT_InvokeDy«mic
: {

192 
CONSTANT_InvokeDy«mic_öfo_t
 * 
c
 = 
	`mÆloc
((CONSTANT_InvokeDynamic_info_t));

193 
c
->
èg
 = *
±r
;

194 
c
->
boŸ°øp_mëhod_©å_idx
 = 
	`gë_u2
(
±r
+1);

195 
c
->
«me_™d_ty≥_idx
 = 
	`gë_u2
(
±r
+3);

196 *
sz
 = 5;

197  (
c⁄°_poﬁ_öfo_t
*)
c
;

200 
	`HB_ERR
("InvÆid c⁄°™àèg: %d\n", *
±r
);

201  
NULL
;

204  
NULL
;

205 
	}
}

216 
	$∑r£_c⁄°_poﬁ
 (
u1
 * 
˛b
, 
java_˛ass_t
 * 
˛s
, 
u4
 * 
skù
)

218 
i
;

220 
˛s
->
c⁄°_poﬁ
 = (
c⁄°_poﬁ_öfo_t
**)
	`mÆloc
((c⁄°_poﬁ_öfo_t*)*(˛s->
c⁄°_poﬁ_cou¡
));

222 i‡(!
˛s
->
c⁄°_poﬁ
) {

223 
	`HB_ERR
("CouldÇotállocate constantÖool\n");

227 
	`mem£t
(
˛s
->
c⁄°_poﬁ
, 0, (
c⁄°_poﬁ_öfo_t
*)*(˛s->
c⁄°_poﬁ_cou¡
));

229 
i
 = 1; i < 
˛s
->
c⁄°_poﬁ_cou¡
; i++) {

230 
c⁄°_poﬁ_öfo_t
 * 
cöfo
 = 
NULL
;

231 
u1
 
sz
 = 0;

233 
cöfo
 = 
	`∑r£_c⁄°_poﬁ_íåy
(
˛b
, &
sz
);

235 i‡(!
cöfo
) {

236 
	`HB_ERR
("CouldÇŸÖ¨£ c⁄°™àpoﬁÉ¡ry %d\n", 
i
);

240 
˛s
->
c⁄°_poﬁ
[
i
] = 
cöfo
;

242 
˛b
 +
sz
;

243 *
skù
 +
sz
;

248 i‡(
˛s
->
c⁄°_poﬁ
[
i
]->
èg
 =
CONSTANT_L⁄g
 ||

249 
˛s
->
c⁄°_poﬁ
[
i
]->
èg
 =
CONSTANT_DoubÀ
) {

250 
˛s
->
c⁄°_poﬁ
[++
i
] = 
NULL
;

255 
	}
}

259 
	$∑r£_ixes
 (
u1
 * 
˛b
, 
java_˛ass_t
 * 
˛s
, 
u4
 * 
skù
)

261 
i
;

263 
˛s
->
öãrÁ˚s
 = 
	`mÆloc
(˛s->
öãrÁ˚s_cou¡
 * (
u2
));

264 i‡(!
˛s
->
öãrÁ˚s
) {

265 
	`HB_ERR
("CouldÇotállocate interfaces\n");

268 
	`mem£t
(
˛s
->
öãrÁ˚s
, 0, cls->
öãrÁ˚s_cou¡
 * (
u2
));

270 
i
 = 0; i < 
˛s
->
öãrÁ˚s_cou¡
; i++) {

271 
	`GET_AND_INC
(
öãrÁ˚s
[
i
], 2);

272 *
skù
 += 2;

276 
	}
}

278 
ölöe
 
u1


279 
	$is_c⁄°_vÆ_©å
 (
u2
 
«me_idx
, 
java_˛ass_t
 * 
˛s
)

281  
	`°∫cmp
(
	`hb_gë_c⁄°_°r
(
«me_idx
, 
˛s
), "ConstantValue", 13) == 0;

282 
	}
}

285 
	$∑r£_c⁄°_vÆ_©å
 (
u1
 * 
˛b
, 
fõld_öfo_t
 * 
fi
, 
java_˛ass_t
 * 
˛s
)

288 
˛b
+=2;

290 
˛b
+=4;

291 
u2
 
c⁄°_vÆ_idx
 = 
	`gë_u2
(
˛b
); clb+=2;

293 
fi
->
has_c⁄°
 = 1;

294 
fi
->
˝e
 = 
˛s
->
c⁄°_poﬁ
[
c⁄°_vÆ_idx
];

297 
	}
}

300 
	$∑r£_fõlds
 (
u1
 * 
˛b
, 
java_˛ass_t
 * 
˛s
, 
u4
 * 
skù
)

302 
i
;

304 
˛s
->
fõlds
 = 
	`mÆloc
((
fõld_öfo_t
)*˛s->
fõlds_cou¡
);

305 i‡(!
˛s
->
fõlds
) {

306 
	`HB_ERR
("CouldÇotállocate fields\n");

309 
	`mem£t
(
˛s
->
fõlds
, 0, (
fõld_öfo_t
)*˛s->
fõlds_cou¡
);

311 
i
 = 0; i < 
˛s
->
fõlds_cou¡
; i++) {

312 
	`GET_AND_INC
(
fõlds
[
i
].
acc_Êags
, 2);

313 
	`GET_AND_INC
(
fõlds
[
i
].
«me_idx
, 2);

314 
	`GET_AND_INC
(
fõlds
[
i
].
desc_idx
, 2);

315 
	`GET_AND_INC
(
fõlds
[
i
].
©å_cou¡
, 2);

317 
˛s
->
fõlds
[
i
].
ow√r
 = cls;

319 *
skù
 += 8;

321 i‡(
˛s
->
fõlds
[
i
].
©å_cou¡
 > 0) {

322 
j
;

323 
j
 = 0; j < 
˛s
->
fõlds
[
i
].
©å_cou¡
; j++) {

324 
u2
 
«me_idx
;

325 
u4
 
Àn
;

327 
«me_idx
 = 
	`gë_u2
(
˛b
);

328 
˛b
 += 2;

329 
Àn
 = 
	`gë_u4
(
˛b
);

331 i‡(
	`is_c⁄°_vÆ_©å
(
«me_idx
, 
˛s
)) {

332 
	`∑r£_c⁄°_vÆ_©å
(
˛b
-2, &
˛s
->
fõlds
[
i
], cls);

334 
˛b
 +4 + 
Àn
;

335 *
skù
 +6 + 
Àn
;

341 
	}
}

345 
	$∑r£_mëhod_code
 (
u1
 * 
˛b
, 
mëhod_öfo_t
 * 
m
, 
java_˛ass_t
 * 
˛s
)

347 
i
;

349 
u2
 
©å_«me_idx
 = 
	`gë_u2
(
˛b
); clb+=2;

350 
u4
 
©å_Àn
 = 
	`gë_u4
(
˛b
); clb+=4;

352 
m
->
code_©å
 = 
	`mÆloc
((
code_©å_t
));

353 i‡(!
m
->
code_©å
) {

354 
	`HB_ERR
("CouldÇotállocate codeáttribute\n");

357 
	`mem£t
(
m
->
code_©å
, 0, (
code_©å_t
));

359 
m
->
code_©å
->
©å_«me_idx
 =áttr_name_idx;

360 
m
->
code_©å
->
©å_Àn
 =áttr_len;

361 
m
->
code_©å
->
max_°ack
 = 
	`gë_u2
(
˛b
); clb+=2;

362 
m
->
code_©å
->
max_loˇls
 = 
	`gë_u2
(
˛b
); clb+=2;

363 
m
->
code_©å
->
code_Àn
 = 
	`gë_u4
(
˛b
); clb+=4;

365 
m
->
code_©å
->
code
 = 
	`mÆloc
(m->code_©å->
code_Àn
);

366 i‡(!
m
->
code_©å
->
code
) {

367 
	`HB_ERR
("CouldÇotállocate code for method!\n");

371 
	`mem˝y
(
m
->
code_©å
->
code
, 
˛b
, m->code_©å->
code_Àn
);

373 
˛b
 +
m
->
code_©å
->
code_Àn
;

375 
m
->
code_©å
->
ex˝_èbÀ_Àn
 = 
	`gë_u2
(
˛b
); clb+=2;

377 
m
->
code_©å
->
ex˝_èbÀ
 = 
	`mÆloc
((
ex˝_èbÀ_t
)*m->code_©å->
ex˝_èbÀ_Àn
);

378 i‡(!
m
->
code_©å
->
ex˝_èbÀ
) {

379 
	`HB_ERR
("CouldÇotállocateÉxceptionÅable\n");

383 
i
 = 0; i < 
m
->
code_©å
->
ex˝_èbÀ_Àn
; i++) {

384 
m
->
code_©å
->
ex˝_èbÀ
[
i
].
°¨t_pc
 = 
	`gë_u2
(
˛b
); clb+=2;

385 
m
->
code_©å
->
ex˝_èbÀ
[
i
].
íd_pc
 = 
	`gë_u2
(
˛b
); clb+=2;

386 
m
->
code_©å
->
ex˝_èbÀ
[
i
].
h™dÀr_pc
 = 
	`gë_u2
(
˛b
); clb+=2;

387 
m
->
code_©å
->
ex˝_èbÀ
[
i
].
ˇtch_ty≥
 = 
	`gë_u2
(
˛b
); clb+=2;

390 
m
->
code_©å
->
©å_cou¡
 = 
	`gë_u2
(
˛b
);

393 
	}
}

396 
ölöe
 
u1


397 
	$is_code_©å
 (
u2
 
«me_idx
, 
java_˛ass_t
 * 
˛s
)

399  
	`°∫cmp
(
	`hb_gë_c⁄°_°r
(
«me_idx
, 
˛s
), "Code", 4) == 0;

400 
	}
}

403 
ölöe
 
u1


404 
	$is_ex˝_©å
 (
u2
 
«me_idx
, 
java_˛ass_t
 * 
˛s
)

406  
	`°∫cmp
(
	`hb_gë_c⁄°_°r
(
«me_idx
, 
˛s
), "Exception", 9) == 0;

407 
	}
}

412 
	$∑r£_mëhods
 (
u1
 * 
˛b
, 
java_˛ass_t
 * 
˛s
, 
u4
 * 
skù
)

414 
i
, 
j
;

416 
˛s
->
mëhods
 = 
	`mÆloc
((
mëhod_öfo_t
)*˛s->
mëhods_cou¡
);

417 i‡(!
˛s
->
mëhods
) {

418 
	`HB_ERR
("CouldÇotállocate methods\n");

421 
	`mem£t
(
˛s
->
mëhods
, 0, (
mëhod_öfo_t
)*˛s->
mëhods_cou¡
);

423 
i
 = 0; i < 
˛s
->
mëhods_cou¡
; i++) {

424 
	`GET_AND_INC
(
mëhods
[
i
].
acc_Êags
, 2);

425 
	`GET_AND_INC
(
mëhods
[
i
].
«me_idx
, 2);

426 
	`GET_AND_INC
(
mëhods
[
i
].
desc_idx
, 2);

427 
	`GET_AND_INC
(
mëhods
[
i
].
©å_cou¡
, 2);

429 
˛s
->
mëhods
[
i
].
ow√r
 = cls;

431 *
skù
 += 8;

433 i‡(
˛s
->
mëhods
[
i
].
©å_cou¡
 > 0) {

435 
j
 = 0; j < 
˛s
->
mëhods
[
i
].
©å_cou¡
; j++) {

436 
u2
 
«me_idx
;

437 
u4
 
Àn
;

439 
«me_idx
 = 
	`gë_u2
(
˛b
);

440 
˛b
 += 2;

441 
Àn
 = 
	`gë_u4
(
˛b
);

442 
˛b
 += 4;

444 i‡(
	`is_code_©å
(
«me_idx
, 
˛s
)) {

445 
	`∑r£_mëhod_code
(
˛b
-6, &
˛s
->
mëhods
[
i
], cls);

448 
˛b
 +
Àn
;

449 *
skù
 +
Àn
;

455 
	}
}

459 
	$∑r£_©ås
 (
u1
 * 
˛b
, 
java_˛ass_t
 * 
˛s
, 
u4
 * 
skù
)

461 
	`CL_DEBUG
("WARNING: %†nŸ im∂emíãd\n", 
__func__
);

463 
	}
}

467 
	$∑r£_˛ass
 (
u1
 * 
˛b
, 
java_˛ass_t
 * 
˛s
)

469 
u4
 
skù
;

471 
	`GET_AND_INC
(
magic
, 4);

472 
	`GET_AND_INC
(
mö‹_vîsi⁄
, 2);

473 
	`GET_AND_INC
(
maj‹_vîsi⁄
, 2);

474 
	`GET_AND_INC
(
c⁄°_poﬁ_cou¡
, 2);

476 
	`PARSE_AND_CHECK
(
c⁄°_poﬁ_cou¡
, 
∑r£_c⁄°_poﬁ
, "constÖool");

478 
	`GET_AND_INC
(
acc_Êags
, 2);

479 
	`GET_AND_INC
(
this
, 2);

480 
	`GET_AND_INC
(
su≥r
, 2);

481 
	`GET_AND_INC
(
öãrÁ˚s_cou¡
, 2);

483 
	`PARSE_AND_CHECK
(
öãrÁ˚s_cou¡
, 
∑r£_ixes
, "interfaces");

485 
	`GET_AND_INC
(
fõlds_cou¡
, 2);

487 
	`PARSE_AND_CHECK
(
fõlds_cou¡
, 
∑r£_fõlds
, "fields");

489 
	`GET_AND_INC
(
mëhods_cou¡
, 2);

491 
	`PARSE_AND_CHECK
(
mëhods_cou¡
, 
∑r£_mëhods
, "methods");

493 
	`GET_AND_INC
(
©å_cou¡
, 2);

495 
	`PARSE_AND_CHECK
(
©å_cou¡
, 
∑r£_©ås
, "attributes");

498 
	}
}

502 
	$vîify_˛ass
 (
java_˛ass_t
 * 
˛s
)

504 i‡(
˛s
->
magic
 !
JAVA_MAGIC
) {

505 
	`HB_ERR
("Bad magic: 0x%04x\n", 
˛s
->
magic
);

510 
	}
}

513 
	$¥öt_˛ass_öfo
 (
java_˛ass_t
 * 
˛s
)

515 
	`HB_INFO
("Mö‹ Vîsi⁄: %x\n", 
˛s
->
mö‹_vîsi⁄
);

516 
	`HB_INFO
("Maj‹ Vîis⁄: %x\n", 
˛s
->
maj‹_vîsi⁄
);

517 
	`HB_INFO
("C⁄°Öoﬁ cou¡: %d\n", 
˛s
->
c⁄°_poﬁ_cou¡
);

518 
	`HB_INFO
("I¡îÁ˚†cou¡: %d\n", 
˛s
->
öãrÁ˚s_cou¡
);

519 
	`HB_INFO
("Fõld†cou¡: %d\n", 
˛s
->
fõlds_cou¡
);

520 
	`HB_INFO
("Mëhod†cou¡: %d\n", 
˛s
->
mëhods_cou¡
);

521 
	`HB_INFO
("Aâribuã†cou¡: %d\n", 
˛s
->
©å_cou¡
);

522 
	}
}

527 
java_˛ass_t
 *

528 
	$hb_lﬂd_˛ass
 (c⁄° * 
∑th
)

530 
java_˛ass_t
 * 
˛s
 = 
NULL
;

531 
u1
 * 
˛ass_byãs
 = 
NULL
;

533 
˛ass_byãs
 = 
	`›í_˛ass_fûe
(
∑th
);

535 i‡(!
˛ass_byãs
) {

536 
	`HB_ERR
("CouldÇotÜoad class file\n");

537  
NULL
;

540 
˛s
 = 
	`mÆloc
((
java_˛ass_t
));

541 i‡(!
˛s
) {

542 
	`HB_ERR
("CouldÇotállocate class struct\n");

543  
NULL
;

545 
	`mem£t
(
˛s
, 0, (
java_˛ass_t
));

547 i‡(
	`∑r£_˛ass
(
˛ass_byãs
, 
˛s
) != 0) {

548 
	`HB_ERR
("CouldÇotÖarse class file\n");

549  
NULL
;

552 i‡(
	`vîify_˛ass
(
˛s
) != 0) {

553 
	`HB_ERR
("CouldÇot verify class\n");

554  
NULL
;

557 
˛s
->
«me
 = 
∑th
;

559 
	`CL_DEBUG
("Cœs†fûê(f‹ cœs†%sËvîifõdándÜﬂded\n", 
	`hb_gë_˛ass_«me
(
˛s
));

561 
˛s
->
fõld_vÆs
 = 
	`mÆloc
((
v¨_t
)*˛s->
fõlds_cou¡
);

562 i‡(!
˛s
->
fõld_vÆs
) {

563 
	`HB_ERR
("CouldÇotállocate class fields\n");

564  
NULL
;

566 
	`mem£t
(
˛s
->
fõld_vÆs
, 0, (
v¨_t
)*˛s->
fõlds_cou¡
);

568 
˛s
->
°©us
 = 
CLS_LOADED
;

570  
˛s
;

571 
	}
}

	@src/arch/x64-linux/hawkbeans.c

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<gë›t.h
>

19 
	~<hawkbóns.h
>

20 
	~<bc_öãΩ.h
>

21 
	~<˛ass.h
>

22 
	~<thªad.h
>

23 
	~<°ack.h
>

24 
	~<mm.h
>

25 
	~<gc.h
>

27 
	~<¨ch/x64-löux/boŸ°øp_lﬂdî.h
>

29 
jthªad_t
 * 
	gcur_thªad
;

32 
	$vîsi⁄
 ()

34 
	`¥ötf
("Hawkbón†Jav®VútuÆ MachöêVîsi⁄ %s\n", 
HAWKBEANS_VERSION_STRING
);

35 
	`¥ötf
("Kyle C. Hale (c) 2017, Illinois Institute of Technology\n");

36 
	`exô
(
EXIT_SUCCESS
);

37 
	}
}

41 
	$ußge
 (c⁄° * 
¥og
)

43 
	`Ârötf
(
°dîr
, "This isÅhe Hawkbeans Java Virtual Machine. Usage\n\n");

44 
	`Ârötf
(
°dîr
, "%†[›ti⁄s] cœssfûe\n\n", 
¥og
);

45 
	`Ârötf
(
°dîr
, "Arguments:\n\n");

46 
	`Ârötf
(
°dîr
, " %20.20s PrintÅhe versionÇumberándÉxit\n", "--version, -V");

47 
	`Ârötf
(
°dîr
, " %20.20s PrintÅhis message\n", "--help, -h");

48 
	`Ârötf
(
°dîr
, " %20.20s SetÅhe heap size (in MB). Default is 1MB.\n", "--heap-size, -H");

49 
	`Ârötf
(
°dîr
, " %20.20s TraceÅhe Garbage Collector\n", "--trace-gc, -t");

50 
	`Ârötf
(
°dîr
, " %20.20s GC collection interval in ms\n", "--gc-interval, -c");

51 
	`Ârötf
(
°dîr
, "\n\n");

52 
	`exô
(
EXIT_SUCCESS
);

53 
	}
}

56 
›ti⁄
 
	gl⁄g_›ti⁄s
[] = {

57 {"hñp", 
no_¨gumít
, 0, 'h'},

58 {"vîsi⁄", 
no_¨gumít
, 0, 'V'},

59 {"hóp-size", 
ªquúed_¨gumít
, 0, 'H'},

60 {"åa˚-gc", 
no_¨gumít
, 0, 't'},

61 {"gc-öãrvÆ", 
ªquúed_¨gumít
, 0, 'c'},

66 
	sg›ts
 {

67 
	mhóp_size_megs
;

68 
	måa˚_gc
;

69 c⁄° * 
	m˛ass_∑th
;

70 
	mgc_öãrvÆ
;

71 } 
	gglob_›ts
;

74 
obj_ªf_t
 *

75 
	$¸óã_¨gv_¨øy
 (
¨gc
, ** 
¨gv
)

77 
i
;

78 
obj_ªf_t
 * 
¨r
 = 
	`¨øy_Æloc
(
T_REF
, 
¨gc
);

79 
«tive_obj_t
 * 
¨r_obj
 = 
NULL
;

81 i‡(!
¨r
) {

82 
	`HB_ERR
("CouldÇot create jargvárray\n");

83  
NULL
;

86 
¨r_obj
 = (
«tive_obj_t
*)
¨r
->
hóp_±r
;

88 
i
 = 0; i < 
¨gc
; i++) {

89 
obj_ªf_t
 * 
°r_obj
 = 
	`°rög_obje˘_Æloc
(
¨gv
[
i
]);

90 i‡(!
°r_obj
) {

91 
	`HB_ERR
("CouldÇot create string object forárgvárray\n");

92  
NULL
;

94 
¨r_obj
->
fõlds
[
i
].
obj
 = 
°r_obj
;

97  
¨r
;

98 
	}
}

102 
	$∑r£_¨gs
 (
¨gc
, ** 
¨gv
)

104 
c
;

107 
›t_idx
 = 0;

108 
c
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "c:hVH:t", 
l⁄g_›ti⁄s
, &
›t_idx
);

110 i‡(
c
 == -1) {

114 
c
) {

118 
	`vîsi⁄
();

121 
	`ußge
(
¨gv
[0]);

124 
glob_›ts
.
gc_öãrvÆ
 = 
	`©oi
(
›èrg
);

127 
glob_›ts
.
hóp_size_megs
 = 
	`©oi
(
›èrg
);

130 
glob_›ts
.
åa˚_gc
 = 1;

134 
	`¥ötf
("Unknow¿›ti⁄: %o.\n", 
c
);

139 i‡(
›töd
 >
¨gc
) {

140 
	`ußge
(
¨gv
[0]);

144 
glob_›ts
.
˛ass_∑th
 = 
¨gv
[
›töd
++];

145 
	}
}

149 
	$maö
 (
¨gc
, ** 
¨gv
)

151 
java_˛ass_t
 * 
˛s
 = 
NULL
;

152 
obj_ªf_t
 * 
obj
 = 
NULL
;

153 
obj_ªf_t
 * 
j¨gv
 = 
NULL
;

154 
jthªad_t
 * 
maö_thªad
 = 
NULL
;

155 
maö_idx
;

157 
	`HB_DEBUG
("======= HAWKBEANS JVM ========\n");

159 
	`∑r£_¨gs
(
¨gc
, 
¨gv
);

162 
	`hóp_öô
(
glob_›ts
.
hóp_size_megs
);

165 
	`hb_˛assm≠_öô
();

167 
˛s
 = 
	`hb_lﬂd_˛ass
(
glob_›ts
.
˛ass_∑th
);

169 i‡(!
˛s
) {

170 
	`HB_ERR
("CouldÇŸÜﬂd ba£ cœs†(%s)\n", 
glob_›ts
.
˛ass_∑th
);

171 
	`exô
(
EXIT_FAILURE
);

174 
obj
 = 
	`obje˘_Æloc
(
˛s
);

176 
maö_idx
 = 
	`hb_gë_mëhod_idx
("maö", 
˛s
);

177 
maö_thªad
 = 
	`hb_¸óã_thªad
(
˛s
, "main");

179 i‡(!
maö_thªad
) {

180 
	`HB_ERR
("CouldÇot create mainÅhread\n");

181 
	`exô
(
EXIT_FAILURE
);

184 
cur_thªad
 = 
maö_thªad
;

186 
j¨gv
 = 
	`¸óã_¨gv_¨øy
(
¨gc
-
›töd
, &
¨gv
[optind]);

188 
	`hb_push_ba£_‰ame
(
maö_thªad
, 
˛s
, 
j¨gv
, 
maö_idx
);

190 i‡(!
j¨gv
) {

191 
	`HB_ERR
("CouldÇot create Javaárgvárray\n");

192 
	`exô
(
EXIT_FAILURE
);

195 
	`gc_öô
(
maö_thªad
, 
obj
, 
glob_›ts
.
åa˚_gc
, glob_›ts.
gc_öãrvÆ
);

197 
	`gc_ö£π_ªf
(
j¨gv
);

199 
	`hb_exec
(
maö_thªad
);

201 
	`HB_DEBUG
("======= HAWKBEANS EXIT ========\n");

204 
	}
}

	@src/bc_interp.c

15 
	~<°dlib.h
>

17 
	~<˛ass.h
>

18 
	~<thªad.h
>

19 
	~<ty≥s.h
>

20 
	~<°ack.h
>

21 
	~<mëhods.h
>

22 
	~<c⁄°™ts.h
>

23 
	~<mm.h
>

24 
	~<bc_öãΩ.h
>

25 
	~<«tive.h
>

26 
	~<ex˚±i⁄s.h
>

27 
	~<gc.h
>

29 
	~<m√m⁄ics.h
>

31 
	~<¨ch/x64-löux/boŸ°øp_lﬂdî.h
>

33 
	#GET_2B_IDX
(
b˝
Ë((
u2
)(b˝)[1] << 8 | (u2)(b˝)[2])

	)

34 
	#GET_4B_IDX
(
b˝
Ë((
u4
)(bcp)[1] << 24 | (u4)(bcp)[2] << 16 | \

35 (
u4
)(
b˝
)[3] << 8 | (u4)(b˝)[0])

	)

37 
jthªad_t
 * 
cur_thªad
;

39 (*
	t›_h™dÀr_t
)(
	tu1
 * 
	tbc
, 
	tjava_˛ass_t
 * 
	t˛s
);

42 
ölöe
 

43 
	$push_vÆ
 (
v¨_t
 
v
)

45 
›_°ack_t
 * 
°ack
 = 
cur_thªad
->
cur_‰ame
->
›_°ack
;

46 
°ack
->
›rs
[++(°ack->
•
)] = 
v
;

47 
	}
}

50 
ölöe
 
v¨_t


51 
	$p›_vÆ
 ()

53 
›_°ack_t
 * 
°ack
 = 
cur_thªad
->
cur_‰ame
->
›_°ack
;

54 
v¨_t
 
v
 = 
°ack
->
›rs
[°ack->
•
];

55 
°ack
->
•
--;

56 i‡(
°ack
->
•
 < 0) {

57 
	`HB_ERR
("Stack overrun!\n");

58 
	`exô
(1);

60  
v
;

61 
	}
}

64 
	$gë_c⁄°
 (
u2
 
idx
, 
java_˛ass_t
 * 
˛s
, 
v¨_t
 * 
ªt
)

66 
˛s
->
c⁄°_poﬁ
[
idx
]->
èg
) {

67 
CONSTANT_I¡egî
: {

68 
CONSTANT_I¡egî_öfo_t
 * 
ii
 = (CONSTANT_I¡egî_öfo_t*)
˛s
->
c⁄°_poﬁ
[
idx
];

69 
ªt
->
öt_vÆ
 = 
ii
->
byãs
;

72 
CONSTANT_Flﬂt
: {

73 
CONSTANT_Flﬂt_öfo_t
 * 
fi
 = (CONSTANT_Flﬂt_öfo_t*)
˛s
->
c⁄°_poﬁ
[
idx
];

74 
ªt
->
Êﬂt_vÆ
 = 
fi
->
byãs
;

77 
CONSTANT_Såög
: {

78 
CONSTANT_Såög_öfo_t
 * 
si
 = (CONSTANT_Såög_öfo_t*)
˛s
->
c⁄°_poﬁ
[
idx
];

79 
obj_ªf_t
 * 
ªf
 = 
	`gc_°r_obj_Æloc
(
	`hb_gë_c⁄°_°r
(
si
->
°r_idx
, 
˛s
));

80 i‡(!
ªf
) {

81 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_OOM
);

82  -
ESHOULD_BRANCH
;

84 
ªt
->
obj
 = 
ªf
;

88 
	`HB_ERR
("Unsupported constÅype (%d)\n",

89 
˛s
->
c⁄°_poﬁ
[
idx
]->
èg
);

94 
	}
}

97 
	$gë_c⁄°_wide
 (
u2
 
idx
, 
java_˛ass_t
 * 
˛s
, 
v¨_t
 * 
ªt
)

99 
˛s
->
c⁄°_poﬁ
[
idx
]->
èg
) {

100 
CONSTANT_L⁄g
: {

101 
CONSTANT_L⁄g_öfo_t
 * 
li
 = (CONSTANT_L⁄g_öfo_t*)
˛s
->
c⁄°_poﬁ
[
idx
];

102 
ªt
->
l⁄g_vÆ
 = (
u8
)
li
->
lo_byãs
 | ((u8Ói->
hi_byãs
 << 32);

105 
CONSTANT_DoubÀ
: {

106 
CONSTANT_DoubÀ_öfo_t
 * 
di
 = (CONSTANT_DoubÀ_öfo_t*)
˛s
->
c⁄°_poﬁ
[
idx
];

107 
ªt
->
dbl_vÆ
 = (
d8
)((
u8
)
di
->
lo_byãs
 | ((u8)di->
hi_byãs
 << 32));

111 
	`HB_ERR
("Unsupported constÅype (%d) in %s\n",

112 
˛s
->
c⁄°_poﬁ
[
idx
]->
èg
, 
__func__
);

117 
	}
}

122 
	$h™dÀ_övÆid
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

123 
	`HB_ERR
("ENCOUNTERED INVALID INSTRUCTION\n");

125 
	}
}

128 
	$h™dÀ_n›
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

130 
	}
}

133 
	$h™dÀ_ac⁄°_nuŒ
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

134 
v¨_t
 
v
;

135 
v
.
obj
 = 
NULL
;

136 
	`push_vÆ
(
v
);

138 
	}
}

140 
	#DO_ICONSTN
(
n
) \

141 
v¨_t
 
v
; \

142 
v
.
öt_vÆ
 = 
n
; \

143 
	`push_vÆ
(
v
); \

144  1;

	)

147 
	$h™dÀ_ic⁄°_m1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

148 
	`DO_ICONSTN
(-1);

149 
	}
}

152 
	$h™dÀ_ic⁄°_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

153 
	`DO_ICONSTN
(0);

154 
	}
}

157 
	$h™dÀ_ic⁄°_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

158 
	`DO_ICONSTN
(1);

159 
	}
}

162 
	$h™dÀ_ic⁄°_2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

163 
	`DO_ICONSTN
(2);

164 
	}
}

167 
	$h™dÀ_ic⁄°_3
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

168 
	`DO_ICONSTN
(3);

169 
	}
}

172 
	$h™dÀ_ic⁄°_4
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

173 
	`DO_ICONSTN
(4);

174 
	}
}

177 
	$h™dÀ_ic⁄°_5
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

178 
	`DO_ICONSTN
(5);

179 
	}
}

182 
	$h™dÀ_lc⁄°_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

183 
v¨_t
 
v
;

184 
v
.
l⁄g_vÆ
 = 0;

185 
	`push_vÆ
(
v
);

187 
	}
}

190 
	$h™dÀ_lc⁄°_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

191 
v¨_t
 
v
;

192 
v
.
l⁄g_vÆ
 = 1;

193 
	`push_vÆ
(
v
);

195 
	}
}

197 
	#DO_FCONSTN
(
n
) \

198 
v¨_t
 
v
; \

199 
v
.
Êﬂt_vÆ
 = 
n
; \

200 
	`push_vÆ
(
v
); \

201  1;

	)

204 
	$h™dÀ_fc⁄°_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

205 
	`DO_FCONSTN
(0.0);

206 
	}
}

209 
	$h™dÀ_fc⁄°_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

210 
	`DO_FCONSTN
(1.0);

211 
	}
}

214 
	$h™dÀ_fc⁄°_2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

215 
	`DO_FCONSTN
(2.0);

216 
	}
}

219 
	$h™dÀ_dc⁄°_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

220 
v¨_t
 
v
;

221 
v
.
dbl_vÆ
 = 0.0;

222 
	`push_vÆ
(
v
);

224 
	}
}

227 
	$h™dÀ_dc⁄°_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

228 
v¨_t
 
v
;

229 
v
.
dbl_vÆ
 = 1.0;

230 
	`push_vÆ
(
v
);

232 
	}
}

235 
	$h™dÀ_bùush
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

236 
v¨_t
 
v
;

237 
v
.
öt_vÆ
 = ()()
bc
[1];

238 
	`push_vÆ
(
v
);

240 
	}
}

243 
	$h™dÀ_sùush
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

244 
v¨_t
 
v
;

245 
v
.
öt_vÆ
 = ()()
	`GET_2B_IDX
(
bc
);

246 
	`push_vÆ
(
v
);

248 
	}
}

251 
	$h™dÀ_ldc
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

252 
v¨_t
 
v
;

253 
ªt
;

254 
ªt
 = 
	`gë_c⁄°
((
u2
)
bc
[1], 
˛s
, &
v
);

255 i‡(
ªt
 != 0) {

256  
ªt
;

258 
	`push_vÆ
(
v
);

260 
	}
}

263 
	$h™dÀ_ldc_w
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

264 
u2
 
idx
 = 
	`GET_2B_IDX
(
bc
);

265 
v¨_t
 
v
;

266 
ªt
;

267 
ªt
 = 
	`gë_c⁄°
(
idx
, 
˛s
, &
v
);

268 i‡(
ªt
 != 0) {

269  
ªt
;

271 
	`push_vÆ
(
v
);

273 
	}
}

276 
	$h™dÀ_ldc2_w
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

277 
u2
 
idx
 = 
	`GET_2B_IDX
(
bc
);

278 
v¨_t
 
v
;

279 i‡(
	`gë_c⁄°_wide
(
idx
, 
˛s
, &
v
) != 0) {

280 
	`HB_ERR
("CouldÇot get const\n");

283 
	`push_vÆ
(
v
);

285 
	}
}

289 
	$h™dÀ_ûﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

290 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

292 
	}
}

295 
	$h™dÀ_Œﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

296 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
;

297 
u1
 
idx
 = 
bc
[1];

298 
v¨_t
 
v
;

299 
v
.
l⁄g_vÆ
 = ((
u8
)
‰ame
->
loˇls
[
idx
].
öt_vÆ
) | (((u8)frame->locals[idx+1].int_val)<<32);

300 
	`push_vÆ
(
v
);

302 
	}
}

305 
	$h™dÀ_Êﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

306 
u1
 
idx
 = 
bc
[1];

307 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
;

308 
	`push_vÆ
(
‰ame
->
loˇls
[
idx
]);

310 
	}
}

313 
	$h™dÀ_dlﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

314 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
;

315 
u1
 
idx
 = 
bc
[1];

316 
v¨_t
 
v
;

317 
v
.
l⁄g_vÆ
 = (
u8
)
‰ame
->
loˇls
[
idx
].
öt_vÆ
 | (((u8)frame->locals[idx+1].int_val)<<32);

318 
	`push_vÆ
(
v
);

320 
	}
}

323 
	$h™dÀ_Æﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

324 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
;

325 
u1
 
idx
 = 
bc
[1];

326 
v¨_t
 
v
;

327 
v
.
obj
 = 
‰ame
->
loˇls
[
idx
].obj;

328 
	`push_vÆ
(
v
);

330 
	}
}

335 
	$h™dÀ_ûﬂd_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

336 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

338 
	}
}

342 
	$h™dÀ_ûﬂd_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

343 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

345 
	}
}

349 
	$h™dÀ_ûﬂd_2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

350 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

352 
	}
}

356 
	$h™dÀ_ûﬂd_3
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

357 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

359 
	}
}

361 
	#DO_LLOADN
(
n
) \

362 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
; \

363 
a
, 
b
; \

364 
v¨_t
 
ªs
; \

365 
a
 = 
‰ame
->
loˇls
[
n
].
l⁄g_vÆ
; \

366 
b
 = 
‰ame
->
loˇls
[
n
+1].
l⁄g_vÆ
; \

367 
ªs
.
l⁄g_vÆ
 = (
a
 & 0xFFFFFFFFË| (
b
 << 32); \

368 
	`push_vÆ
(
ªs
); \

369  1;

	)

372 
	$h™dÀ_Œﬂd_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

373 
	`DO_LLOADN
(0);

374 
	}
}

377 
	$h™dÀ_Œﬂd_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

378 
	`DO_LLOADN
(1);

379 
	}
}

382 
	$h™dÀ_Œﬂd_2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

383 
	`DO_LLOADN
(2);

384 
	}
}

387 
	$h™dÀ_Œﬂd_3
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

388 
	`DO_LLOADN
(3);

389 
	}
}

391 
	#DO_FLOADN
(
n
) \

392 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
; \

393 
	`push_vÆ
(
‰ame
->
loˇls
[
n
]); \

394  1;

	)

397 
	$h™dÀ_Êﬂd_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

398 
	`DO_FLOADN
(0);

399 
	}
}

402 
	$h™dÀ_Êﬂd_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

403 
	`DO_FLOADN
(1);

404 
	}
}

407 
	$h™dÀ_Êﬂd_2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

408 
	`DO_FLOADN
(2);

409 
	}
}

412 
	$h™dÀ_Êﬂd_3
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

413 
	`DO_FLOADN
(3);

414 
	}
}

417 
	$h™dÀ_dlﬂd_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

418 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

420 
	}
}

423 
	$h™dÀ_dlﬂd_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

424 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

426 
	}
}

429 
	$h™dÀ_dlﬂd_2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

430 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

432 
	}
}

435 
	$h™dÀ_dlﬂd_3
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

436 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

438 
	}
}

440 
	#DO_ALOADN
(
n
) \

441 
v¨_t
 
v
; \

442 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
; \

443 
v
.
obj
 = 
‰ame
->
loˇls
[
n
].obj; \

444 
	`push_vÆ
(
v
); \

445  1;

	)

448 
	$h™dÀ_Æﬂd_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

449 
	`DO_ALOADN
(0);

450 
	}
}

453 
	$h™dÀ_Æﬂd_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

454 
	`DO_ALOADN
(1);

455 
	}
}

458 
	$h™dÀ_Æﬂd_2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

459 
	`DO_ALOADN
(2);

460 
	}
}

463 
	$h™dÀ_Æﬂd_3
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

464 
	`DO_ALOADN
(3);

465 
	}
}

468 
	$h™dÀ_ülﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

469 
v¨_t
 
idx
 = 
	`p›_vÆ
();

470 
v¨_t
 
a
 = 
	`p›_vÆ
();

471 
v¨_t
 
ªs
;

472 
obj_ªf_t
 * 
ªf
 = 
a
.
obj
;

473 
«tive_obj_t
 * 
¨r
;

475 i‡(!
ªf
) {

476 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_NULL_PTR
);

477  -
ESHOULD_BRANCH
;

480 
¨r
 = (
«tive_obj_t
*)
ªf
->
hóp_±r
;

482 i‡(
idx
.
öt_vÆ
 > 
¨r
->
Êags
.
¨øy
.
Àngth
 - 1) {

483 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_ARR_IDX_OOB
);

484  -
ESHOULD_BRANCH
;

487 
ªs
.
öt_vÆ
 = 
¨r
->
fõlds
[
idx
.int_val].int_val;

489 
	`push_vÆ
(
ªs
);

492 
	}
}

495 
	$h™dÀ_œlﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

496 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

498 
	}
}

501 
	$h™dÀ_Álﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

502 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

504 
	}
}

507 
	$h™dÀ_dÆﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

508 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

510 
	}
}

513 
	$h™dÀ_Ølﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

514 
v¨_t
 
idx
 = 
	`p›_vÆ
();

515 
v¨_t
 
¨r
 = 
	`p›_vÆ
();

516 
obj_ªf_t
 * 
¨r_ªf
 = 
¨r
.
obj
;

517 
«tive_obj_t
 * 
¨r_obj
 = 
NULL
;

519 i‡(!
¨r_ªf
) {

520 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_NULL_PTR
);

521  -
ESHOULD_BRANCH
;

524 
¨r_obj
 = (
«tive_obj_t
*)
¨r_ªf
->
hóp_±r
;

526 i‡(
idx
.
öt_vÆ
 > 
¨r_obj
->
Êags
.
¨øy
.
Àngth
 - 1) {

527 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_ARR_IDX_OOB
);

528  -
ESHOULD_BRANCH
;

531 
	`push_vÆ
(
¨r_obj
->
fõlds
[
idx
.
öt_vÆ
]);

534 
	}
}

537 
	$h™dÀ_bÆﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

538 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

540 
	}
}

543 
	$h™dÀ_ˇlﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

544 
v¨_t
 
idx
 = 
	`p›_vÆ
();

545 
v¨_t
 
¨ef
 = 
	`p›_vÆ
();

546 
v¨_t
 
ªs
;

547 
«tive_obj_t
 * 
¨r
;

549 i‡(!
¨ef
.
obj
) {

550 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_NULL_PTR
);

551  -
ESHOULD_BRANCH
;

554 
¨r
 = (
«tive_obj_t
*)
¨ef
.
obj
->
hóp_±r
;

556 i‡(
idx
.
öt_vÆ
 > 
¨r
->
Êags
.
¨øy
.
Àngth
 - 1) {

557 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_ARR_IDX_OOB
);

558  -
ESHOULD_BRANCH
;

561 
ªs
.
öt_vÆ
 = ()
¨r
->
fõlds
[
idx
.öt_vÆ].
ch¨_vÆ
;

563 
	`push_vÆ
(
ªs
);

566 
	}
}

569 
	$h™dÀ_ßlﬂd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

570 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

572 
	}
}

576 
	$h™dÀ_i°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

577 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

579 
	}
}

582 
	$h™dÀ_l°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

583 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
;

584 
v¨_t
 
v
 = 
	`p›_vÆ
();

585 
u1
 
idx
 = 
bc
[1];

586 
‰ame
->
loˇls
[
idx
].
öt_vÆ
 = 
v
.
l⁄g_vÆ
 & 0xFFFFFFFF;

587 
‰ame
->
loˇls
[
idx
+1].
öt_vÆ
 = 
v
.
l⁄g_vÆ
 >> 32;

589 
	}
}

592 
	$h™dÀ_f°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

593 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
;

594 
v¨_t
 
v
 = 
	`p›_vÆ
();

595 
u1
 
idx
 = 
bc
[1];

596 
‰ame
->
loˇls
[
idx
].
Êﬂt_vÆ
 = 
v
.float_val;

598 
	}
}

601 
	$h™dÀ_d°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

602 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
;

603 
v¨_t
 
v
 = 
	`p›_vÆ
();

604 
u1
 
idx
 = 
bc
[1];

605 
‰ame
->
loˇls
[
idx
].
öt_vÆ
 = 
v
.
l⁄g_vÆ
 & 0xFFFFFFFF;

606 
‰ame
->
loˇls
[
idx
+1].
öt_vÆ
 = 
v
.
l⁄g_vÆ
 >> 32;

608 
	}
}

611 
	$h™dÀ_a°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

612 
v¨_t
 
ov
 = 
	`p›_vÆ
();

613 
u1
 
idx
 = 
bc
[1];

615 
cur_thªad
->
cur_‰ame
->
loˇls
[
idx
] = 
ov
;

618 
	}
}

622 
	$h™dÀ_i°‹e_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

623 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

625 
	}
}

629 
	$h™dÀ_i°‹e_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

630 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

632 
	}
}

636 
	$h™dÀ_i°‹e_2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

637 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

639 
	}
}

643 
	$h™dÀ_i°‹e_3
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

644 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

646 
	}
}

648 
	#DO_LSTOREN
(
n
) \

649 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
; \

650 
v¨_t
 
v
 = 
	`p›_vÆ
(); \

651 
‰ame
->
loˇls
[
n
].
öt_vÆ
 = 
v
.
l⁄g_vÆ
 & 0xFFFFFFFF; \

652 
‰ame
->
loˇls
[
n
+1].
öt_vÆ
 = 
v
.
l⁄g_vÆ
 >> 32; \

653  1;

	)

656 
	$h™dÀ_l°‹e_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

657 
	`DO_LSTOREN
(0);

658 
	}
}

661 
	$h™dÀ_l°‹e_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

662 
	`DO_LSTOREN
(1);

663 
	}
}

666 
	$h™dÀ_l°‹e_2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

667 
	`DO_LSTOREN
(2);

668 
	}
}

671 
	$h™dÀ_l°‹e_3
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

672 
	`DO_LSTOREN
(3);

673 
	}
}

675 
	#DO_FSTOREN
(
n
) \

676 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
; \

677 
v¨_t
 
v
 = 
	`p›_vÆ
(); \

678 
‰ame
->
loˇls
[
n
].
Êﬂt_vÆ
 = 
v
.float_val; \

679  1;

	)

682 
	$h™dÀ_f°‹e_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

683 
	`DO_FSTOREN
(0);

684 
	}
}

687 
	$h™dÀ_f°‹e_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

688 
	`DO_FSTOREN
(1);

689 
	}
}

692 
	$h™dÀ_f°‹e_2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

693 
	`DO_FSTOREN
(2);

694 
	}
}

697 
	$h™dÀ_f°‹e_3
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

698 
	`DO_FSTOREN
(3);

699 
	}
}

701 
	#DO_DSTOREN
(
n
) \

702 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
; \

703 
v¨_t
 
v
 = 
	`p›_vÆ
(); \

704 
‰ame
->
loˇls
[
n
].
öt_vÆ
 = 
v
.
l⁄g_vÆ
 & 0xFFFFFFFF; \

705 
‰ame
->
loˇls
[
n
+1].
öt_vÆ
 = 
v
.
l⁄g_vÆ
 >> 32; \

706  1;

	)

709 
	$h™dÀ_d°‹e_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

710 
	`DO_DSTOREN
(0);

711 
	}
}

714 
	$h™dÀ_d°‹e_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

715 
	`DO_DSTOREN
(1);

716 
	}
}

719 
	$h™dÀ_d°‹e_2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

720 
	`DO_DSTOREN
(2);

721 
	}
}

724 
	$h™dÀ_d°‹e_3
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

725 
	`DO_DSTOREN
(3);

726 
	}
}

728 
	#DO_ASTOREN
(
n
) \

729 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
; \

730 
v¨_t
 
v
 = 
	`p›_vÆ
(); \

731 
‰ame
->
loˇls
[
n
].
obj
 = 
v
.obj; \

732  1;

	)

735 
	$h™dÀ_a°‹e_0
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

736 
	`DO_ASTOREN
(0);

737 
	}
}

740 
	$h™dÀ_a°‹e_1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

741 
	`DO_ASTOREN
(1);

742 
	}
}

745 
	$h™dÀ_a°‹e_2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

746 
	`DO_ASTOREN
(2);

747 
	}
}

750 
	$h™dÀ_a°‹e_3
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

751 
	`DO_ASTOREN
(3);

752 
	}
}

755 
	$h™dÀ_ü°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

756 
v¨_t
 
v
 = 
	`p›_vÆ
();

757 
v¨_t
 
idx
 = 
	`p›_vÆ
();

758 
v¨_t
 
a
 = 
	`p›_vÆ
();

759 
obj_ªf_t
 * 
ªf
 = 
a
.
obj
;

760 
«tive_obj_t
 * 
¨r
;

762 i‡(!
ªf
) {

763 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_NULL_PTR
);

764  -
ESHOULD_BRANCH
;

767 
¨r
 = (
«tive_obj_t
*)
ªf
->
hóp_±r
;

769 i‡(
idx
.
öt_vÆ
 > 
¨r
->
Êags
.
¨øy
.
Àngth
 - 1) {

770 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_ARR_IDX_OOB
);

771  -
ESHOULD_BRANCH
;

774 
¨r
->
fõlds
[
idx
.
öt_vÆ
].öt_vÆ = 
v
.int_val;

777 
	}
}

780 
	$h™dÀ_œ°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

781 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

783 
	}
}

786 
	$h™dÀ_Á°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

787 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

789 
	}
}

792 
	$h™dÀ_da°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

793 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

795 
	}
}

798 
	$h™dÀ_Ø°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

799 
v¨_t
 
vÆ
 = 
	`p›_vÆ
();

800 
v¨_t
 
idx
 = 
	`p›_vÆ
();

801 
v¨_t
 
¨r
 = 
	`p›_vÆ
();

802 
obj_ªf_t
 * 
¨r_ªf
 = 
¨r
.
obj
;

803 
«tive_obj_t
 * 
¨r_obj
 = 
NULL
;

805 i‡(!
¨r_ªf
) {

806 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_NULL_PTR
);

807  -
ESHOULD_BRANCH
;

810 
¨r_obj
 = (
«tive_obj_t
*)
¨r_ªf
->
hóp_±r
;

812 i‡(
idx
.
öt_vÆ
 > 
¨r_obj
->
Êags
.
¨øy
.
Àngth
 - 1) {

813 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_ARR_IDX_OOB
);

814  -
ESHOULD_BRANCH
;

818 
¨r_obj
->
fõlds
[
idx
.
öt_vÆ
] = 
vÆ
;

821 
	}
}

824 
	$h™dÀ_ba°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

825 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

827 
	}
}

830 
	$h™dÀ_ˇ°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

831 
v¨_t
 
v
 = 
	`p›_vÆ
();

832 
v¨_t
 
idx
 = 
	`p›_vÆ
();

833 
v¨_t
 
a
 = 
	`p›_vÆ
();

834 
obj_ªf_t
 * 
ªf
 = 
a
.
obj
;

835 
«tive_obj_t
 * 
¨r
;

836 
x
;

838 i‡(!
ªf
) {

839 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_NULL_PTR
);

840  -
ESHOULD_BRANCH
;

843 
¨r
 = (
«tive_obj_t
*)
ªf
->
hóp_±r
;

845 i‡(
idx
.
öt_vÆ
 > 
¨r
->
Êags
.
¨øy
.
Àngth
 - 1) {

846 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_ARR_IDX_OOB
);

847  -
ESHOULD_BRANCH
;

850 
x
 = ()
v
.
öt_vÆ
;

852 
¨r
->
fõlds
[
idx
.
öt_vÆ
].
ch¨_vÆ
 = 
x
;

855 
	}
}

858 
	$h™dÀ_ß°‹e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

859 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

861 
	}
}

864 
	$h™dÀ_p›
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

865 
	`p›_vÆ
();

867 
	}
}

870 
	$h™dÀ_p›2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

871 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

873 
	}
}

876 
	$h™dÀ_dup
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

877 
›_°ack_t
 * 
°ack
 = 
cur_thªad
->
cur_‰ame
->
›_°ack
;

878 
v¨_t
 
v
 = 
°ack
->
›rs
[°ack->
•
];

879 
°ack
->
›rs
[++(°ack->
•
)] = 
v
;

881 
	}
}

884 
	$h™dÀ_dup_x1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

885 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

887 
	}
}

890 
	$h™dÀ_dup_x2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

891 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

893 
	}
}

897 
	$h™dÀ_dup2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

898 
›_°ack_t
 * 
°ack
 = 
cur_thªad
->
cur_‰ame
->
›_°ack
;

899 
	`push_vÆ
(
°ack
->
›rs
[°ack->
•
-1]);

901 
	`push_vÆ
(
°ack
->
›rs
[°ack->
•
-1]);

903 
	}
}

906 
	$h™dÀ_dup2_x1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

907 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

909 
	}
}

912 
	$h™dÀ_dup2_x2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

913 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

915 
	}
}

918 
	$h™dÀ_sw≠
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

919 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

921 
	}
}

924 
	$h™dÀ_üdd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

925 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

927 
	}
}

930 
	$h™dÀ_œdd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

931 
v¨_t
 
a
, 
b
, 
c
;

932 
a
 = 
	`p›_vÆ
();

933 
b
 = 
	`p›_vÆ
();

934 
c
.
l⁄g_vÆ
 = (
u8
)(()
a
.l⁄g_vÆ + ()
b
.long_val);

935 
	`push_vÆ
(
c
);

937 
	}
}

940 
	$h™dÀ_Ádd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

941 
v¨_t
 
a
, 
b
, 
c
;

942 
a
 = 
	`p›_vÆ
();

943 
b
 = 
	`p›_vÆ
();

944 
c
.
Êﬂt_vÆ
 = 
a
.Êﬂt_vÆ + 
b
.float_val;

945 
	`push_vÆ
(
c
);

947 
	}
}

950 
	$h™dÀ_dadd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

951 
v¨_t
 
a
, 
b
, 
c
;

952 
a
 = 
	`p›_vÆ
();

953 
b
 = 
	`p›_vÆ
();

954 
c
.
dbl_vÆ
 = 
a
.dbl_vÆ + 
b
.dbl_val;

955 
	`push_vÆ
(
c
);

957 
	}
}

961 
	$h™dÀ_isub
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

962 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

964 
	}
}

967 
	$h™dÀ_lsub
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

968 
v¨_t
 
a
, 
b
, 
c
;

969 
b
 = 
	`p›_vÆ
();

970 
a
 = 
	`p›_vÆ
();

971 
c
.
l⁄g_vÆ
 = (
u8
)(()
a
.l⁄g_vÆ - ()
b
.long_val);

972 
	`push_vÆ
(
c
);

974 
	}
}

977 
	$h™dÀ_fsub
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

978 
v¨_t
 
a
, 
b
, 
c
;

979 
b
 = 
	`p›_vÆ
();

980 
a
 = 
	`p›_vÆ
();

981 
c
.
Êﬂt_vÆ
 = 
a
.Êﬂt_vÆ - 
b
.float_val;

982 
	`push_vÆ
(
c
);

984 
	}
}

987 
	$h™dÀ_dsub
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

988 
v¨_t
 
a
, 
b
, 
c
;

989 
b
 = 
	`p›_vÆ
();

990 
a
 = 
	`p›_vÆ
();

991 
c
.
dbl_vÆ
 = 
a
.dbl_vÆ - 
b
.dbl_val;

992 
	`push_vÆ
(
c
);

994 
	}
}

998 
	$h™dÀ_imul
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

999 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1001 
	}
}

1004 
	$h™dÀ_lmul
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1005 
v¨_t
 
a
, 
b
, 
c
;

1006 
m
, 
v1
, 
v2
;

1007 
b
 = 
	`p›_vÆ
();

1008 
a
 = 
	`p›_vÆ
();

1010 
v1
 = ()
a
.
l⁄g_vÆ
;

1011 
v2
 = ()
b
.
l⁄g_vÆ
;

1013 
m
 = 
v1
 * 
v2
;

1015 
c
.
l⁄g_vÆ
 = (
u8
)
m
;

1017 
	`push_vÆ
(
c
);

1019 
	}
}

1022 
	$h™dÀ_fmul
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1023 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1025 
	}
}

1028 
	$h™dÀ_dmul
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1029 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1031 
	}
}

1035 
	$h™dÀ_idiv
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1036 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1038 
	}
}

1041 
	$h™dÀ_ldiv
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1042 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1044 
	}
}

1047 
	$h™dÀ_fdiv
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1048 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1050 
	}
}

1053 
	$h™dÀ_ddiv
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1054 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1056 
	}
}

1060 
	$h™dÀ_úem
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1061 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1063 
	}
}

1066 
	$h™dÀ_Ãem
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1067 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1069 
	}
}

1072 
	$h™dÀ_‰em
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1073 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1075 
	}
}

1078 
	$h™dÀ_dªm
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1079 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1081 
	}
}

1085 
	$h™dÀ_öeg
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1086 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1088 
	}
}

1091 
	$h™dÀ_ eg
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1092 
v¨_t
 
v
 = 
	`p›_vÆ
();

1093 
v¨_t
 
ªs
;

1094 
n
 = ()
v
.
l⁄g_vÆ
;

1095 
ªs
.
l⁄g_vÆ
 = (
u8
)(-
n
);

1096 
	`push_vÆ
(
ªs
);

1098 
	}
}

1101 
	$h™dÀ_‚eg
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1102 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1104 
	}
}

1107 
	$h™dÀ_d√g
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1108 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1110 
	}
}

1113 
	$h™dÀ_ishl
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1114 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1116 
	}
}

1119 
	$h™dÀ_lshl
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1120 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1122 
	}
}

1125 
	$h™dÀ_ishr
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1126 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1128 
	}
}

1131 
	$h™dÀ_lshr
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1132 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1134 
	}
}

1137 
	$h™dÀ_iushr
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1138 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1140 
	}
}

1143 
	$h™dÀ_lushr
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1144 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1146 
	}
}

1149 
	#DO_LOGOP
(
›
, 
membî
, 
ty≥
) \

1150 
ty≥
 
a
, 
b
; \

1151 
v¨_t
 
v1
, 
v2
, 
ªs
; \

1152 
v2
 = 
	`p›_vÆ
(); \

1153 
v1
 = 
	`p›_vÆ
(); \

1154 
a
 = (
ty≥
)
v1
.
membî
; \

1155 
b
 = (
ty≥
)
v2
.
membî
; \

1156 
ªs
.
membî
 = (
u4
)(
a
 
›
 
b
); \

1157 
	`push_vÆ
(
ªs
); \

1158  1;

	)

1161 
	$h™dÀ_ünd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1162 
	`DO_LOGOP
(&, 
öt_vÆ
, );

1163 
	}
}

1166 
	$h™dÀ_œnd
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1167 
	`DO_LOGOP
(&, 
l⁄g_vÆ
, );

1168 
	}
}

1171 
	$h™dÀ_i‹
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1172 
	`DO_LOGOP
(|, 
öt_vÆ
, );

1173 
	}
}

1176 
	$h™dÀ_l‹
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1177 
	`DO_LOGOP
(|, 
l⁄g_vÆ
, );

1178 
	}
}

1181 
	$h™dÀ_ix‹
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1182 
	`DO_LOGOP
(^, 
öt_vÆ
, );

1183 
	}
}

1186 
	$h™dÀ_lx‹
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1187 
	`DO_LOGOP
(^, 
l⁄g_vÆ
, );

1188 
	}
}

1191 
	$h™dÀ_iöc
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1192 
u1
 
idx
 = 
bc
[1];

1193 
c⁄°™t
 = ()()
bc
[2];

1194 
v
 = ()
cur_thªad
->
cur_‰ame
->
loˇls
[
idx
].
öt_vÆ
;

1195 
cur_thªad
->
cur_‰ame
->
loˇls
[
idx
].
öt_vÆ
 = (
u4
)(
v
 + 
c⁄°™t
);

1197 
	}
}

1200 
	$h™dÀ_i2l
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1201 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1203 
	}
}

1206 
	$h™dÀ_i2f
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1207 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1209 
	}
}

1212 
	$h™dÀ_i2d
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1213 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1215 
	}
}

1218 
	$h™dÀ_l2i
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1219 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1221 
	}
}

1224 
	$h™dÀ_l2f
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1225 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1227 
	}
}

1230 
	$h™dÀ_l2d
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1231 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1233 
	}
}

1236 
	$h™dÀ_f2i
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1237 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1239 
	}
}

1242 
	$h™dÀ_f2l
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1243 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1245 
	}
}

1248 
	$h™dÀ_f2d
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1249 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1251 
	}
}

1254 
	$h™dÀ_d2i
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1255 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1257 
	}
}

1260 
	$h™dÀ_d2l
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1261 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1263 
	}
}

1266 
	$h™dÀ_d2f
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1267 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1269 
	}
}

1272 
	$h™dÀ_i2b
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1273 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1275 
	}
}

1278 
	$h™dÀ_i2c
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1279 
v¨_t
 
c
 = 
	`p›_vÆ
();

1280 
v¨_t
 
ªs
;

1281 
x
;

1283 
x
 = ()
c
.
öt_vÆ
;

1285 
ªs
.
öt_vÆ
 = ()(
u1
)
x
;

1287 
	`push_vÆ
(
ªs
);

1290 
	}
}

1293 
	$h™dÀ_i2s
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1294 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1296 
	}
}

1299 
	$h™dÀ_lcmp
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1300 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1302 
	}
}

1305 
	$h™dÀ_fcm∂
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1306 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1308 
	}
}

1311 
	$h™dÀ_fcmpg
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1312 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1314 
	}
}

1317 
	$h™dÀ_dcm∂
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1318 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1320 
	}
}

1323 
	$h™dÀ_dcmpg
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1324 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1326 
	}
}

1328 
	#DO_IF0
(
›
, 
membî
, 
ty≥
) \

1329 
i2
 
off£t
 = (i2)
	`GET_2B_IDX
(
bc
); \

1330 
v¨_t
 
v
 = 
	`p›_vÆ
(); \

1331 i‡((
ty≥
)
v
.
membî
 
›
 0) { \

1332 
cur_thªad
->
cur_‰ame
->
pc
 +
off£t
; \

1333  -
ESHOULD_BRANCH
; \

1335  3;

	)

1338 
	$h™dÀ_i„q
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1339 
	`DO_IF0
(==, 
öt_vÆ
, );

1340 
	}
}

1343 
	$h™dÀ_i‚e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1344 
	`DO_IF0
(!=, 
öt_vÆ
, );

1345 
	}
}

1348 
	$h™dÀ_iÊt
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1349 
	`DO_IF0
(<, 
öt_vÆ
, );

1350 
	}
}

1353 
	$h™dÀ_ifge
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1354 
	`DO_IF0
(>=, 
öt_vÆ
, );

1355 
	}
}

1358 
	$h™dÀ_ifgt
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1359 
	`DO_IF0
(>, 
öt_vÆ
, );

1360 
	}
}

1363 
	$h™dÀ_iÊe
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1364 
	`DO_IF0
(<=, 
öt_vÆ
, );

1365 
	}
}

1367 
	#DO_ICMP
(
›
, 
membî
) \

1368 
i2
 
off£t
 = (i2)
	`GET_2B_IDX
(
bc
); \

1369 
v¨_t
 
v2
 = 
	`p›_vÆ
(); \

1370 
v¨_t
 
v1
 = 
	`p›_vÆ
(); \

1371 
a
 = ()
v1
.
membî
; \

1372 
b
 = ()
v2
.
membî
; \

1373 i‡(
a
 
›
 
b
) { \

1374 
cur_thªad
->
cur_‰ame
->
pc
 +
off£t
; \

1375  -
ESHOULD_BRANCH
; \

1377  3;

	)

1380 
	$h™dÀ_if_icm≥q
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1381 
	`DO_ICMP
(==, 
öt_vÆ
);

1382 
	}
}

1385 
	$h™dÀ_if_icm≤e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1386 
	`DO_ICMP
(!=, 
öt_vÆ
);

1387 
	}
}

1390 
	$h™dÀ_if_icm∂t
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1391 
	`DO_ICMP
(<, 
öt_vÆ
);

1392 
	}
}

1395 
	$h™dÀ_if_icmpge
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1396 
	`DO_ICMP
(>=, 
öt_vÆ
);

1397 
	}
}

1400 
	$h™dÀ_if_icmpgt
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1401 
	`DO_ICMP
(>, 
öt_vÆ
);

1402 
	}
}

1405 
	$h™dÀ_if_icm∂e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1406 
	`DO_ICMP
(<=, 
öt_vÆ
);

1407 
	}
}

1409 
	#DO_ACMP
(
›
) \

1410 
i2
 
off£t
 = (i2)
	`GET_2B_IDX
(
bc
); \

1411 
v¨_t
 
v2
 = 
	`p›_vÆ
(); \

1412 
v¨_t
 
v1
 = 
	`p›_vÆ
(); \

1413 i‡(
v1
.
±r_vÆ
 
›
 
v2
.ptr_val) { \

1414 
cur_thªad
->
cur_‰ame
->
pc
 +
off£t
; \

1415  -
ESHOULD_BRANCH
; \

1417  3;

	)

1420 
	$h™dÀ_if_acm≥q
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1421 
	`DO_ACMP
(==);

1422 
	}
}

1425 
	$h™dÀ_if_acm≤e
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1426 
	`DO_ACMP
(!=);

1427 
	}
}

1430 
	$h™dÀ_gŸo
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1431 
i2
 
off£t
 = (i2)
	`GET_2B_IDX
(
bc
);

1432 
cur_thªad
->
cur_‰ame
->
pc
 +
off£t
;

1433  -
ESHOULD_BRANCH
;

1434 
	}
}

1437 
	$h™dÀ_j§
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1438 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1440 
	}
}

1443 
	$h™dÀ_ªt
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1444 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1446 
	}
}

1449 
	$h™dÀ_èbÀswôch
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1450 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1452 
	}
}

1455 
	$h™dÀ_lookupswôch
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1456 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1458 
	}
}

1460 
	#DO_VAL_RETURN
() \

1461 
v¨_t
 
ªt
 = 
	`p›_vÆ
(); \

1462 
›_°ack_t
 * 
¥ev
 = 
cur_thªad
->
cur_‰ame
->¥ev->
›_°ack
; \

1463 
¥ev
->
›rs
[++’ªv->
•
)] = 
ªt
; \

1464 i‡(
	`hb_p›_‰ame
(
cur_thªad
) != 0) { \

1465 
	`HB_ERR
("CouldÇŸÖ› sèck fømêö %s\n", 
__func__
); \

1468  -
ESHOULD_RETURN
;

	)

1471 
	$h™dÀ_úëu∫
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1472 
	`DO_VAL_RETURN
();

1473 
	}
}

1476 
	$h™dÀ_Ãëu∫
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1477 
	`DO_VAL_RETURN
();

1478 
	}
}

1481 
	$h™dÀ_‰ëu∫
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1482 
	`DO_VAL_RETURN
();

1483 
	}
}

1486 
	$h™dÀ_dªtu∫
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1487 
	`DO_VAL_RETURN
();

1488 
	}
}

1491 
	$h™dÀ_¨ëu∫
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1492 
	`DO_VAL_RETURN
();

1493 
	}
}

1496 
	$h™dÀ_ªtu∫
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1500 i‡(
	`hb_p›_‰ame
(
cur_thªad
) != 0) {

1501 
	`HB_ERR
("CouldÇŸÖ› sèck fømêö %s\n", 
__func__
);

1505  -
ESHOULD_RETURN
;

1506 
	}
}

1509 
	$h™dÀ_put°©ic
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1510 
fõld_öfo_t
 * 
fi
 = 
NULL
;

1511 
v¨_t
 
vÆ
;

1512 
u2
 
idx
;

1514 
idx
 = 
	`GET_2B_IDX
(
bc
);

1516 i‡(!
	`FIELD_IS_RESOLVED
((*)
˛s
->
c⁄°_poﬁ
[
idx
])) {

1517 
fi
 = 
	`hb_föd_fõld
(
idx
, 
˛s
, 
NULL
);

1519 i‡(!
fi
) {

1520 
	`HB_ERR
("CouldÇŸÑesﬁvêfõldÑe‡ö %s\n", 
__func__
);

1524 
	`hb_ªsﬁve_°©ic_fõld
(
fi
, 
˛s
, 
idx
);

1527 
fi
 = (
fõld_öfo_t
*)
	`MASK_RESOLVED_BIT
(
˛s
->
c⁄°_poﬁ
[
idx
]);

1530 i‡(!(
fi
->
acc_Êags
 & 
ACC_STATIC
)) {

1531 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_INCMP_CLS_CH
);

1532  -
ESHOULD_BRANCH
;

1535 
vÆ
 = 
	`p›_vÆ
();

1538 i‡(!
fi
->
vÆue
) {

1539 
	`HB_ERR
("Sèti¯fõld i†nŸ bound i¿%s\n", 
__func__
);

1543 *(
fi
->
vÆue
Ë
vÆ
;

1546 
	}
}

1549 
	$h™dÀ_gëfõld
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1550 
fõld_öfo_t
 * 
fi
 = 
NULL
;

1551 
obj_ªf_t
 * 
‹ef
 = 
NULL
;

1552 
«tive_obj_t
 * 
obj
 = 
NULL
;

1553 
v¨_t
 
ovÆ
;

1554 
vÆ_off£t
;

1555 
u2
 
idx
;

1557 
idx
 = 
	`GET_2B_IDX
(
bc
);

1559 
ovÆ
 = 
	`p›_vÆ
();

1560 
‹ef
 = 
ovÆ
.
obj
;

1562 i‡(!
‹ef
) {

1563 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_NULL_PTR
);

1564  -
ESHOULD_BRANCH
;

1567 
obj
 = (
«tive_obj_t
*)
‹ef
->
hóp_±r
;

1569 
	`BC_DEBUG
("Gëtög fõld from obj i¿˛as†%s\n", 
	`hb_gë_˛ass_«me
(
obj
->
˛ass
));

1571 i‡(!
	`FIELD_IS_RESOLVED
(
˛s
->
c⁄°_poﬁ
[
idx
])) {

1572 
fi
 = 
	`hb_föd_fõld
(
idx
, 
˛s
, 
NULL
);

1573 i‡(!
fi
) {

1574 
	`HB_ERR
("CouldÇŸÑesﬁvêfõldÑe‡ö %s\n", 
__func__
);

1577 
	`hb_ªsﬁve_fõld
(
fi
, 
obj
, 
˛s
, 
idx
);

1580 
vÆ_off£t
 = ()(
	`MASK_RESOLVED_BIT
(
˛s
->
c⁄°_poﬁ
[
idx
]));

1581 
fi
 = 
obj
->
fõld_öfos
[
vÆ_off£t
];

1583 i‡(
fi
->
acc_Êags
 & 
ACC_STATIC
) {

1584 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_INCMP_CLS_CH
);

1585  -
ESHOULD_BRANCH
;

1588 
	`BC_DEBUG
("Getting field %s in %s (name_idx=%d) (offset is %d)\n",

1589 
	`hb_gë_c⁄°_°r
(
fi
->
«me_idx
, fi->
ow√r
),

1590 
	`hb_gë_˛ass_«me
(
fi
->
ow√r
), fi->
«me_idx
, 
vÆ_off£t
);

1592 
	`push_vÆ
(
obj
->
fõlds
[
vÆ_off£t
]);

1595 
	}
}

1598 
	$h™dÀ_putfõld
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1599 
fõld_öfo_t
 * 
fi
 = 
NULL
;

1600 
obj_ªf_t
 * 
‹ef
 = 
NULL
;

1601 
«tive_obj_t
 * 
obj
 = 
NULL
;

1602 
vÆ_off£t
;

1603 
v¨_t
 
ovÆ
;

1604 
v¨_t
 
vÆ
;

1605 
u2
 
idx
;

1607 
idx
 = 
	`GET_2B_IDX
(
bc
);

1609 
vÆ
 = 
	`p›_vÆ
();

1610 
ovÆ
 = 
	`p›_vÆ
();

1611 
‹ef
 = 
ovÆ
.
obj
;

1613 i‡(!
‹ef
) {

1614 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_NULL_PTR
);

1615  -
ESHOULD_BRANCH
;

1618 
obj
 = (
«tive_obj_t
*)
‹ef
->
hóp_±r
;

1620 
	`BC_DEBUG
("Puâög fõld i¿obj i¿˛as†%s\n", 
	`hb_gë_˛ass_«me
(
obj
->
˛ass
));

1622 i‡(!
	`FIELD_IS_RESOLVED
(
˛s
->
c⁄°_poﬁ
[
idx
])) {

1623 
fi
 = 
	`hb_föd_fõld
(
idx
, 
˛s
, 
NULL
);

1624 i‡(!
fi
) {

1625 
	`HB_ERR
("CouldÇŸÑesﬁvêfõldÑe‡ö %s\n", 
__func__
);

1628 
	`hb_ªsﬁve_fõld
(
fi
, 
obj
, 
˛s
, 
idx
);

1631 
vÆ_off£t
 = ()(
	`MASK_RESOLVED_BIT
(
˛s
->
c⁄°_poﬁ
[
idx
]));

1632 
fi
 = 
obj
->
fõld_öfos
[
vÆ_off£t
];

1634 i‡(
fi
->
acc_Êags
 & 
ACC_STATIC
) {

1635 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_INCMP_CLS_CH
);

1636  -
ESHOULD_BRANCH
;

1639 
	`BC_DEBUG
("Putting field %s in %s (name_idx=%d)\n",

1640 
	`hb_gë_c⁄°_°r
(
fi
->
«me_idx
, fi->
ow√r
),

1641 
	`hb_gë_˛ass_«me
(
fi
->
ow√r
), fi->
«me_idx
);

1643 
obj
->
fõlds
[
vÆ_off£t
] = 
vÆ
;

1646 
	}
}

1650 
	$__övoke•ecül
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
, u1 
ty≥
) {

1651 
mëhod_öfo_t
 * 
mi
 = 
NULL
;

1652 
u2
 
idx
;

1654 
idx
 = 
	`GET_2B_IDX
(
bc
);

1656 
mi
 = 
	`hb_ªsﬁve_mëhod
(
idx
, 
˛s
, 
NULL
);

1658 i‡(!
mi
) {

1659 
	`HB_ERR
("CouldÇŸÑesﬁvêmëhodÑe‡ö %s\n", 
__func__
);

1663 
	`BC_DEBUG
("MëhodÑesﬁvedá†%†(ow√r=%s)\n", 
	`hb_gë_c⁄°_°r
(
mi
->
«me_idx
, mi->
ow√r
), 
	`hb_gë_˛ass_«me
(mi->owner));

1671 i‡(
ty≥
 =
ST_INVOKE_VIRT
) {

1672 
mëhod_öfo_t
 * 
mi2
 = 
NULL
;

1673 
›_°ack_t
 * 
°ack
 = 
cur_thªad
->
cur_‰ame
->
›_°ack
;

1674 
nwide
 = 0;

1675 
pcou¡
 = 
	`hb_gë_∑rm_cou¡_‰om_mëhod
(
cur_thªad
, 
mi
, 
ty≥
, &
nwide
);

1676 
obj_ªf_t
 * 
ªf
 = 
°ack
->
›rs
[°ack->
•
 - 
pcou¡
 + 
nwide
 + 1].
obj
;

1677 i‡(!
ªf
) {

1678 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_NULL_PTR
);

1679  -
ESHOULD_BRANCH
;

1681 
«tive_obj_t
 * 
obj
 = («tive_obj_t*)
ªf
->
hóp_±r
;

1683 
mi2
 = 
	`hb_föd_mëhod_by_desc
(
	`hb_gë_c⁄°_°r
(
mi
->
«me_idx
, mi->
ow√r
),

1684 
	`hb_gë_c⁄°_°r
(
mi
->
desc_idx
, mi->
ow√r
),

1685 
obj
->
˛ass
);

1688 i‡(
mi2
) {

1689 
mi
 = 
mi2
;

1693 i‡(
mi
->
acc_Êags
 & 
ACC_NATIVE
) {

1694 i‡(
	`hb_h™dÀ_«tive
(
mi
, 
˛s
, 
ty≥
) != 0) {

1695 
	`HB_ERR
("CouldÇot handleÇative method\n");

1700 i‡(
	`hb_push_‰ame_by_mëhod
(
cur_thªad
, 
mi
) != 0) {

1701 
	`HB_ERR
("CouldÇotÖush method frame\n");

1709 i‡(
	`hb_£tup_mëhod_∑rms
(
cur_thªad
, 
mi
, 
ty≥
) != 0) {

1710 
	`HB_ERR
("CouldÇot setup methodÖarameters\n");

1714 i‡(
	`hb_exec
(
cur_thªad
) < 0) {

1715 
	`HB_ERR
("CouldÇot invokespecial\n");

1721 
	}
}

1724 
	$h™dÀ_övoke•ecül
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1725  
	`__övoke•ecül
(
bc
, 
˛s
, 
ST_INVOKE_SPECIAL
);

1726 
	}
}

1733 
	$h™dÀ_övokevútuÆ
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1734  
	`__övoke•ecül
(
bc
, 
˛s
, 
ST_INVOKE_VIRT
);

1735 
	}
}

1738 
	$h™dÀ_övoke°©ic
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1739  
	`__övoke•ecül
(
bc
, 
˛s
, 
ST_INVOKE_STATIC
);

1740 
	}
}

1743 
	$h™dÀ_övokeöãrÁ˚
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1744 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1746 
	}
}

1749 
	$h™dÀ_övokedy«mic
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1750 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1752 
	}
}

1756 
	$h™dÀ_√w
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1757 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1759 
	}
}

1763 
	$h™dÀ_√w¨øy
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1764 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1766 
	}
}

1769 
	$h™dÀ_™ew¨øy
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1770 
java_˛ass_t
 * 
èrgë_˛s
 = 
NULL
;

1771 
obj_ªf_t
 * 
ﬂ
 = 
NULL
;

1772 
«tive_obj_t
 * 
aobj
 = 
NULL
;

1773 
v¨_t
 
Àn
 = 
	`p›_vÆ
();

1774 
v¨_t
 
ªt
;

1775 
u2
 
idx
;

1777 
idx
 = 
	`GET_2B_IDX
(
bc
);

1780 
èrgë_˛s
 = 
	`hb_ªsﬁve_˛ass
(
idx
, 
˛s
);

1782 i‡(!
èrgë_˛s
) {

1783 
	`HB_ERR
("CouldÇŸÑesﬁvê˛as†ª‡ö %s\n", 
__func__
);

1787 i‡(
Àn
.
öt_vÆ
 < 0) {

1788 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_NEG_ARR_SIZE
);

1789  -
ESHOULD_BRANCH
;

1792 
ﬂ
 = 
	`gc_¨øy_Æloc
(
T_REF
, 
Àn
.
öt_vÆ
);

1794 i‡(!
ﬂ
) {

1795 
	`hb_throw_™d_¸óã_ex˝
(
EXCP_OOM
);

1796  -
ESHOULD_BRANCH
;

1799 
aobj
 = (
«tive_obj_t
*)
ﬂ
->
hóp_±r
;

1801 
aobj
->
˛ass
 = 
èrgë_˛s
;

1803 
ªt
.
obj
 = 
ﬂ
;

1805 
	`BC_DEBUG
("AŒoˇãdÇewáºayáà%∞ö %s\n", 
ªt
.
obj
, 
__func__
);

1806 
	`push_vÆ
(
ªt
);

1809 
	}
}

1813 
	$h™dÀ_¨øyÀngth
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1814 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1816 
	}
}

1820 
	$h™dÀ_©hrow
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1821 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1823 
	}
}

1826 
	$h™dÀ_checkˇ°
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1827 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1829 
	}
}

1832 
	$h™dÀ_ö°™˚of
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1833 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1835 
	}
}

1838 
	$h™dÀ_m⁄ô‹íãr
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1839 
	`p›_vÆ
();

1840 
	`BC_DEBUG
("WARNING:Éntering dummy monitor\n");

1842 
	}
}

1845 
	$h™dÀ_m⁄ô‹exô
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1846 
	`p›_vÆ
();

1847 
	`BC_DEBUG
("WARNING:Éxiting dummy monitor\n");

1849 
	}
}

1852 
	$h™dÀ_wide
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1853 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1855 
	}
}

1858 
	$h™dÀ_mu…ü√w¨øy
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1859 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1861 
	}
}

1864 
	$h™dÀ_i‚uŒ
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1865 
i2
 
off£t
 = (i2)
	`GET_2B_IDX
(
bc
);

1866 
v¨_t
 
v
 = 
	`p›_vÆ
();

1867 i‡(
v
.
obj
 =
NULL
) {

1868 
cur_thªad
->
cur_‰ame
->
pc
 +
off£t
;

1869  -
ESHOULD_BRANCH
;

1873 
	}
}

1876 
	$h™dÀ_i‚⁄nuŒ
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1877 
i2
 
off£t
 = (i2)
	`GET_2B_IDX
(
bc
);

1878 
v¨_t
 
v
 = 
	`p›_vÆ
();

1879 i‡(
v
.
obj
 !
NULL
) {

1880 
cur_thªad
->
cur_‰ame
->
pc
 +
off£t
;

1881  -
ESHOULD_BRANCH
;

1885 
	}
}

1888 
	$h™dÀ_gŸo_w
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1889 
i4
 
off£t
 = (i4)
	`GET_4B_IDX
(
bc
);

1890 
cur_thªad
->
cur_‰ame
->
pc
 +
off£t
;

1891  -
ESHOULD_BRANCH
;

1892 
	}
}

1895 
	$h™dÀ_j§_w
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1896 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1898 
	}
}

1901 
	$h™dÀ_bªakpoöt
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1902 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1904 
	}
}

1907 
	$h™dÀ_impdï1
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1908 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1910 
	}
}

1913 
	$h™dÀ_impdï2
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
) {

1914 
	`HB_ERR
("%†NOT IMPLEMENTED\n", 
__func__
);

1916 
	}
}

1920 
	$h™dÀ_gë°©ic
 (
u1
 * 
bc
, 
java_˛ass_t
 * 
˛s
)

1922 
fõld_öfo_t
 * 
fi
 = 
NULL
;

1923 
u2
 
idx
;

1925 
idx
 = 
	`GET_2B_IDX
(
bc
);

1927 i‡(!
	`FIELD_IS_RESOLVED
((*)
˛s
->
c⁄°_poﬁ
[
idx
])) {

1928 
fi
 = 
	`hb_föd_fõld
(
idx
, 
˛s
, 
NULL
);

1930 i‡(!
fi
) {

1931 
	`HB_ERR
("CouldÇŸÑesﬁvêfõldÑe‡ö %s\n", 
__func__
);

1935 
	`hb_ªsﬁve_°©ic_fõld
(
fi
, 
˛s
, 
idx
);

1938 
fi
 = (
fõld_öfo_t
*)
	`MASK_RESOLVED_BIT
(
˛s
->
c⁄°_poﬁ
[
idx
]);

1941 i‡(!
fi
->
vÆue
) {

1942 
	`HB_ERR
("VÆuêi†nŸ inôülized i¿%s!\n", 
__func__
);

1947 
	`push_vÆ
(*(
fi
->
vÆue
));

1950 
	}
}

1954 
	$hb_övoke_˘‹
 (
obj_ªf_t
 * 
‹ef
)

1956 i‡(
	`hb_push_˘‹_‰ame
(
cur_thªad
, 
‹ef
) != 0) {

1957 
	`HB_ERR
("CouldÇotÖush ctor frame\n");

1961 i‡(
	`hb_exec
(
cur_thªad
) != 0) {

1962 
	`HB_ERR
("CouldÇot invoke ctor\n");

1967 
	}
}

1970 
	~<›code_m≠.h
>

1973 
	$hb_exec
 (
jthªad_t
 * 
t
)

1975 
u1
 * 
bc_±r
 = 
NULL
;

1976 
java_˛ass_t
 * 
˛s
 = 
t
->
cur_‰ame
->cls;

1977 c⁄° * 
mëhod_nm
 = 
NULL
;

1978 c⁄° * 
mëhod_desc
 = 
NULL
;

1980 
mëhod_nm
 = 
	`hb_gë_c⁄°_°r
(
t
->
cur_‰ame
->
möfo
->
«me_idx
, 
˛s
);

1981 
mëhod_desc
 = 
	`hb_gë_c⁄°_°r
(
t
->
cur_‰ame
->
möfo
->
desc_idx
, 
˛s
);

1983 
	`BC_DEBUG
("Executög mëhod (%sËf‹ cœs†(%s)\n", 
mëhod_nm
, 
	`hb_gë_˛ass_«me
(
˛s
));

1987 
ªt
;

1989 
bc_±r
 = 
t
->
cur_‰ame
->
möfo
->
code_©å
->
code
;

1991 
u1
 
›code
 = 
bc_±r
[
t
->
cur_‰ame
->
pc
];

1993 
	`BC_DEBUG
("{PC:%02x} [%s::%s{%s}] Encou¡îed OP (0x%02xËbc[1]=0x%02x bc[2]=0x%02x (%s)\n", 
t
->
cur_‰ame
->
pc
, 
	`hb_gë_˛ass_«me
(
˛s
), 
mëhod_nm
, 
mëhod_desc
, 
›code
, 
bc_±r
[t->cur_‰ame->pc+1], bc_±r[t->cur_‰ame->pc+2], 
m√m⁄ics
[opcode]);

1995 
ªt
 = 
h™dÀrs
[
›code
](&
bc_±r
[
t
->
cur_‰ame
->
pc
], 
˛s
);

1998 i‡(
t
->
cur_‰ame
 && 
	`gc_should_cﬁÀ˘
(t)) {

1999 
	`gc_cﬁÀ˘
(
t
);

2002 #i‡
DEBUG
 == 1

2004 i‡(
t
->
cur_‰ame
) {

2005 
	`hb_dump_›_°ack
();

2006 
	`hb_dump_loˇls
();

2014 i‡(!
t
->
cur_‰ame
) {

2018 i‡(
ªt
 == -1) {

2019 
	`HB_ERR
("CouldÇŸ h™dÀ opcodê0x%x\n", 
›code
);

2020 
	`exô
(
EXIT_FAILURE
);

2021 } i‡(
ªt
 =-
ESHOULD_RETURN
) {

2024 } i‡(
ªt
 =-
ESHOULD_BRANCH
) {

2030 
t
->
cur_‰ame
->
pc
 +
ªt
;

2034 
	}
}

	@src/class.c

15 
	~<°rög.h
>

17 
	~<˛ass.h
>

18 
	~<c⁄°™ts.h
>

19 
	~<hashèbÀ.h
>

20 
	~<°ack.h
>

21 
	~<thªad.h
>

22 
	~<bc_öãΩ.h
>

24 
	~<¨ch/x64-löux/boŸ°øp_lﬂdî.h
>

26 
nk_hashèbÀ
 * 
	g˛ass_m≠
;

27 
jthªad_t
 * 
cur_thªad
;

30 
nk_hashèbÀ
 *

31 
	$hb_gë_˛assm≠
 ()

33  
˛ass_m≠
;

34 
	}
}

46 
	$hb_gë_c⁄°_°r
 (
u2
 
idx
, 
java_˛ass_t
 * 
˛s
)

48 
CONSTANT_Utf8_öfo_t
 * 
u
;

50 i‡(
idx
 > 
˛s
->
c⁄°_poﬁ_cou¡
) {

51  
NULL
;

54 i‡(
	`IS_RESOLVED
(
˛s
->
c⁄°_poﬁ
[
idx
])) {

55  (*)
	`MASK_RESOLVED_BIT
(
˛s
->
c⁄°_poﬁ
[
idx
]);

58 i‡(
˛s
->
c⁄°_poﬁ
[
idx
]->
èg
 !
CONSTANT_Utf8
) {

59 
	`HB_ERR
("N⁄-UTF8 c⁄°™àö %†—y≥ = %d)\n", 
__func__
,

60 
˛s
->
c⁄°_poﬁ
[
idx
]->
èg
);

61  
NULL
;

64 
u
 = (
CONSTANT_Utf8_öfo_t
*)
˛s
->
c⁄°_poﬁ
[
idx
];

66 
˛s
->
c⁄°_poﬁ
[
idx
] = (
c⁄°_poﬁ_öfo_t
*)
	`MARK_RESOLVED
(
u
->
byãs
);

68  (*)
u
->
byãs
;

69 
	}
}

80 
	$hb_gë_˛ass_«me
 (
java_˛ass_t
 * 
˛s
)

82 i‡(
˛s
) {

83  
˛s
->
«me
;

86  
NULL
;

87 
	}
}

98 
	$hb_gë_su≥r_˛ass_nm
 (
java_˛ass_t
 * 
˛s
)

100 
java_˛ass_t
 * 
su≥r
 = 
NULL
;

102 i‡(!
˛s
) {

103 
	`HB_ERR
("NULL cœs†giví i¿%s\n", 
__func__
);

104  
NULL
;

107 
su≥r
 = 
	`hb_gë_su≥r_˛ass
(
˛s
);

109 i‡(
su≥r
) {

110  
	`hb_gë_˛ass_«me
(
su≥r
);

113  
NULL
;

114 
	}
}

125 
java_˛ass_t
 *

126 
	$hb_gë_su≥r_˛ass
 (
java_˛ass_t
 * 
˛s
)

128 
java_˛ass_t
 * 
su≥r
 = 
NULL
;

130 i‡(!
˛s
) {

131 
	`HB_ERR
("NULL cœs†giví i¿%s\n", 
__func__
);

132  
NULL
;

135 i‡(
	`IS_RESOLVED
(
˛s
->
c⁄°_poﬁ
[˛s->
su≥r
])) {

136 
su≥r
 = (
java_˛ass_t
*)
	`MASK_RESOLVED_BIT
(
˛s
->
c⁄°_poﬁ
[cls->super]);

138 
su≥r
 = 
	`hb_ªsﬁve_˛ass
(
˛s
->super, cls);

141  
su≥r
;

142 
	}
}

151 
	$hb_gë_obj_fõld_cou¡
 (
java_˛ass_t
 * 
˛s
)

153 
java_˛ass_t
 * 
su≥r
 = 
NULL
;

154 
mfc
 = 
˛s
->
fõlds_cou¡
;

156 
su≥r
 = 
	`hb_gë_su≥r_˛ass
(
˛s
);

157 i‡(
su≥r
) {

158 
mfc
 +
	`hb_gë_obj_fõld_cou¡
(
su≥r
);

161  
mfc
;

162 
	}
}

175 
	$hb_£tup_obj_fõlds
 (
«tive_obj_t
 * 
obj
, 
java_˛ass_t
 * 
˛s
)

177 
fc
 = 0;

178 
°¨t_idx
;

179 
i
;

180 
java_˛ass_t
 * 
su≥r
 = 
NULL
;

182 
su≥r
 = 
	`hb_gë_su≥r_˛ass
(
˛s
);

185 i‡(
su≥r
) {

186 
°¨t_idx
 = 
	`hb_£tup_obj_fõlds
(
obj
, 
su≥r
);

188 
°¨t_idx
 = 0;

191 
fc
 = 
˛s
->
fõlds_cou¡
 + 
°¨t_idx
;

194 
i
 = 
°¨t_idx
; i < 
fc
; i++) {

195 
v¨_t
 
x
;

196 
x
.
l⁄g_vÆ
 = 0;

197 
obj
->
fõlds
[
i
] = 
x
;

198 
obj
->
fõld_öfos
[
i
] = &
˛s
->
fõlds
[i-
°¨t_idx
];

201  
fc
;

202 
	}
}

218 
	$hb_gë_mëhod_idx
 (c⁄° * 
«me
, 
java_˛ass_t
 * 
˛s
)

220 
i
;

222 
i
 = 0; i < 
˛s
->
mëhods_cou¡
; i++) {

223 i‡(
	`°rcmp
(
«me
, 
	`hb_gë_c⁄°_°r
(
˛s
->
mëhods
[
i
].
«me_idx
, cls)) == 0) {

224  
i
;

229 
	}
}

246 
java_˛ass_t
 *

247 
	$hb_ªsﬁve_˛ass
 (
u2
 
c⁄°_idx
, 
java_˛ass_t
 * 
§c_˛s
)

249 if(
c⁄°_idx
 == 0) {

250 
	`HB_ERR
("%†UNIMPLEMENTED AT INDEX 0\n", 
__func__
);

254 
	`HB_DEBUG
("Resﬁvê˛as†ödex: %d\n", 
c⁄°_idx
);

256 if(
c⁄°_idx
 > 
§c_˛s
->
c⁄°_poﬁ_cou¡
) {

257  
NULL
;

260 if(
	`IS_RESOLVED
(
§c_˛s
->
c⁄°_poﬁ
[
c⁄°_idx
])) {

261  (
java_˛ass_t
 *)
	`MASK_RESOLVED_BIT
(
§c_˛s
->
c⁄°_poﬁ
[
c⁄°_idx
]);

264 
CONSTANT_Cœss_öfo_t
 *
c
 = (CONSTANT_Cœss_öfo_t*)
§c_˛s
->
c⁄°_poﬁ
[
c⁄°_idx
];

266 c⁄° * 
˛ass_nm
 = 
	`hb_gë_c⁄°_°r
 (
c
->
«me_idx
, 
§c_˛s
);

267 
	`HB_DEBUG
("˛as†«mê%†\n", 
˛ass_nm
);

269 
java_˛ass_t
 * 
˛s
 = 
	`hb_gë_˛ass
(
˛ass_nm
);

271 if(
˛s
) {

272 
	`HB_DEBUG
("Found cœs†%†ö cœs†m≠\n", 
˛ass_nm
);

273 
§c_˛s
->
c⁄°_poﬁ
[
c⁄°_idx
] = (
c⁄°_poﬁ_öfo_t
*)
	`MARK_RESOLVED
(
˛s
);

274  
˛s
;

278 
˛s
 = 
	`hb_lﬂd_˛ass
(
˛ass_nm
);

279 if(!
˛s
) {

280 
	`HB_ERR
("Couldn'tÜoad class\n");

281  
NULL
;

284 
	`hb_add_˛ass
(
˛ass_nm
, 
˛s
);

285 
	`hb_¥ï_˛ass
(
˛s
);

286 
	`hb_öô_˛ass
(
˛s
);

288 
§c_˛s
->
c⁄°_poﬁ
[
c⁄°_idx
] = (
c⁄°_poﬁ_öfo_t
*)
	`MARK_RESOLVED
(
˛s
);

289  
˛s
;

293  
NULL
;

294 
	}
}

304 
mëhod_öfo_t
 *

305 
	$hb_gë_˘‹_möfo
 (
java_˛ass_t
 * 
˛s
)

307 
i
;

309 
i
 = 0; i < 
˛s
->
mëhods_cou¡
; i++) {

310 
u2
 
nidx
 = 
˛s
->
mëhods
[
i
].
«me_idx
;

311 c⁄° * 
äm
 = 
	`hb_gë_c⁄°_°r
(
nidx
, 
˛s
);

312 i‡(
	`°rcmp
(
äm
, "<init>") == 0) {

313  &
˛s
->
mëhods
[
i
];

318  
NULL
;

319 
	}
}

331 
mëhod_öfo_t
 *

332 
	$hb_föd_mëhod_by_desc
 (c⁄° * 
m«me
,

333 c⁄° * 
mdesc
,

334 
java_˛ass_t
 * 
˛s
)

336 
mëhod_öfo_t
 * 
ªt
 = 
NULL
;

337 
i
;

340 i‡(
	`hb_is_öãrÁ˚
(
˛s
)) {

341 
	`HB_ERR
("Aâem±Åÿföd mëhod i¿öãrÁ˚ i¿%s\n", 
__func__
);

342  
NULL
;

346 
i
 = 0; i < 
˛s
->
mëhods_cou¡
; i++) {

347 
u2
 
nidx
 = 
˛s
->
mëhods
[
i
].
«me_idx
;

348 
u2
 
didx
 = 
˛s
->
mëhods
[
i
].
desc_idx
;

349 c⁄° * 
äm
 = 
	`hb_gë_c⁄°_°r
(
nidx
, 
˛s
);

350 c⁄° * 
tds
 = 
	`hb_gë_c⁄°_°r
(
didx
, 
˛s
);

351 i‡(
	`°rcmp
(
äm
, 
m«me
Ë=0 && såcmp(
tds
, 
mdesc
) == 0) {

352 
ªt
 = &
˛s
->
mëhods
[
i
];

358 i‡(!
ªt
) {

359 
java_˛ass_t
 * 
su≥r
 = 
	`hb_gë_su≥r_˛ass
(
˛s
);

360 i‡(
su≥r
) {

361 
ªt
 = 
	`hb_föd_mëhod_by_desc
(
m«me
, 
mdesc
, 
su≥r
);

366 i‡(!
ªt
) {

367 
	`HB_ERR
("CouldÇŸ föd mëhodÑe‡÷ooked i¿%s)\n", 
	`hb_gë_˛ass_«me
(
˛s
));

370  
ªt
;

371 
	}
}

384 
mëhod_öfo_t
 *

385 
	$hb_ªsﬁve_mëhod
 (
u2
 
c⁄°_idx
,

386 
java_˛ass_t
 * 
§c_˛s
,

387 
java_˛ass_t
 * 
èrgë_˛s
)

390 
CONSTANT_Mëhodªf_öfo_t
 *
mëhodªf
;

391 
CONSTANT_NameAndTy≥_öfo_t
 *
mëhod¡
 = 
NULL
;

392 
mëhod_öfo_t
 *
mëhod
 = 
NULL
;

393 
i
;

395 
mëhodªf
 = (
CONSTANT_Mëhodªf_öfo_t
*)
§c_˛s
->
c⁄°_poﬁ
[
c⁄°_idx
];

397 if(
mëhodªf
->
èg
 !
CONSTANT_Mëhodªf
) {

398 
	`HB_ERR
("%†©ãm±Åÿu£Ç⁄-mëhodª‡c⁄°™t\n", 
__func__
);

401 if(!
èrgë_˛s
) {

402 
èrgë_˛s
 = 
	`hb_ªsﬁve_˛ass
(
mëhodªf
->
˛ass_idx
, 
§c_˛s
);

405 if(!
èrgë_˛s
) {

406 
	`HB_ERR
("CouldÇŸÑesﬁvê˛as†ª‡ö %s\n", 
__func__
);

409 
mëhod¡
 = (
CONSTANT_NameAndTy≥_öfo_t
*)
§c_˛s
->
c⁄°_poﬁ
[
mëhodªf
->
«me_™d_ty≥_idx
];

411 c⁄° * 
mëhod_nm
 = 
	`hb_gë_c⁄°_°r
(
mëhod¡
->
«me_idx
, 
§c_˛s
);

412 c⁄° * 
mëhod_desc
 = 
	`hb_gë_c⁄°_°r
(
mëhod¡
->
desc_idx
, 
§c_˛s
);

414 
i
 = 0; i < 
èrgë_˛s
->
mëhods_cou¡
; i++) {

415 
u2
 
nidx
 = 
èrgë_˛s
->
mëhods
[
i
].
«me_idx
;

416 
u2
 
didx
 = 
èrgë_˛s
->
mëhods
[
i
].
desc_idx
;

417 c⁄° * 
äm
 = 
	`hb_gë_c⁄°_°r
(
nidx
, 
èrgë_˛s
);

418 c⁄° * 
tds
 = 
	`hb_gë_c⁄°_°r
(
didx
, 
èrgë_˛s
);

420 if(
	`°rcmp
(
äm
, 
mëhod_nm
Ë=0 && såcmp(
tds
, 
mëhod_desc
) == 0) {

421 
mëhod
 = &
èrgë_˛s
->
mëhods
[
i
];

427 if(!
mëhod
) {

428 
java_˛ass_t
 * 
su≥r
 = 
	`hb_gë_su≥r_˛ass
(
èrgë_˛s
);

429 if(
su≥r
) {

430 
mëhod
 = 
	`hb_ªsﬁve_mëhod
(
c⁄°_idx
, 
§c_˛s
, 
su≥r
);

434  
mëhod
;

435 
	}
}

455 
fõld_öfo_t
 *

456 
	$hb_föd_fõld
 (
u2
 
c⁄°_idx
,

457 
java_˛ass_t
 * 
§c_˛s
,

458 
java_˛ass_t
 * 
èrgë_˛s
)

460 
CONSTANT_Fõldªf_öfo_t
 * 
‰
 = 
NULL
;

461 
CONSTANT_NameAndTy≥_öfo_t
 * 
¬t
 = 
NULL
;

462 
fõld_öfo_t
 * 
ªt
 = 
NULL
;

463 c⁄° * 
fõld_nm
;

464 c⁄° * 
fõld_desc
;

465 
i
;

467 
‰
 = (
CONSTANT_Fõldªf_öfo_t
*)
§c_˛s
->
c⁄°_poﬁ
[
c⁄°_idx
];

469 i‡(
‰
->
èg
 !
CONSTANT_Fõldªf
) {

470 
	`HB_ERR
("%†©ãm±Åÿu£Ç⁄-fõldª‡c⁄°™t\n", 
__func__
);

471  
NULL
;

475 i‡(!
èrgë_˛s
) {

476 
èrgë_˛s
 = 
	`hb_ªsﬁve_˛ass
(
‰
->
˛ass_idx
, 
§c_˛s
);

480 i‡(!
èrgë_˛s
) {

481 
	`HB_ERR
("CouldÇŸÑesﬁvê˛as†ª‡ö %s\n", 
__func__
);

482  
NULL
;

485 
¬t
 = (
CONSTANT_NameAndTy≥_öfo_t
*)
§c_˛s
->
c⁄°_poﬁ
[
‰
->
«me_™d_ty≥_idx
];

487 
fõld_nm
 = 
	`hb_gë_c⁄°_°r
(
¬t
->
«me_idx
, 
§c_˛s
);

488 
fõld_desc
 = 
	`hb_gë_c⁄°_°r
(
¬t
->
desc_idx
, 
§c_˛s
);

492 
i
 = 0; i < 
èrgë_˛s
->
fõlds_cou¡
; i++) {

493 
u2
 
nidx
 = 
èrgë_˛s
->
fõlds
[
i
].
«me_idx
;

494 
u2
 
didx
 = 
èrgë_˛s
->
fõlds
[
i
].
desc_idx
;

495 c⁄° * 
äm
 = 
	`hb_gë_c⁄°_°r
(
nidx
, 
èrgë_˛s
);

496 c⁄° * 
tds
 = 
	`hb_gë_c⁄°_°r
(
didx
, 
èrgë_˛s
);

498 i‡(
	`°rcmp
(
äm
, 
fõld_nm
Ë=0 && såcmp(
tds
, 
fõld_desc
) == 0) {

499 
ªt
 = &
èrgë_˛s
->
fõlds
[
i
];

505 i‡(!
ªt
) {

506 
java_˛ass_t
 * 
su≥r
 = 
	`hb_gë_su≥r_˛ass
(
èrgë_˛s
);

507 i‡(
su≥r
) {

508 
ªt
 = 
	`hb_föd_fõld
(
c⁄°_idx
, 
§c_˛s
, 
su≥r
);

512  
ªt
;

513 
	}
}

525 
	$hb_ªsﬁve_fõld
 (
fõld_öfo_t
 * 
f
,

526 
«tive_obj_t
 * 
obj
,

527 
java_˛ass_t
 * 
˛s
,

528 
u2
 
c⁄°_idx
)

530 
i
;

531 
u1
 
r¶vd
 = 0;

532 * 
c⁄°_íåy
 = 
NULL
;

535 
i
 = 0; i < 
obj
->
fõld_cou¡
; i++) {

536 i‡(
obj
->
fõld_öfos
[
i
] =
f
) {

537 
r¶vd
 = 1;

542 i‡(!
r¶vd
) {

543 
	`HB_ERR
("CouldÇotÑesolve field\n");

552 
c⁄°_íåy
 = (*)
	`MARK_FIELD_RESOLVED
(
i
);

554 
˛s
->
c⁄°_poﬁ
[
c⁄°_idx
] = (
c⁄°_poﬁ_öfo_t
*)
c⁄°_íåy
;

557 
	}
}

566 
	$hb_ªsﬁve_°©ic_fõld
 (
fõld_öfo_t
 * 
f
,

567 
java_˛ass_t
 * 
˛s
,

568 
u2
 
c⁄°_idx
)

570 * 
c⁄°_íåy
 = (*)
	`MARK_FIELD_RESOLVED
(
f
);

571 
˛s
->
c⁄°_poﬁ
[
c⁄°_idx
] = (
c⁄°_poﬁ_öfo_t
*)
c⁄°_íåy
;

574 
	}
}

585 
	$fix_°©ic_fõld_vÆ
 (
fõld_öfo_t
 * 
fi
, 
java_˛ass_t
 * 
˛s
, 
idx
)

588 
v¨_t
 
v¨
;

590 
fi
->
˝e
->
èg
) {

591 
CONSTANT_Såög
: {

592 
CONSTANT_Såög_öfo_t
 * 
si
 = (CONSTANT_Såög_öfo_t*)
fi
->
˝e
;

593 
v¨
.
±r_vÆ
 = (
u8
)
	`hb_gë_c⁄°_°r
(
si
->
°r_idx
, 
˛s
);

594 
	`CL_DEBUG
("Fixög sèti¯fõld såög vÆÅÿ%s\n", (*)
v¨
.
±r_vÆ
);

597 
CONSTANT_I¡egî
: {

598 
CONSTANT_I¡egî_öfo_t
 * 
ii
 = (CONSTANT_I¡egî_öfo_t*)
fi
->
˝e
;

599 
v¨
.
öt_vÆ
 = 
ii
->
byãs
;

600 
	`CL_DEBUG
("Fixög sèti¯fõld i¡ vÆÅÿ0x%08x\n", 
v¨
.
öt_vÆ
);

604 
CONSTANT_L⁄g
: {

605 
CONSTANT_L⁄g_öfo_t
 * 
li
 = (CONSTANT_L⁄g_öfo_t*)
fi
->
˝e
;

606 
v¨
.
l⁄g_vÆ
 = (
u8
)
li
->
lo_byãs
 | (((u8Ói->
hi_byãs
) << 32);

607 
	`CL_DEBUG
("Fixög sèti¯l⁄g fõld vÆÅÿ0x%lx\n", 
v¨
.
l⁄g_vÆ
);

610 
CONSTANT_Flﬂt
: {

611 
CONSTANT_Flﬂt_öfo_t
 * 
Êi
 = (CONSTANT_Flﬂt_öfo_t*)
fi
->
˝e
;

612 
v¨
.
Êﬂt_vÆ
 = 
Êi
->
byãs
;

613 
	`CL_DEBUG
("Fixög sèti¯Êﬂàfõld vÆÅÿ%f\n", 
v¨
.
Êﬂt_vÆ
);

616 
CONSTANT_DoubÀ
: {

617 
CONSTANT_DoubÀ_öfo_t
 * 
di
 = (CONSTANT_DoubÀ_öfo_t*)
fi
->
˝e
;

618 
v¨
.
dbl_vÆ
 = (
u8
)
di
->
lo_byãs
 | (((u8)di->
hi_byãs
) << 32);

619 
	`CL_DEBUG
("Fixög sèti¯doubÀ fõld vÆÅÿ%f\n", 
v¨
.
dbl_vÆ
);

623 
	`HB_ERR
("InvÆid sèti¯fõldÅy≥ (%d)\n", 
fi
->
˝e
->
èg
);

628 
˛s
->
fõld_vÆs
[
idx
] = 
v¨
;

631 
	}
}

644 
	$hb_¥ï_˛ass
 (
java_˛ass_t
 * 
˛s
)

647 
i
;

649 
i
 = 0; i < 
˛s
->
fõlds_cou¡
; i++) {

650 i‡(
˛s
->
fõlds
[
i
].
acc_Êags
 & 
ACC_STATIC
) {

651 
˛s
->
fõlds
[
i
].
vÆue
 = &˛s->
fõld_vÆs
[i];

653 i‡(
˛s
->
fõlds
[
i
].
has_c⁄°
) {

654 
	`fix_°©ic_fõld_vÆ
(&
˛s
->
fõlds
[
i
], cls, i);

659 
	`CL_DEBUG
("ClassÖrepped (static fields initialized)\n");

661 
˛s
->
°©us
 = 
CLS_PREPPED
;

664 
	}
}

682 
	$hb_öô_˛ass
 (
java_˛ass_t
 * 
˛s
)

684 
öô_idx
 = 
	`hb_gë_mëhod_idx
("<˛öô>", 
˛s
);

686 i‡(
öô_idx
 < 0) {

687 
	`CL_DEBUG
("No <clinit> found, skipping class initialization\n");

688 
˛s
->
°©us
 = 
CLS_INITED
;

692 i‡(
	`hb_push_‰ame
(
cur_thªad
,

693 
˛s
,

694 
öô_idx
) != 0) {

695 
	`HB_ERR
("CouldÇotÖush init method stack frame\n");

699 
	`CL_DEBUG
("Executing class initializer\n");

701 
	`hb_exec
(
cur_thªad
);

703 
˛s
->
°©us
 = 
CLS_INITED
;

705 
	`CL_DEBUG
("Class inited (class/interface initializers invoked)\n");

708 
	}
}

712 
	$˛ass_m≠_hash_‚
 (
key
)

714 * 
buf
 = (*)
key
;

715  
	`nk_hash_buf„r
((*)
buf
, 
	`°æí
(buf));

716 
	}
}

720 
	$˛ass_m≠_eq_‚
 (
k1
, 
k2
)

722 * 
nm1
 = (*)
k1
;

723 * 
nm2
 = (*)
k2
;

724  
	`°rcmp
(
nm1
, 
nm2
) == 0;

725 
	}
}

735 
	$hb_˛assm≠_öô
 ()

737 
˛ass_m≠
 = 
	`nk_¸óã_hèbÀ
(0,

738 
˛ass_m≠_hash_‚
,

739 
˛ass_m≠_eq_‚
);

741 i‡(!
˛ass_m≠
) {

742 
	`HB_ERR
("CouldÇot create class map hashtable\n");

747 
	}
}

755 
	$hb_add_˛ass
 (c⁄° * 
˛ass_nm
, 
java_˛ass_t
 * 
˛s
)

757 
	`nk_hèbÀ_ö£π
(
˛ass_m≠
, ()
˛ass_nm
, ()
˛s
);

758 
	}
}

769 
	$hb_˛ass_is_lﬂded
 (c⁄° * 
˛ass_nm
)

771  (*)
	`nk_hèbÀ_£¨ch
(
˛ass_m≠
, ()
˛ass_nm
Ë!
NULL
;

772 
	}
}

783 
java_˛ass_t
 *

784 
	$hb_gë_˛ass
 (c⁄° * 
˛ass_nm
)

786  (
java_˛ass_t
*)
	`nk_hèbÀ_£¨ch
(
˛ass_m≠
, ()
˛ass_nm
);

787 
	}
}

799 
java_˛ass_t
 *

800 
	$hb_gë_‹_lﬂd_˛ass
 (c⁄° * 
˛ass_nm
)

802 
java_˛ass_t
 * 
˛s
 = 
	`hb_gë_˛ass
(
˛ass_nm
);

804 i‡(!
˛s
) {

805 
	`CL_DEBUG
("LﬂdögÇew cœs†‰om %s: %s\n", 
˛ass_nm
, 
__func__
);

806 
˛s
 = 
	`hb_lﬂd_˛ass
(
˛ass_nm
);

807 i‡(!
˛s
) {

808 
	`HB_ERR
("Couldn'tÜoad class\n");

809  
NULL
;

812 
	`hb_add_˛ass
(
˛ass_nm
, 
˛s
);

814 
	`hb_¥ï_˛ass
(
˛s
);

816 
	`hb_öô_˛ass
(
˛s
);

819  
˛s
;

820 
	}
}

	@src/exceptions.c

15 
	~<°dlib.h
>

17 
	~<ty≥s.h
>

18 
	~<˛ass.h
>

19 
	~<°ack.h
>

20 
	~<mm.h
>

21 
	~<thªad.h
>

22 
	~<ex˚±i⁄s.h
>

23 
	~<bc_öãΩ.h
>

24 
	~<gc.h
>

26 
jthªad_t
 * 
cur_thªad
;

37 c⁄° * 
	gex˝_°rs
[16] 
__©åibuã__
((
u£d
)) =

72 
	$hb_throw_™d_¸óã_ex˝
 (
u1
 
ty≥
)

74 
	`HB_ERR
("%†UNIMPLEMENTED\n", 
__func__
);

75 
	`exô
(
EXIT_FAILURE
);

76 
	}
}

88 
	$gë_ex˝_°r
 (
obj_ªf_t
 * 
îef
)

90 * 
ªt
;

91 
«tive_obj_t
 * 
obj
 = («tive_obj_t*)
îef
->
hóp_±r
;

93 
obj_ªf_t
 * 
°r_ªf
 = 
obj
->
fõlds
[0].obj;

94 
«tive_obj_t
 * 
°r_obj
;

95 
obj_ªf_t
 * 
¨r_ªf
;

96 
«tive_obj_t
 * 
¨r_obj
;

97 
i
;

99 i‡(!
°r_ªf
) {

100  
NULL
;

103 
°r_obj
 = (
«tive_obj_t
*)
°r_ªf
->
hóp_±r
;

105 
¨r_ªf
 = 
°r_obj
->
fõlds
[0].
obj
;

107 i‡(!
¨r_ªf
) {

108  
NULL
;

111 
¨r_obj
 = (
«tive_obj_t
*)
¨r_ªf
->
hóp_±r
;

113 
ªt
 = 
	`mÆloc
(
¨r_obj
->
Êags
.
¨øy
.
Àngth
+1);

115 
i
 = 0; i < 
¨r_obj
->
Êags
.
¨øy
.
Àngth
; i++) {

116 
ªt
[
i
] = 
¨r_obj
->
fõlds
[i].
ch¨_vÆ
;

119 
ªt
[
i
] = 0;

121  
ªt
;

122 
	}
}

138 
	$hb_throw_ex˚±i⁄
 (
obj_ªf_t
 * 
îef
)

140 
	`HB_ERR
("%†UNIMPLEMENTED\n", 
__func__
);

141 
	`exô
(
EXIT_FAILURE
);

142 
	}
}

	@src/gc.c

15 
	~<°dlib.h
>

16 
	~<time.h
>

17 
	~<°rög.h
>

19 
	~<mm.h
>

20 
	~<˛ass.h
>

21 
	~<li°.h
>

22 
	~<hashèbÀ.h
>

23 
	~<thªad.h
>

24 
	~<°ack.h
>

25 
	~<time.h
>

26 
	~<gc.h
>

57 
jthªad_t
 * 
cur_thªad
;

65 
	$sˇn_roŸs
 (
gc_°©e_t
 * 
°©e
)

67 
gc_roŸ_t
 * 
roŸ
;

69 
	`li°_f‹_óch_íåy
(
roŸ
, &
°©e
->
roŸ_li°
, 
lök
) {

71 
	`GC_DEBUG
("Sˇ¬ögÑoŸ (%s)\n", 
roŸ
->
«me
);

73 i‡(
roŸ
->
	`sˇn
(
°©e
,ÑoŸ->
±r
) != 0) {

74 
	`HB_ERR
("CouldÇŸ sˇ¿roŸ (%s)\n", 
roŸ
->
«me
);

81 
	}
}

89 
	$ªf_tbl_ö£π_ªf
 (
obj_ªf_t
 * 
ªf
)

91 
gc_°©e_t
 * 
°©e
 = 
cur_thªad
->
gc_°©e
;

92 
ªf_íåy_t
 * 
íåy
 = 
NULL
;

94 
íåy
 = 
	`mÆloc
((
ªf_íåy_t
));

96 i‡(!
íåy
) {

97 
	`HB_ERR
("CouldÇotállocateÑefÉntry\n");

101 
	`mem£t
(
íåy
, 0, (
ªf_íåy_t
));

103 
íåy
->
°©e
 = 
GC_REF_PRESENT
;

105 i‡(
	`nk_hèbÀ_ö£π
(
°©e
->
ªf_tbl
->
hèbÀ
, ()
ªf
, ()
íåy
) == 0) {

106 
	`HB_ERR
("CouldÇot insertÑefÉntry\n");

111 
	}
}

119 
	$ªf_tbl_ªmove_ªf
 (
obj_ªf_t
 * 
ªf
)

121 
ªf_íåy_t
 * 
íåy
 = 
NULL
;

122 
gc_°©e_t
 * 
°©e
 = 
cur_thªad
->
gc_°©e
;

124 
íåy
 = (
ªf_íåy_t
*)
	`nk_hèbÀ_ªmove
(
°©e
->
ªf_tbl
->
hèbÀ
, ()
ªf
, 0);

126 i‡(!
íåy
) {

127 
	`HB_ERR
("NoÑefÉntryÅoÑemove\n");

131 
	`‰ì
(
íåy
);

134 
	}
}

143 
	$˛ór_ªf_tbl
 (
gc_°©e_t
 * 
°©e
)

145 
nk_hashèbÀ_ôî
 * 
ôî
 = 
	`nk_¸óã_hèbÀ_ôî
(
°©e
->
ªf_tbl
->
hèbÀ
);

147 i‡(!
ôî
) {

148 
	`HB_ERR
("CouldÇŸ cª©êª‡èbÀ iãøt‹ i¿%s\n", 
__func__
);

153 
ªf_íåy_t
 * 
íåy
 = (ªf_íåy_t*)
	`nk_hèbÀ_gë_ôî_vÆue
(
ôî
);

155 i‡(
íåy
) {

156 
íåy
->
°©e
 = 
GC_REF_ABSENT
;

159 } 
	`nk_hèbÀ_ôî_adv™˚
(
ôî
) != 0);

161 
	`nk_de°roy_hèbÀ_ôî
(
ôî
);

164 
	}
}

176 
	$m¨k
 (
gc_°©e_t
 * 
°©e
)

179 
	`GC_DEBUG
("BEGIN MARK PHASE\n");

181 i‡(
	`˛ór_ªf_tbl
(
°©e
) != 0) {

182 
	`HB_ERR
("CouldÇot clearÑefÅable\n");

187 i‡(
	`sˇn_roŸs
(
°©e
) != 0) {

188 
	`HB_ERR
("CouldÇot scanÑoots\n");

193 
	}
}

202 
obj_ªf_t
 *

203 
	$gc_¨øy_Æloc
 (
u1
 
ty≥
, 
i4
 
cou¡
)

205 
obj_ªf_t
 * 
ªf
 = 
	`¨øy_Æloc
(
ty≥
, 
cou¡
);

207 i‡(!
ªf
) {

208 
	`HB_ERR
("GC couldÇotállocateárray object\n");

209  
NULL
;

212 i‡(
	`ªf_tbl_ö£π_ªf
(
ªf
) != 0) {

213  
NULL
;

216  
ªf
;

217 
	}
}

226 
obj_ªf_t
 *

227 
	$gc_°r_obj_Æloc
 (c⁄° * 
°r
)

229 
obj_ªf_t
 * 
ªf
 = 
	`°rög_obje˘_Æloc
(
°r
);

231 i‡(!
ªf
) {

232 
	`HB_ERR
("GC couldÇotállocate string object\n");

233  
NULL
;

236 i‡(
	`ªf_tbl_ö£π_ªf
(
ªf
) != 0) {

237  
NULL
;

240  
ªf
;

241 
	}
}

250 
obj_ªf_t
 *

251 
	$gc_obj_Æloc
 (
java_˛ass_t
 * 
˛s
)

253 
obj_ªf_t
 * 
ªf
 = 
	`obje˘_Æloc
(
˛s
);

255 i‡(!
ªf
) {

256 
	`HB_ERR
("GC couldÇotállocate object\n");

257  
NULL
;

260 i‡(
	`ªf_tbl_ö£π_ªf
(
ªf
) != 0) {

261  
NULL
;

264  
ªf
;

265 
	}
}

276 
	$swìp
 (
gc_°©e_t
 * 
°©e
)

278 
	`HB_ERR
("%†UNIMPLEMENTED\n", 
__func__
);

280 
	}
}

284 
	$ªf_hash_‚
 (
key
)

286  
	`nk_hash_l⁄g
(
key
, ()*8);

287 
	}
}

291 
	$ªf_eq_‚
 (
k1
, 
k2
)

293  (
k1
 =
k2
);

294 
	}
}

302 
	$öô_ªf_tbl
 (
gc_°©e_t
 * 
°©e
)

304 
°©e
->
ªf_tbl
 = 
	`mÆloc
((
gc_ªf_tbl_t
));

305 i‡(!
°©e
->
ªf_tbl
) {

306 
	`HB_ERR
("CouldÇotállocateÑefÅable\n");

309 
	`mem£t
(
°©e
->
ªf_tbl
, 0, (
gc_ªf_tbl_t
));

311 
°©e
->
ªf_tbl
->
hèbÀ
 = 
	`nk_¸óã_hèbÀ
(0,

312 
ªf_hash_‚
,

313 
ªf_eq_‚
);

315 i‡(!
°©e
->
ªf_tbl
->
hèbÀ
) {

316 
	`HB_ERR
("CouldÇot createrÑef hashtable\n");

321 
	}
}

330 
add_roŸ
 (* 
roŸ_±r
,

331 (*
sˇn_‚
)(
gc_°©e_t
 * 
gc_°©e
, * 
¥iv_d©a
),

332 c⁄° * 
«me
,

333 
gc_°©e_t
 * 
°©e
)

335 
gc_roŸ_t
 * 
roŸ
 = 
NULL
;

337 i‡(!
roŸ_±r
) {

338 
	`HB_ERR
("Giví badÑoŸ i¿%s\n", 
__func__
);

342 
roŸ
 = 
	`mÆloc
((
gc_roŸ_t
));

344 i‡(!
roŸ
) {

345 
	`HB_ERR
("CouldÇotállocateÑoot struct\n");

349 
	`mem£t
(
roŸ
, 0, (
gc_roŸ_t
));

351 
roŸ
->
±r
 = 
roŸ_±r
;

352 
roŸ
->
sˇn
 = 
sˇn_‚
;

353 
roŸ
->
«me
 =Çame;

356 
	`li°_add
(&
roŸ
->
lök
, &
°©e
->
roŸ_li°
);

358 
	`GC_DEBUG
("GCáddedÑoŸ (%s)\n", 
«me
);

361 
	}
}

372 
	$sˇn_ba£_ªf
 (
gc_°©e_t
 * 
gc_°©e
, * 
¥iv_d©a
)

374 
obj_ªf_t
 * 
ªf
 = (obj_ªf_t*)
¥iv_d©a
;

375 
ªf_íåy_t
 * 
ªf_ít
 = 
NULL
;

377 
ªf_ít
 = (
ªf_íåy_t
*)
	`nk_hèbÀ_£¨ch
(
gc_°©e
->
ªf_tbl
->
hèbÀ
, (Ë
ªf
);

379 i‡(!
ªf_ít
) {

380 
	`HB_ERR
("CouldÇot find base objectÑeference in hash!\n");

384 
ªf_ít
->
°©e
 = 
GC_REF_PRESENT
;

387 
	}
}

396 
ölöe
 

397 
	$is_vÆid_ªf
 (
obj_ªf_t
 * 
ªf
, 
gc_°©e_t
 * 
°©e
)

399  
	`nk_hèbÀ_£¨ch
(
°©e
->
ªf_tbl
->
hèbÀ
, ()
ªf
) != 0;

400 
	}
}

409 
	$m¨k_ªf
 (
obj_ªf_t
 * 
ªf
, 
gc_°©e_t
 * 
°©e
)

411 
ªf_íåy_t
 * 
íåy
 = 
NULL
;

413 
íåy
 = (
ªf_íåy_t
*)
	`nk_hèbÀ_£¨ch
(
°©e
->
ªf_tbl
->
hèbÀ
, ()
ªf
);

415 i‡(!
íåy
) {

416 
	`HB_ERR
("GC couldÇot markÇon-presentÑef\n");

420 
íåy
->
°©e
 = 
GC_REF_PRESENT
;

423 
	}
}

435 
	$sˇn_ba£_obj
 (
gc_°©e_t
 * 
gc_°©e
, * 
¥iv_d©a
)

437 
	`HB_ERR
("%†UNIMPLEMENTED\n", 
__func__
);

439 
	}
}

447 
	$sˇn_ba£_‰ame
 (
gc_°©e_t
 * 
gc_°©e
, * 
¥iv_d©a
)

449 
	`HB_ERR
("%†UNIMPLEMENTED\n", 
__func__
);

451 
	}
}

460 
	$sˇn_˛ass_m≠
 (
gc_°©e_t
 * 
gc_°©e
, * 
¥iv_d©a
)

463 
	`HB_ERR
("%†UNIMPLEMENTED\n", 
__func__
);

465 
	}
}

476 
	$gc_should_cﬁÀ˘
(
jthªad_t
 * 
t
)

478 
gc_time_t
 * 
time
 = &
t
->
gc_°©e
->
time_öfo
;

479 
time•ec
 
s
;

481 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
s
);

483 
time
->
time_sö˚_cﬁÀ˘
 +(
s
.
tv_n£c
/1000000Ë+ (s.
tv_£c
*1000);

485 i‡(
time
->
time_sö˚_cﬁÀ˘
 >Åime->
öãrvÆ_ms
) {

490 
	}
}

502 
	$gc_cﬁÀ˘
 (
jthªad_t
 * 
t
)

504 
time•ec
 
s
, 
e
;

505 
gc_°©s_t
 * 
°©s
 = &
t
->
gc_°©e
->
cﬁÀ˘_°©s
;

507 
	`mem£t
(
°©s
, 0, (
gc_°©s_t
));

509 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
s
);

511 i‡(
	`m¨k
(
t
->
gc_°©e
) != 0) {

512 
	`HB_ERR
("GC couldÇot mark\n");

516 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
e
);

518 
°©s
->
m¨k_time
 = (
e
.
tv_£c
 - 
s
.tv_£c)*1000000000UL + (e.
tv_n£c
 - s.tv_nsec);

519 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
s
);

521 i‡(
	`swìp
(
t
->
gc_°©e
) != 0) {

522 
	`HB_ERR
("GC couldÇot sweep\n");

526 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
e
);

528 
°©s
->
swìp_time
 = (
e
.
tv_£c
 - 
s
.tv_£c)*1000000000UL + (e.
tv_n£c
 - s.tv_nsec);

530 
°©s
->
gc_time
 = sèts->
m¨k_time
 + sèts->
swìp_time
;

532 i‡(
t
->
gc_°©e
->
åa˚
) {

533 
	`HB_INFO
("GC STATS:\n");

534 
	`HB_INFO
(" Obje˘†cﬁÀ˘ed: %d\n", 
°©s
->
obj_cﬁÀ˘ed
);

535 
	`HB_INFO
(" Hó∞Re˛aimed: %dB\n", 
°©s
->
byãs_ª˛aimed
);

536 
	`HB_INFO
(" GC Time: %lu.%lums\n", 
°©s
->
gc_time
 / 1000000, stats->gc_time % 1000000);

537 
	`HB_INFO
(" |__M¨k: %lu.%lums\n", 
°©s
->
m¨k_time
 / 1000000, stats->mark_time % 1000000);

538 
	`HB_INFO
(" |__Swìp: %lu.%lums\n", 
°©s
->
swìp_time
 / 1000000, stats->sweep_time % 1000000);

542 
t
->
gc_°©e
->
time_öfo
.
time_sö˚_cﬁÀ˘
 = 0;

545 
	}
}

554 
	$gc_ö£π_ªf
 (
obj_ªf_t
 * 
ªf
)

556  
	`ªf_tbl_ö£π_ªf
(
ªf
);

557 
	}
}

567 
	$gc_öô
 (
jthªad_t
 * 
maö
, 
obj_ªf_t
 * 
ba£_obj
, 
åa˚
, 
öãrvÆ
)

569 
«tive_obj_t
 * 
obj
 = («tive_obj_t*)
ba£_obj
->
hóp_±r
;

571 
maö
->
gc_°©e
 = 
	`mÆloc
((
gc_°©e_t
));

573 i‡(!
maö
->
gc_°©e
) {

574 
	`HB_ERR
("CouldÇot create GC state\n");

578 
	`mem£t
(
maö
->
gc_°©e
, 0, (
gc_°©e_t
));

580 i‡(
	`öô_ªf_tbl
(
maö
->
gc_°©e
) != 0) {

581 
	`HB_ERR
("CouldÇot initÑefÅable\n");

585 
	`INIT_LIST_HEAD
(&
maö
->
gc_°©e
->
roŸ_li°
);

588 
	`add_roŸ
(
ba£_obj
, 
sˇn_ba£_ªf
, "Ba£ Obje˘ Ref.", 
maö
->
gc_°©e
);

589 
	`add_roŸ
(
obj
, 
sˇn_ba£_obj
, "Ba£ Obje˘", 
maö
->
gc_°©e
);

590 
	`add_roŸ
(
maö
->
cur_‰ame
, 
sˇn_ba£_‰ame
, "Ba£ Føme", maö->
gc_°©e
);

591 
	`add_roŸ
(
	`hb_gë_˛assm≠
(), 
sˇn_˛ass_m≠
, "Cœs†M≠", 
maö
->
gc_°©e
);

593 i‡(
	`ªf_tbl_ö£π_ªf
(
ba£_obj
) != 0) {

594 
	`HB_ERR
("CouldÇot insert base objectÑef intoÑefÅable\n");

598 
maö
->
gc_°©e
->
åa˚
 =Årace;

600 i‡(
öãrvÆ
) {

601 
maö
->
gc_°©e
->
time_öfo
.
öãrvÆ_ms
 = 
öãrvÆ
;

603 
maö
->
gc_°©e
->
time_öfo
.
öãrvÆ_ms
 = 
GC_DEFAULT_INTERVAL
;

606 
	`GC_DEBUG
("GC Initialized.\n");

609 
	}
}

	@src/hashtable.c

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

39 
	~<hashèbÀ.h
>

40 
	~<ty≥s.h
>

43 
	snk_hash_íåy
 {

44 
	mkey
;

45 
	mvÆue
;

46 
	mhash
;

47 
nk_hash_íåy
 * 
	m√xt
;

50 
	snk_hashèbÀ
 {

51 
	mèbÀ_Àngth
;

52 
nk_hash_íåy
 ** 
	mèbÀ
;

53 
	míåy_cou¡
;

54 
	mlﬂd_limô
;

55 
	m¥ime_ödex
;

56 (*
	mhash_‚
Ë(
	mkey
);

57 (*
	meq_‚
Ë(
	mkey1
, 
	mkey2
);

64 
ölöe
 

65 
	$do_hash
 (
nk_hashèbÀ
 * 
hèbÀ
, 
key
)

69 
i
 = 
hèbÀ
->
	`hash_‚
(
key
);

70 
i
 += ~(i << 9);

71 
i
 ^= ((i >> 14) | (i << 18));

72 
i
 += (i << 4);

73 
i
 ^= ((i >> 10) | (i << 22));

75  
i
;

76 
	}
}

81 #ifde‡
__NAUT_32BIT__


83 
	#GOLDEN_RATIO_PRIME
 0x9e370001UL

	)

84 
	#BITS_PER_LONG
 32

	)

87 
	#GOLDEN_RATIO_PRIME
 0x9e37fffffffc0001UL

	)

88 
	#BITS_PER_LONG
 64

	)

93 
	$nk_hash_l⁄g
 (
vÆ
, 
bôs
)

95 
hash
 = 
vÆ
;

97 #ifde‡
__NAUT_32BIT__


99 
hash
 *
GOLDEN_RATIO_PRIME
;

102 
n
 = 
hash
;

103 
n
 <<= 18;

104 
hash
 -
n
;

105 
n
 <<= 33;

106 
hash
 -
n
;

107 
n
 <<= 3;

108 
hash
 +
n
;

109 
n
 <<= 3;

110 
hash
 -
n
;

111 
n
 <<= 4;

112 
hash
 +
n
;

113 
n
 <<= 2;

114 
hash
 +
n
;

118  
hash
 >> (
BITS_PER_LONG
 - 
bôs
);

119 
	}
}

125 
	$nk_hash_buf„r
 (* 
msg
, 
Àngth
)

127 
hash
 = 0;

128 
ãmp
 = 0;

129 
i
;

131 
i
 = 0; i < 
Àngth
; i++) {

132 
hash
 = (hash << 4Ë+ *(
msg
 + 
i
) + i;

133 i‡((
ãmp
 = (
hash
 & 0xF0000000))) {

134 
hash
 ^(
ãmp
 >> 24);

136 
hash
 &~
ãmp
;

138  
hash
;

139 
	}
}

144 
ölöe
 

145 
	$ödexF‹
 (
èbÀ_Àngth
, 
hash_vÆue
)

147  (
hash_vÆue
 % 
èbÀ_Àngth
);

148 
	}
};

160 
	#‰ìkey
(
X
Ë
	`‰ì
(X)

	)

164 
	$tmp_ªÆloc
 (* 
ﬁd_±r
, 
ﬁd_size
, 
√w_size
)

166 * 
√w_buf
 = 
	`mÆloc
(
√w_size
);

168 i‡(
√w_buf
 =
NULL
) {

169  
NULL
;

172 
	`mem˝y
(
√w_buf
, 
ﬁd_±r
, 
ﬁd_size
);

173 
	`‰ì
(
ﬁd_±r
);

175  
√w_buf
;

176 
	}
}

184 c⁄° 
	g¥imes
[] =

197 c⁄° 
	glﬂd_Á˘‹s
[] =

208 c⁄° 
	g¥ime_èbÀ_Àngth
 = (
¥imes
) / (primes[0]);

212 
nk_hashèbÀ
 *

213 
nk_¸óã_hèbÀ
 (
mö_size
,

214 (*
hash_‚
) (),

215 (*
eq_‚
) (, ))

217 
nk_hashèbÀ
 * 
hèbÀ
;

218 
¥ime_ödex
;

219 
size
 = 
¥imes
[0];

222 i‡(
mö_size
 > (1u << 30)) {

223  
NULL
;

227 
¥ime_ödex
 = 0;Örime_ödex < 
¥ime_èbÀ_Àngth
;Örime_index++) {

228 i‡(
¥imes
[
¥ime_ödex
] > 
mö_size
) {

229 
size
 = 
¥imes
[
¥ime_ödex
];

235 i‡(
¥ime_ödex
 =
¥ime_èbÀ_Àngth
) {

236  
NULL
;

239 
hèbÀ
 = (
nk_hashèbÀ
 *)
	`mÆloc
((nk_hashtable));

241 i‡(
hèbÀ
 =
NULL
) {

242  
NULL
;

245 
hèbÀ
->
èbÀ
 = (
nk_hash_íåy
 **)
	`mÆloc
((nk_hash_íåy*Ë* 
size
);

247 i‡(
hèbÀ
->
èbÀ
 =
NULL
) {

248 
	`‰ì
(
hèbÀ
);

249  
NULL
;

253 
	`mem£t
(
hèbÀ
->
èbÀ
, 0, 
size
 * (
nk_hash_íåy
 *));

255 
hèbÀ
->
èbÀ_Àngth
 = 
size
;

256 
hèbÀ
->
¥ime_ödex
 =Örime_index;

257 
hèbÀ
->
íåy_cou¡
 = 0;

258 
hèbÀ
->
hash_‚
 = hash_fn;

259 
hèbÀ
->
eq_‚
 =Éq_fn;

260 
hèbÀ
->
lﬂd_limô
 = 
lﬂd_Á˘‹s
[
¥ime_ödex
];

262  
hèbÀ
;

263 
	}
}

269 
	$hashèbÀ_ex∑nd
 (
nk_hashèbÀ
 * 
hèbÀ
)

272 
nk_hash_íåy
 ** 
√w_èbÀ
;

273 
nk_hash_íåy
 * 
tmp_íåy
;

274 
nk_hash_íåy
 ** 
íåy_±r
;

275 
√w_size
;

276 
i
;

277 
ödex
;

280 i‡(
hèbÀ
->
¥ime_ödex
 =(
¥ime_èbÀ_Àngth
 - 1)) {

284 
√w_size
 = 
¥imes
[++(
hèbÀ
->
¥ime_ödex
)];

286 
√w_èbÀ
 = (
nk_hash_íåy
 **)
	`mÆloc
((nk_hash_íåy*Ë* 
√w_size
);

288 i‡(
√w_èbÀ
 !
NULL
) {

289 
	`mem£t
(
√w_èbÀ
, 0, 
√w_size
 * (
hash_íåy
 *));

293 
i
 = 0; i < 
hèbÀ
->
èbÀ_Àngth
; i++) {

295 (
tmp_íåy
 = 
hèbÀ
->
èbÀ
[
i
]Ë!
NULL
) {

296 
hèbÀ
->
èbÀ
[
i
] = 
tmp_íåy
->
√xt
;

298 
ödex
 = 
	`ödexF‹
(
√w_size
, 
tmp_íåy
->
hash
);

300 
tmp_íåy
->
√xt
 = 
√w_èbÀ
[
ödex
];

302 
√w_èbÀ
[
ödex
] = 
tmp_íåy
;

306 
	`‰ì
(
hèbÀ
->
èbÀ
);

308 
hèbÀ
->
èbÀ
 = 
√w_èbÀ
;

313 
√w_èbÀ
 = (
nk_hash_íåy
 **)
	`tmp_ªÆloc
(
hèbÀ
->
èbÀ
, 
¥imes
[hèbÀ->
¥ime_ödex
 - 1],

314 
√w_size
 * (
nk_hash_íåy
 *));

316 i‡(
√w_èbÀ
 =
NULL
) {

317 (
hèbÀ
->
¥ime_ödex
)--;

321 
hèbÀ
->
èbÀ
 = 
√w_èbÀ
;

323 
	`mem£t
(
√w_èbÀ
[
hèbÀ
->
èbÀ_Àngth
], 0, 
√w_size
 - htable->table_length);

325 
i
 = 0; i < 
hèbÀ
->
èbÀ_Àngth
; i++) {

327 
íåy_±r
 = &(
√w_èbÀ
[
i
]), 
tmp_íåy
 = *entry_ptr;

328 
tmp_íåy
 !
NULL
;

329 
tmp_íåy
 = *
íåy_±r
) {

331 
ödex
 = 
	`ödexF‹
(
√w_size
, 
tmp_íåy
->
hash
);

333 i‡(
i
 =
ödex
) {

334 
íåy_±r
 = &(
tmp_íåy
->
√xt
);

336 *
íåy_±r
 = 
tmp_íåy
->
√xt
;

337 
tmp_íåy
->
√xt
 = 
√w_èbÀ
[
ödex
];

338 
√w_èbÀ
[
ödex
] = 
tmp_íåy
;

344 
hèbÀ
->
èbÀ_Àngth
 = 
√w_size
;

346 
hèbÀ
->
lﬂd_limô
 = 
lﬂd_Á˘‹s
[hèbÀ->
¥ime_ödex
];

349 
	}
}

353 
	$nk_hèbÀ_cou¡
 (
nk_hashèbÀ
 * 
hèbÀ
)

355  
hèbÀ
->
íåy_cou¡
;

356 
	}
}

360 
	$nk_hèbÀ_ö£π
 (
nk_hashèbÀ
 * 
hèbÀ
,

361 
key
,

362 
vÆue
)

365 
ödex
;

366 
nk_hash_íåy
 * 
√w_íåy
;

368 i‡(++(
hèbÀ
->
íåy_cou¡
Ë> hèbÀ->
lﬂd_limô
) {

373 
	`hashèbÀ_ex∑nd
(
hèbÀ
);

377 
√w_íåy
 = (
nk_hash_íåy
 *)
	`mÆloc
((nk_hash_entry));

379 i‡(
√w_íåy
 =
NULL
) {

380 (
hèbÀ
->
íåy_cou¡
)--;

384 
√w_íåy
->
hash
 = 
	`do_hash
(
hèbÀ
, 
key
);

386 
ödex
 = 
	`ödexF‹
(
hèbÀ
->
èbÀ_Àngth
, 
√w_íåy
->
hash
);

388 
√w_íåy
->
key
 = key;

389 
√w_íåy
->
vÆue
 = value;

391 
√w_íåy
->
√xt
 = 
hèbÀ
->
èbÀ
[
ödex
];

393 
hèbÀ
->
èbÀ
[
ödex
] = 
√w_íåy
;

396 
	}
}

401 
	$nk_hèbÀ_ch™ge
 (
nk_hashèbÀ
 * 
hèbÀ
,

402 
key
,

403 
vÆue
,

404 
‰ì_vÆue
)

406 
nk_hash_íåy
 * 
tmp_íåy
;

407 
hash_vÆue
;

408 
ödex
;

410 
hash_vÆue
 = 
	`do_hash
(
hèbÀ
, 
key
);

412 
ödex
 = 
	`ödexF‹
(
hèbÀ
->
èbÀ_Àngth
, 
hash_vÆue
);

414 
tmp_íåy
 = 
hèbÀ
->
èbÀ
[
ödex
];

416 
tmp_íåy
 !
NULL
) {

418 i‡((
hash_vÆue
 =
tmp_íåy
->
hash
Ë&& (
hèbÀ
->
	`eq_‚
(
key
,Åmp_entry->key))) {

420 i‡(
‰ì_vÆue
) {

421 
	`‰ì
((*)(
tmp_íåy
->
vÆue
));

424 
tmp_íåy
->
vÆue
 = value;

427 
tmp_íåy
 =Åmp_íåy->
√xt
;

430 
	}
}

435 
	$nk_hèbÀ_öc
 (
nk_hashèbÀ
 * 
hèbÀ
,

436 
key
,

437 
vÆue
)

439 
nk_hash_íåy
 * 
tmp_íåy
;

440 
hash_vÆue
;

441 
ödex
;

443 
hash_vÆue
 = 
	`do_hash
(
hèbÀ
, 
key
);

445 
ödex
 = 
	`ödexF‹
(
hèbÀ
->
èbÀ_Àngth
, 
hash_vÆue
);

447 
tmp_íåy
 = 
hèbÀ
->
èbÀ
[
ödex
];

449 
tmp_íåy
 !
NULL
) {

451 i‡((
hash_vÆue
 =
tmp_íåy
->
hash
Ë&& (
hèbÀ
->
	`eq_‚
(
key
,Åmp_entry->key))) {

453 
tmp_íåy
->
vÆue
 += value;

456 
tmp_íåy
 =Åmp_íåy->
√xt
;

459 
	}
}

463 
	$nk_hèbÀ_dec
 (
nk_hashèbÀ
 * 
hèbÀ
, 
key
, 
vÆue
)

465 
nk_hash_íåy
 * 
tmp_íåy
;

466 
hash_vÆue
;

467 
ödex
;

469 
hash_vÆue
 = 
	`do_hash
(
hèbÀ
, 
key
);

471 
ödex
 = 
	`ödexF‹
(
hèbÀ
->
èbÀ_Àngth
, 
hash_vÆue
);

473 
tmp_íåy
 = 
hèbÀ
->
èbÀ
[
ödex
];

475 
tmp_íåy
 !
NULL
) {

477 i‡((
hash_vÆue
 =
tmp_íåy
->
hash
Ë&& (
hèbÀ
->
	`eq_‚
(
key
,Åmp_entry->key))) {

479 
tmp_íåy
->
vÆue
 -= value;

482 
tmp_íåy
 =Åmp_íåy->
√xt
;

485 
	}
}

493 
	$nk_hèbÀ_£¨ch
 (
nk_hashèbÀ
 * 
hèbÀ
, 
key
)

495 
nk_hash_íåy
 * 
curs‹
;

496 
hash_vÆue
;

497 
ödex
;

499 
hash_vÆue
 = 
	`do_hash
(
hèbÀ
, 
key
);

501 
ödex
 = 
	`ödexF‹
(
hèbÀ
->
èbÀ_Àngth
, 
hash_vÆue
);

503 
curs‹
 = 
hèbÀ
->
èbÀ
[
ödex
];

505 
curs‹
 !
NULL
) {

507 i‡((
hash_vÆue
 =
curs‹
->
hash
) &&

508 (
hèbÀ
->
	`eq_‚
(
key
, 
curs‹
->key))) {

509  
curs‹
->
vÆue
;

512 
curs‹
 = curs‹->
√xt
;

515  ()
NULL
;

516 
	}
}

521 
	$nk_hèbÀ_ªmove
(
nk_hashèbÀ
 * 
hèbÀ
, 
key
, 
‰ì_key
)

526 
nk_hash_íåy
 * 
curs‹
;

527 
nk_hash_íåy
 ** 
íåy_±r
;

528 
vÆue
;

529 
hash_vÆue
;

530 
ödex
;

532 
hash_vÆue
 = 
	`do_hash
(
hèbÀ
, 
key
);

534 
ödex
 = 
	`ödexF‹
(
hèbÀ
->
èbÀ_Àngth
, 
hash_vÆue
);

536 
íåy_±r
 = &(
hèbÀ
->
èbÀ
[
ödex
]);

537 
curs‹
 = *
íåy_±r
;

539 
curs‹
 !
NULL
) {

541 i‡((
hash_vÆue
 =
curs‹
->
hash
) &&

542 (
hèbÀ
->
	`eq_‚
(
key
, 
curs‹
->key))) {

544 *
íåy_±r
 = 
curs‹
->
√xt
;

545 
hèbÀ
->
íåy_cou¡
--;

546 
vÆue
 = 
curs‹
->value;

548 i‡(
‰ì_key
) {

549 
	`‰ìkey
((*)(
curs‹
->
key
));

551 
	`‰ì
(
curs‹
);

553  
vÆue
;

556 
íåy_±r
 = &(
curs‹
->
√xt
);

557 
curs‹
 = curs‹->
√xt
;

559  ()
NULL
;

560 
	}
}

565 
	$nk_‰ì_hèbÀ
 (
nk_hashèbÀ
 * 
hèbÀ
, 
‰ì_vÆues
, 
‰ì_keys
)

567 
i
;

568 
nk_hash_íåy
 * 
curs‹
;;

569 
nk_hash_íåy
 **
èbÀ
 = 
hèbÀ
->table;

571 i‡(
‰ì_vÆues
) {

572 
i
 = 0; i < 
hèbÀ
->
èbÀ_Àngth
; i++) {

573 
curs‹
 = 
èbÀ
[
i
];

575 
curs‹
 !
NULL
) {

576 
nk_hash_íåy
 * 
tmp
;

578 
tmp
 = 
curs‹
;

579 
curs‹
 = curs‹->
√xt
;

581 i‡(
‰ì_keys
) {

582 
	`‰ìkey
((*)(
tmp
->
key
));

584 
	`‰ì
((*)(
tmp
->
vÆue
));

585 
	`‰ì
(
tmp
);

589 
i
 = 0; i < 
hèbÀ
->
èbÀ_Àngth
; i++) {

590 
curs‹
 = 
èbÀ
[
i
];

592 
curs‹
 !
NULL
) {

593 
nk_hash_íåy
 * 
tmp
;

595 
tmp
 = 
curs‹
;

596 
curs‹
 = curs‹->
√xt
;

598 i‡(
‰ì_keys
) {

599 
	`‰ìkey
((*)(
tmp
->
key
));

601 
	`‰ì
(
tmp
);

606 
	`‰ì
(
hèbÀ
->
èbÀ
);

607 
	`‰ì
(
hèbÀ
);

608 
	}
}

617 
nk_hashèbÀ_ôî
 *

618 
	$nk_¸óã_hèbÀ_ôî
 (
nk_hashèbÀ
 * 
hèbÀ
)

620 
i
;

621 
èbÀ_Àngth
;

623 
nk_hashèbÀ_ôî
 * 
ôî
 = (nk_hashèbÀ_ôî *)
	`mÆloc
((nk_hashtable_iter));

625 i‡(
ôî
 =
NULL
) {

626  
NULL
;

629 
ôî
->
hèbÀ
 = htable;

630 
ôî
->
íåy
 = 
NULL
;

631 
ôî
->
∑ª¡
 = 
NULL
;

632 
èbÀ_Àngth
 = 
hèbÀ
->table_length;

633 
ôî
->
ödex
 = 
èbÀ_Àngth
;

635 i‡(
hèbÀ
->
íåy_cou¡
 == 0) {

636  
ôî
;

639 
i
 = 0; i < 
èbÀ_Àngth
; i++) {

640 i‡(
hèbÀ
->
èbÀ
[
i
] !
NULL
) {

641 
ôî
->
íåy
 = 
hèbÀ
->
èbÀ
[
i
];

642 
ôî
->
ödex
 = 
i
;

647  
ôî
;

648 
	}
}

652 
	$nk_hèbÀ_gë_ôî_key
 (
nk_hashèbÀ_ôî
 * 
ôî
)

654  
ôî
->
íåy
->
key
;

655 
	}
}

658 
	$nk_hèbÀ_gë_ôî_vÆue
 (
nk_hashèbÀ_ôî
 * 
ôî
)

660  
ôî
->
íåy
->
vÆue
;

661 
	}
}

667 
	$nk_hèbÀ_ôî_adv™˚
 (
nk_hashèbÀ_ôî
 * 
ôî
)

669 
j
;

670 
èbÀ_Àngth
;

671 
nk_hash_íåy
 ** 
èbÀ
;

672 
nk_hash_íåy
 * 
√xt
;

674 i‡(
ôî
->
íåy
 =
NULL
) {

679 
√xt
 = 
ôî
->
íåy
->next;

681 i‡(
√xt
 !
NULL
) {

682 
ôî
->
∑ª¡
 = iãr->
íåy
;

683 
ôî
->
íåy
 = 
√xt
;

687 
èbÀ_Àngth
 = 
ôî
->
hèbÀ
->table_length;

688 
ôî
->
∑ª¡
 = 
NULL
;

690 i‡(
èbÀ_Àngth
 <(
j
 = ++(
ôî
->
ödex
))) {

691 
ôî
->
íåy
 = 
NULL
;

695 
èbÀ
 = 
ôî
->
hèbÀ
->table;

697 (
√xt
 = 
èbÀ
[
j
]Ë=
NULL
) {

698 i‡(++
j
 >
èbÀ_Àngth
) {

699 
ôî
->
ödex
 = 
èbÀ_Àngth
;

700 
ôî
->
íåy
 = 
NULL
;

705 
ôî
->
ödex
 = 
j
;

706 
ôî
->
íåy
 = 
√xt
;

709 
	}
}

719 
	$nk_hèbÀ_ôî_ªmove
 (
nk_hashèbÀ_ôî
 * 
ôî
, 
‰ì_key
)

721 
nk_hash_íåy
 * 
ªmembî_íåy
;

722 
nk_hash_íåy
 * 
ªmembî_∑ª¡
;

723 
ªt
;

726 i‡((
ôî
->
∑ª¡
Ë=
NULL
) {

728 
ôî
->
hèbÀ
->
èbÀ
[ôî->
ödex
] = iãr->
íåy
->
√xt
;

731 
ôî
->
∑ª¡
->
√xt
 = iãr->
íåy
->next;

736 
ªmembî_íåy
 = 
ôî
->
íåy
;

737 
ôî
->
hèbÀ
->
íåy_cou¡
--;

738 i‡(
‰ì_key
) {

739 
	`‰ìkey
((*)(
ªmembî_íåy
->
key
));

743 
ªmembî_∑ª¡
 = 
ôî
->
∑ª¡
;

744 
ªt
 = 
	`nk_hèbÀ_ôî_adv™˚
(
ôî
);

746 i‡(
ôî
->
∑ª¡
 =
ªmembî_íåy
) {

747 
ôî
->
∑ª¡
 = 
ªmembî_∑ª¡
;

750 
	`‰ì
(
ªmembî_íåy
);

751  
ªt
;

752 
	}
}

757 
	$nk_hèbÀ_ôî_£¨ch
 (
nk_hashèbÀ_ôî
 * 
ôî
,

758 
nk_hashèbÀ
 * 
hèbÀ
,

759 
key
)

761 
nk_hash_íåy
 * 
íåy
;

762 
nk_hash_íåy
 * 
∑ª¡
;

763 
hash_vÆue
;

764 
ödex
;

766 
hash_vÆue
 = 
	`do_hash
(
hèbÀ
, 
key
);

767 
ödex
 = 
	`ödexF‹
(
hèbÀ
->
èbÀ_Àngth
, 
hash_vÆue
);

769 
íåy
 = 
hèbÀ
->
èbÀ
[
ödex
];

770 
∑ª¡
 = 
NULL
;

772 
íåy
 !
NULL
) {

774 i‡((
hash_vÆue
 =
íåy
->
hash
) &&

775 (
hèbÀ
->
	`eq_‚
(
key
, 
íåy
->key))) {

776 
ôî
->
ödex
 = index;

777 
ôî
->
íåy
 =Éntry;

778 
ôî
->
∑ª¡
 =Öarent;

779 
ôî
->
hèbÀ
 = htable;

782 
∑ª¡
 = 
íåy
;

783 
íåy
 =É¡ry->
√xt
;

786 
	}
}

790 
	$nk_de°roy_hèbÀ_ôî
 (
nk_hashèbÀ_ôî
 * 
ôî
)

792 i‡(
ôî
) {

793 
	`‰ì
(
ôî
);

795 
	}
}

	@src/mm.c

15 
	~<°rög.h
>

16 
	~<sys/mm™.h
>

18 
	~<hb_utû.h
>

19 
	~<˛ass.h
>

20 
	~<li°.h
>

21 
	~<gc.h
>

22 
	~<mm.h
>

28 
hóp_öfo
 * 
	ghóp
;

40 
	$hóp_öô
 (
hóp_size_megs
)

42 * 
hóp_±r
 = 
NULL
;

43 
i
;

44 
size
 = 
hóp_size_megs
 ? (hóp_size_megs*1024*1024Ë: 
HB_DEFAULT_HEAP_SIZE
;

46 
hóp_±r
 = 
	`mm≠
(
NULL
,

47 
	`roundup_pow_of_two
(
size
),

48 
PROT_READ
|
PROT_WRITE
,

49 
MAP_PRIVATE
|
MAP_ANONYMOUS
,

53 i‡(
hóp_±r
 =
MAP_FAILED
) {

54 
	`HB_ERR
("CouldÇotállocate JVM heap\n");

58 
	`MM_DEBUG
("AŒoˇãd %d.%d MB o‡hó∞•a˚\n", 
size
/1000000, size%1000000);

60 
hóp
 = 
	`mÆloc
((
hóp_öfo
));

61 i‡(!
hóp
) {

62 
	`HB_ERR
("CouldÇotállocate heap structure\n");

65 
	`mem£t
(
hóp
, 0, (
hóp_öfo
));

67 
hóp
->
hóp_ªgi⁄
 = 
hóp_±r
;

68 
hóp
->
obj_cou¡
 = 0;

69 
hóp
->
‹dî
 = 
	`ûog2
(
	`roundup_pow_of_two
(
size
));

70 
hóp
->
Æloˇãd
 = (1UL << hóp->
‹dî
);

71 
hóp
->
mö_‹dî
 = 
	`ûog2
(
	`roundup_pow_of_two
((
«tive_obj_t
)));

73 
hóp
->
‰ì_li°s
 = 
	`mÆloc
((hóp->
‹dî
 + 1Ë* (
li°_hód
));

75 i‡(!
hóp
->
‰ì_li°s
) {

76 
	`HB_ERR
("CouldÇotállocateÜist heads\n");

81 
i
 = 0; i <
hóp
->
‹dî
; i++) {

82 
	`INIT_LIST_HEAD
(&(
hóp
->
‰ì_li°s
[
i
]));

86 
hóp
->
num_mö_blocks
 = (1 << hóp->
‹dî
Ë/ (1 << hóp->
mö_‹dî
);

87 
hóp
->
èg_bôs
 = 
	`mÆloc
(
	`BITS_TO_LONGS
(hóp->
num_mö_blocks
) * ());

89 i‡(!
hóp
->
èg_bôs
) {

90 
	`HB_ERR
("CouldÇotállocateÅag bits\n");

94 
	`BUDDY_DEBUG
("buddyállocator:Çum_blocks=%lu,Åag_bits=%p,álloc=%lu\n",

95 
hóp
->
num_mö_blocks
, hóp->
èg_bôs
, 
	`BITS_TO_LONGS
(heap->num_min_blocks)*());

98 
	`bôm≠_zîo
(
hóp
->
èg_bôs
, hóp->
num_mö_blocks
);

101 
u8
 
addr
 = (u8)
hóp
->
hóp_ªgi⁄
;

102 
i
 = 0; i < 
hóp
->
num_mö_blocks
; i++) {

103 
	`buddy_‰ì
((*)
addr
, 
hóp
->
mö_‹dî
);

104 
addr
 +(1 << 
hóp
->
mö_‹dî
);

108 
	}
}

120 
obj_ªf_t
 *

121 
	$¨øy_Æloc
 (
u1
 
ty≥
, 
i4
 
cou¡
)

123 
obj_ªf_t
 * 
ªf
 = 
NULL
;

124 
«tive_obj_t
 * 
obj
 = 
NULL
;

125 
sz
;

127 
	`MM_DEBUG
("AŒoˇtögáºay o‡ty≥ %dÜígth %d\n", 
ty≥
, 
cou¡
);

128 
ªf
 = 
	`mÆloc
((
obj_ªf_t
));

129 i‡(!
ªf
) {

130 
	`HB_ERR
("CouldÇotállocate objectÑef\n");

131  
NULL
;

133 
	`mem£t
(
ªf
, 0, (
obj_ªf_t
));

135 
sz
 = (
«tive_obj_t
Ë+ ((
v¨_t
)*(
cou¡
+1));

137 
obj
 = 
	`Æloc_checked
(
sz
);

139 i‡(!
obj
) {

140 
	`HB_ERR
("THROWING OUT OF MEMORY EXCEPTION i¿%s\n", 
__func__
);

142  
HB_NULL
;

145 
obj
->
fõlds
 = (
v¨_t
*)((
u8
)obj + (
«tive_obj_t
));

146 
obj
->
fõld_öfos
 = 
NULL
;

147 
obj
->
fõld_cou¡
 = 
cou¡
;

150 
	`mem£t
(
obj
->
fõlds
, 0, (
v¨_t
)*(
cou¡
+1));

153 
obj
->
Êags
.
¨øy
.
ißºay
 = 1;

154 
obj
->
Êags
.
¨øy
.
ty≥
 =Åype;

155 
obj
->
Êags
.
¨øy
.
Àngth
 = 
cou¡
;

157 
obj
->
˛ass
 = 
NULL
;

159 
ªf
->
hóp_±r
 = (
u8
)
obj
;

160 
ªf
->
ty≥
 = 
OBJ_ARRAY
;

162  
ªf
;

163 
	}
}

174 
obj_ªf_t
 *

175 
	$°rög_obje˘_Æloc
 (c⁄° * 
°r
)

177 
obj_ªf_t
 * 
ªf
 = 
NULL
;

178 
«tive_obj_t
 * 
obj
 = 
NULL
;

179 
obj_ªf_t
 * 
¨r_ªf
 = 
NULL
;

180 
«tive_obj_t
 * 
¨r
 = 
NULL
;

181 
java_˛ass_t
 * 
˛s
 = 
	`hb_gë_‹_lﬂd_˛ass
("java/lang/String");

182 
i
;

184 i‡(!
˛s
) {

185 
	`HB_ERR
("CouldÇot get string class\n");

186  
NULL
;

189 
ªf
 = 
	`obje˘_Æloc
(
˛s
);

190 i‡(!
ªf
) {

191 
	`HB_ERR
("CouldÇotállocate string object\n");

192  
NULL
;

195 
obj
 = (
«tive_obj_t
*)
ªf
->
hóp_±r
;

198 
¨r_ªf
 = 
	`gc_¨øy_Æloc
(
T_CHAR
, 
	`°æí
(
°r
));

200 i‡(!
¨r_ªf
) {

201 
	`HB_ERR
("CouldÇotállocate characterárray for String object\n");

202  
NULL
;

205 
¨r
 = (
«tive_obj_t
*)
¨r_ªf
->
hóp_±r
;

207 
i
 = 0; i < 
	`°æí
(
°r
); i++) {

208 
¨r
->
fõlds
[
i
].
ch¨_vÆ
 = 
°r
[i];

211 
obj
->
fõlds
[0].obj = 
¨r_ªf
;

213 
	`MM_DEBUG
("Såög obje˘áŒoˇãdáà%∞(%s)\n", 
ªf
, 
°r
);

215  
ªf
;

216 
	}
}

234 
obj_ªf_t
 *

235 
	$obje˘_Æloc
 (
java_˛ass_t
 * 
˛s
)

237 
obj_ªf_t
 * 
ªf
 = 
NULL
;

238 
«tive_obj_t
 * 
obj
 = 
NULL
;

239 
sz
;

240 
fõld_cou¡
;

242 
ªf
 = 
	`mÆloc
((
obj_ªf_t
));

243 i‡(!
ªf
) {

244 
	`HB_ERR
("CouldÇotállocate objectÑef\n");

245  
NULL
;

247 
	`mem£t
(
ªf
, 0, (
obj_ªf_t
));

249 
fõld_cou¡
 = 
	`hb_gë_obj_fõld_cou¡
(
˛s
);

251 
sz
 = (
«tive_obj_t
Ë+ ((
v¨_t
)*
fõld_cou¡
Ë+ ((
fõld_öfo_t
*)*field_count);

253 
obj
 = 
	`Æloc_checked
(
sz
);

255 i‡(!
obj
) {

256 
	`HB_ERR
("THROWING OUT OF MEMORY EXCEPTION\n");

258  
HB_NULL
;

261 
	`mem£t
(
obj
, 0, 
sz
);

263 
obj
->
˛ass
 = 
˛s
;

264 
obj
->
fõld_cou¡
 = field_count;

265 
obj
->
fõlds
 = (
v¨_t
*)((
u8
)obj + (
«tive_obj_t
));

266 
obj
->
fõld_öfos
 = (
fõld_öfo_t
**)((
u8
)obj->
fõlds
 + ((
v¨_t
)*
fõld_cou¡
));

268 i‡(
	`hb_£tup_obj_fõlds
(
obj
, obj->
˛ass
) < 0) {

269 
	`HB_ERR
("CouldÇŸ sëu∞fõld†f‹Çew obje˘ i¿˛as†%s\n", 
	`hb_gë_˛ass_«me
(
obj
->
˛ass
));

270  
HB_NULL
;

273 
ªf
->
hóp_±r
 = (
u8
)
obj
;

274 
ªf
->
ty≥
 = 
OBJ_OBJ
;

276  
ªf
;

277 
	}
}

281 
	$obje˘_‰ì
 (
«tive_obj_t
 * 
obj
) {

282 
	`buddy_‰ì
((*)
obj
, obj->
‹dî
);

283 
	}
}

295 
«tive_obj_t
 *

296 
	$Æloc_checked
 (c⁄° 
u4
 
size
)

298 
«tive_obj_t
 * 
obj
 = 
NULL
;

299 
u2
 
‹dî
 = 
	`ûog2
(
	`roundup_pow_of_two
(
size
));

301 
	`MM_DEBUG
("AŒoˇtög sizê%u (rounded u∞tÿ%lu)\n", 
size
, 1UL<<
‹dî
);

303 
obj
 = (
«tive_obj_t
*)
	`buddy_Æloc
(
‹dî
);

305 i‡(!
obj
) {

306  
NULL
;

309 
obj
->
Êags
.
vÆ
 = 0;

310 
obj
->
‹dî
 = order;

312  
obj
;

313 
	}
}

325 
ölöe
 

326 
	$__£t_bô
 (
u8
 
ƒ
, vﬁ©ûê* 
addr
)

328 
__asm__
 
	`__vﬁ©ûe__
 (

330 :"+m" (*(vﬁ©ûê*)
addr
)

331 :"r" (
ƒ
) : "memory");

332 
	}
}

335 
ölöe
 

336 
	$__˛ór_bô
 (
u8
 
ƒ
, vﬁ©ûê* 
addr
)

338 
__asm__
 
	`__vﬁ©ûe__
 (

340 :"+m" (*(vﬁ©ûê*)
addr
)

341 :"r" (
ƒ
));

342 
	}
}

344 
ölöe
 

345 
	$£tb
 (
u8
 
ƒ
, vﬁ©ûê*
addr
)

347 
u8
 
off£t
, 
bôoff£t
;

348 
off£t
 = 
ƒ
/8;

349 
bôoff£t
 = 
ƒ
 % 8;

351 
addr
[
off£t
] |(0x1UL << 
bôoff£t
);

352 
	}
}

354 
ölöe
 

355 
	$˛órb
 (
u8
 
ƒ
, vﬁ©ûê*
addr
)

357 
u8
 
off£t
, 
bôoff£t
;

358 
off£t
 = 
ƒ
/8;

359 
bôoff£t
 = 
ƒ
 % 8;

361 
addr
[
off£t
] &~(0x1UL << 
bôoff£t
);

362 
	}
}

368 
ölöe
 
u8


369 
	$block_to_id
 (
«tive_obj_t
 *
block
)

371 
u8
 
block_id
 =

372 ((
u8
)
block
 - (u8)
hóp
->
hóp_ªgi⁄
Ë>> hóp->
mö_‹dî
;

374  
block_id
;

375 
	}
}

381 
ölöe
 

382 
	$m¨k_avaûabÀ
 (
«tive_obj_t
 *
blk
)

384 i‡(
blk
 =(
«tive_obj_t
*)0xdfa00000ULL) {

385 
	`BUDDY_DEBUG
("Magi¯block %p: block_to_id=%lu\n", 
blk
, 
	`block_to_id
(blk));

388 
	`__£t_bô
(
	`block_to_id
(
blk
), (vﬁ©ûê*)
hóp
->
èg_bôs
);

389 
	}
}

395 
ölöe
 

396 
	$m¨k_Æloˇãd
 (
«tive_obj_t
 *
blk
)

398 
	`__˛ór_bô
(
	`block_to_id
(
blk
), (vﬁ©ûê*)
hóp
->
èg_bôs
);

399 
	}
}

405 
ölöe
 

406 
	$is_avaûabÀ
 (
«tive_obj_t
 *
blk
)

408  
	`ã°_bô
(
	`block_to_id
(
blk
), 
hóp
->
èg_bôs
);

409 
	}
}

416 
	$föd_buddy
 (
«tive_obj_t
 *
blk
, 
u2
 
‹dî
)

418 
u8
 
_block
;

419 
u8
 
_buddy
;

422 
_block
 = (
u8
)
blk
 - (u8)
hóp
->
hóp_ªgi⁄
;

425 
_buddy
 = 
_block
 ^ (1UL << 
‹dî
);

428  (*)(
_buddy
 + (
u8
)
hóp
->
hóp_ªgi⁄
);

429 
	}
}

433 
	$buddy_Æloc
 (
u2
 
‹dî
)

435 
u2
 
j
;

436 
li°_hód
 *
li°
;

437 
«tive_obj_t
 *
blk
;

438 
«tive_obj_t
 *
buddy_blk
;

440 
	`BUDDY_DEBUG
("BUDDY ALLOC ordî: %u\n", 
‹dî
);

442 i‡(
‹dî
 > 
hóp
->order) {

443 
	`BUDDY_DEBUG
("order isÅoo big\n");

444  
NULL
;

448 i‡(
‹dî
 < 
hóp
->
mö_‹dî
) {

449 
‹dî
 = 
hóp
->
mö_‹dî
;

450 
	`BUDDY_DEBUG
("‹dîÉx∑ndedÅÿ%u\n",
‹dî
);

453 
j
 = 
‹dî
; j <
hóp
->order; j++) {

456 
li°
 = &
hóp
->
‰ì_li°s
[
j
];

458 i‡(
	`li°_em±y
(
li°
)) {

459 
	`BUDDY_DEBUG
("Skùpög ordî %uá†thêli° i†em±y\n", 
j
);

463 
blk
 = 
	`li°_íåy
(
li°
->
√xt
, 
«tive_obj_t
, 
lök
);

464 
	`li°_dñ_öô
(&
blk
->
lök
);

465 
	`m¨k_Æloˇãd
(
blk
);

467 
	`BUDDY_DEBUG
("Found block %∞© ordî %u\n", 
blk
, 
j
);

470 
j
 > 
‹dî
) {

471 --
j
;

472 
buddy_blk
 = (
«tive_obj_t
*)((
u8
)
blk
 + (1UL << 
j
));

473 
buddy_blk
->
‹dî
 = 
j
;

474 
	`m¨k_avaûabÀ
(
buddy_blk
);

475 
	`BUDDY_DEBUG
("In£πed buddy block %∞ötÿ‹dî %u\n", 
buddy_blk
, 
j
);

476 
	`li°_add
(&
buddy_blk
->
lök
, &
hóp
->
‰ì_li°s
[
j
]);

479 
blk
->
‹dî
 = 
j
;

481 
	`BUDDY_DEBUG
("Rëu∫ög block %∞(‹dî=%u)\n", 
blk
, blk->
‹dî
);

483 
hóp
->
Æloˇãd
 +(1UL << 
blk
->
‹dî
);

485  
blk
;

488 
	`BUDDY_DEBUG
("FAILED TO ALLOCATE RETURNING NULL\n");

490  
NULL
;

491 
	}
}

494 
	$buddy_‰ì
 (* 
addr
, 
u2
 
‹dî
)

496 
«tive_obj_t
 * 
blk
 = 
NULL
;

498 
	`BUDDY_DEBUG
("BUDDY FREE o¿addr=%p, ordî=%u\n", 
addr
, 
‹dî
);

500 i‡(
‹dî
 < 
hóp
->
mö_‹dî
) {

501 
‹dî
 = 
hóp
->
mö_‹dî
;

502 
	`BUDDY_DEBUG
("‹dî upd©edÅÿ%u\n", 
hóp
->
mö_‹dî
);

505 i‡(
‹dî
 > 
hóp
->order) {

506 
	`HB_ERR
("TriedÅo free block biggerÅhan heap!\n");

510 
blk
 = (
«tive_obj_t
*)
addr
;

514 
hóp
->
Æloˇãd
 -(1UL << 
‹dî
);

517 
‹dî
 < 
hóp
->order) {

518 
«tive_obj_t
 * 
buddy
 = 
	`föd_buddy
(
blk
, 
‹dî
);

519 
	`BUDDY_DEBUG
("buddyáà‹dî %u i†%p\n", 
‹dî
, 
buddy
);

521 i‡(!
	`is_avaûabÀ
(
buddy
)) {

522 
	`BUDDY_DEBUG
("buddyÇotávailable\n");

526 i‡(
	`is_avaûabÀ
(
buddy
Ë&& (buddy->
‹dî
 != order)) {

527 
	`BUDDY_DEBUG
("buddyávaûabÀ buàha†‹dî %u\n", 
buddy
->
‹dî
);

531 
	`BUDDY_DEBUG
("Buddy merge\n");

533 
	`li°_dñ_öô
(&(
buddy
->
lök
));

534 i‡(
buddy
 < 
blk
) {

535 
blk
 = 
buddy
;

537 
blk
->
‹dî
 = ++order;

540 
blk
->
‹dî
 = order;

542 
	`BUDDY_DEBUG
("End of search: block=%p order=%u heap order=%u block->order=%u\n",

543 
blk
, 
‹dî
, 
hóp
->order, blk->order);

545 
	`m¨k_avaûabÀ
(
blk
);

547 
	`li°_add
(&(
blk
->
lök
), &(
hóp
->
‰ì_li°s
[
‹dî
]));

549 i‡(
blk
->
‹dî
 == -1) {

550 
	`HB_ERR
("FAIL: block order wentÇuts\n");

552 
	}
}

556 
	$buddy_°©s
 ()

558 
	`HB_INFO
("HEAP ADDR: %p\n", 
hóp
->
hóp_ªgi⁄
);

559 
	`HB_INFO
("HEAP SIZE: %luB\n", (1UL<<
hóp
->
‹dî
));

560 
	`HB_INFO
("HEAP ALLOC: %luB\n", 
hóp
->
Æloˇãd
);

561 
	`HB_INFO
("HEAP FREE: %luB\n", (1UL<<
hóp
->
‹dî
Ë- hóp->
Æloˇãd
);

562 
	`HB_INFO
("HEAP MIN ORDER: %u (%lu B)\n", 
hóp
->
mö_‹dî
, (1UL<<heap->min_order));

563 
	`HB_INFO
("HEAP #MIN BLKS: %lu\n", 
hóp
->
num_mö_blocks
);

564 
	}
}

	@src/native.c

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

17 
	~<°dio.h
>

18 
	~<uni°d.h
>

20 
	~<«tive.h
>

21 
	~<ty≥s.h
>

22 
	~<thªad.h
>

23 
	~<˛ass.h
>

24 
	~<°ack.h
>

25 
	~<bc_öãΩ.h
>

27 
jthªad_t
 * 
cur_thªad
;

30 
	$h™dÀ_putCh¨ToStdout0
 (
obj_ªf_t
 * 
thi§ef
, 
b
)

32 
	`putch¨
(
b
);

34 
	}
}

37 
	$h™dÀ_putSåögToStdout0
 (
obj_ªf_t
 * 
thi§ef
, obj_ªf_à* 
°ºef
)

39 
obj_ªf_t
 * 
¨r_ªf
;

40 
«tive_obj_t
 * 
°robj
;

41 
«tive_obj_t
 * 
¨r_obj
;

42 
i
;

44 
°robj
 = (
«tive_obj_t
*)
°ºef
->
hóp_±r
;

46 
¨r_ªf
 = 
°robj
->
fõlds
[0].
obj
;

47 
¨r_obj
 = (
«tive_obj_t
*)
¨r_ªf
->
hóp_±r
;

49 
i
 = 0; i < 
¨r_obj
->
Êags
.
¨øy
.
Àngth
; i++) {

50 
	`putch¨
(
¨r_obj
->
fõlds
[
i
].
ch¨_vÆ
);

54 
	}
}

58 
	$h™dÀ_¶ìp
 (
m£c
)

60 
	`u¶ìp
(
m£c
 * 1000);

62 
	}
}

65 
	$h™dÀ_exô
 (
code
)

67 
	`exô
(
code
);

69 
	}
}

73 
	$hb_h™dÀ_«tive
 (
mëhod_öfo_t
 * 
mi
,

74 
java_˛ass_t
 * 
˛s
,

75 
u1
 
övoke_ty≥
)

77 
∑rm_cou¡
;

78 c⁄° * 
m«me
 = 
	`hb_gë_c⁄°_°r
(
mi
->
«me_idx
, mi->
ow√r
);

79 
›_°ack_t
 * 
›_°ack
 = 
cur_thªad
->
cur_‰ame
->op_stack;

80 
nwide
;

82 
∑rm_cou¡
 = 
	`hb_gë_∑rm_cou¡_‰om_mëhod
(
cur_thªad
, 
mi
, 
övoke_ty≥
, &
nwide
);

84 
	`NATIVE_DEBUG
("HandlingÇative method (%s), %dárgs\n",

85 
	`hb_gë_c⁄°_°r
(
mi
->
«me_idx
, mi->
ow√r
), 
∑rm_cou¡
);

87 i‡(
	`°rcmp
(
m«me
, "putStringToStdout0") == 0) {

88 
v¨_t
 
°r
 = 
›_°ack
->
›rs
[›_°ack->
•
--];

89 
v¨_t
 
this
 = 
›_°ack
->
›rs
[›_°ack->
•
--];

90 i‡(
	`h™dÀ_putSåögToStdout0
(
this
.
obj
, 
°r
.obj) != 0) {

91 
	`HB_ERR
("CouldÇot handleÖutStringToStdout0\n");

94 } i‡(
	`°rcmp
(
m«me
, "putCharToStdout0") == 0) {

95 
v¨_t
 
b
 = 
›_°ack
->
›rs
[›_°ack->
•
--];

96 
v¨_t
 
this
 = 
›_°ack
->
›rs
[›_°ack->
•
--];

97 i‡(
	`h™dÀ_putCh¨ToStdout0
(
this
.
obj
, 
b
.
öt_vÆ
) != 0) {

98 
	`HB_ERR
("CouldÇot handleÖutCharToStdout0\n");

101 } i‡(
	`°rcmp
(
m«me
, "sleep") == 0) {

102 
v¨_t
 
m£c
 = 
›_°ack
->
›rs
[›_°ack->
•
--];

103 i‡(
	`h™dÀ_¶ìp
(
m£c
.
l⁄g_vÆ
) != 0) {

104 
	`HB_ERR
("CouldÇot handle sleep\n");

107 } i‡(
	`°rcmp
(
m«me
, "exit") == 0) {

108 
v¨_t
 
code
 = 
›_°ack
->
›rs
[›_°ack->
•
--];

109 i‡(
	`h™dÀ_exô
(()
code
.
öt_vÆ
) != 0) {

110 
	`HB_ERR
("CouldÇot handleÉxit\n");

114 
	`HB_ERR
("Unh™dÀdÇ©ivêmëhod %s\n", 
m«me
);

119 
	}
}

	@src/stack.c

15 
	~<°rög.h
>

16 
	~<°dlib.h
>

18 
	~<ty≥s.h
>

19 
	~<˛ass.h
>

20 
	~<°ack.h
>

21 
	~<thªad.h
>

22 
	~<gc.h
>

25 
jthªad_t
 * 
cur_thªad
;

32 
	$hb_dump_›_°ack
 ()

34 
›_°ack_t
 * 
°ack
 = 
cur_thªad
->
cur_‰ame
->
›_°ack
;

35 
i
;

37 
	`HB_INFO
("OP_STACK (•=%d):\n", 
°ack
->
•
);

39 
i
 = 0; i <
°ack
->
•
; i++) {

40 
	`HB_INFO
(" [%p]\n", (*)
°ack
->
›rs
[
i
].
±r_vÆ
);

42 
	}
}

46 
	$hb_dump_loˇls
 ()

48 
°ack_‰ame_t
 * 
‰ame
 = 
cur_thªad
->
cur_‰ame
;

49 
i
;

51 
	`HB_INFO
("LOCALS:\n");

53 
i
 = 0; i < 
‰ame
->
max_loˇls
; i++) {

54 
	`HB_INFO
(" [%p]\n", (*)
‰ame
->
loˇls
[
i
].
±r_vÆ
);

56 
	}
}

60 
	$hb_p›_‰ame
 (
jthªad_t
 * 
t
)

62 
°ack_‰ame_t
 * 
‰ame
 = 
t
->
cur_‰ame
;

63 
°ack_‰ame_t
 * 
¥ev
 = 
‰ame
->prev;

65 i‡(
¥ev
) {

66 
¥ev
->
√xt
 = 
NULL
;

69 
t
->
cur_‰ame
 = 
¥ev
;

71 
	`‰ì
(
‰ame
->
loˇls
);

72 
	`‰ì
(
‰ame
->
›_°ack
);

73 
	`‰ì
(
‰ame
);

76 
	}
}

81 
	$gë_∑rm_cou¡
 (c⁄° * 
mdesc
, * 
nwide
)

83 
i
;

84 
cou¡
 = 0;

85 
Àn
 = 
	`°æí
(
mdesc
);

87 
i
 = 0; i < 
Àn
; i++, 
mdesc
++) {

89 i‡(*
mdesc
 == '(') ;

91 i‡(*
mdesc
 == '[') ;

93 i‡(*
mdesc
 == 'L') {

94 *
mdesc
 != ';') {

95 
i
++;

96 
mdesc
++;

100 i‡(*
mdesc
 == ')') {

105 i‡(*
mdesc
 == 'J' || *mdesc == 'D') {

106 
cou¡
++;

107 (*
nwide
)++;

110 
cou¡
++;

113  
cou¡
;

114 
	}
}

118 
	$c›y_loˇls
 (
jthªad_t
 * 
t
, 
«rgs
, c⁄° * 
mdesc
, 
u1
 
ty≥
)

120 
i
;

121 
°ackcou¡
 = 0;

122 
loˇlcou¡
 = 0;

123 
Àn
 = 
	`°æí
(
mdesc
);

124 
›_°ack_t
 * 
¥ev›
 = 
t
->
cur_‰ame
->
¥ev
->
›_°ack
;

127 i‡(
ty≥
 !
ST_INVOKE_STATIC
) {

128 
t
->
cur_‰ame
->
loˇls
[
loˇlcou¡
] = 
¥ev›
->
›rs
[¥ev›->
•
 - 
«rgs
 + 1 + 
°ackcou¡
];

129 
°ackcou¡
++;

130 
loˇlcou¡
++;

133 
i
 = 0; i < 
Àn
; i++, 
mdesc
++) {

135 i‡(*
mdesc
 == '(') ;

137 i‡(*
mdesc
 == '[') ;

139 i‡(*
mdesc
 == 'L') {

140 *
mdesc
 != ';') {

141 
i
++;

142 
mdesc
++;

146 i‡(*
mdesc
 == ')') {

151 i‡(*
mdesc
 == 'J' || *mdesc == 'D') {

152 
t
->
cur_‰ame
->
loˇls
[
loˇlcou¡
].
l⁄g_vÆ
 = 
¥ev›
->
›rs
[¥ev›->
•
 - 
«rgs
 + 1 + 
°ackcou¡
].long_val & 0xffffffff;

153 
t
->
cur_‰ame
->
loˇls
[
loˇlcou¡
+1].
l⁄g_vÆ
 = 
¥ev›
->
›rs
[¥ev›->
•
 - 
«rgs
 + 1 + 
°ackcou¡
].long_val >> 32;

154 
°ackcou¡
++;

155 
loˇlcou¡
+=2;

159 
t
->
cur_‰ame
->
loˇls
[
loˇlcou¡
] = 
¥ev›
->
›rs
[¥ev›->
•
 - 
«rgs
 + 1 + 
°ackcou¡
];

160 
°ackcou¡
++;

161 
loˇlcou¡
++;

163 
	}
}

167 
	$hb_gë_∑rm_cou¡_‰om_mëhod
 (
jthªad_t
 * 
t
,

168 
mëhod_öfo_t
 * 
mi
,

169 
u1
 
övoke_ty≥
,

170 * 
nwide
)

172 c⁄° * 
mdesc
 = 
	`hb_gë_c⁄°_°r
(
mi
->
desc_idx
, mi->
ow√r
);

173 
«rgs
 = 
	`gë_∑rm_cou¡
(
mdesc
, 
nwide
);

175 i‡(
övoke_ty≥
 !
ST_INVOKE_STATIC
) {

176 
«rgs
++;

179  
«rgs
;

180 
	}
}

197 
	$hb_£tup_mëhod_∑rms
 (
jthªad_t
 * 
t
,

198 
mëhod_öfo_t
 * 
mi
,

199 
u1
 
övoke_ty≥
)

201 c⁄° * 
mdesc
 = 
	`hb_gë_c⁄°_°r
(
mi
->
desc_idx
, mi->
ow√r
);

202 
°ack_‰ame_t
 * 
¥ev
 = 
t
->
cur_‰ame
->prev;

203 
›_°ack_t
 * 
¥ev›
 = 
¥ev
->
›_°ack
;

204 
i
;

205 
nwide
;

207 
«rgs
 = 
	`gë_∑rm_cou¡
(
mdesc
, &
nwide
);

209 
	`ST_DEBUG
("Found %dárg†ö (%sË%s\n", 
«rgs
, 
mdesc
, 
__func__
);

212 i‡(
övoke_ty≥
 !
ST_INVOKE_STATIC
) {

213 
«rgs
++;

216 
	`ST_DEBUG
("Prev op stack (bottomÅoÅop):\n");

217 
i
 = 0; i < 
«rgs
; i++) {

218 
	`ST_DEBUG
(" [%p]\n", (*)
¥ev›
->
›rs
[¥ev›->
•
 - 
«rgs
 + 
i
 + 1].
l⁄g_vÆ
);

221 
	`c›y_loˇls
(
t
, 
«rgs
, 
mdesc
, 
övoke_ty≥
);

225 
	`ST_DEBUG
("NEW LOCALS:\n");

227 
i
 = 0; i < 
«rgs
; i++) {

228 
	`ST_DEBUG
("[%p]\n", (*)
t
->
cur_‰ame
->
loˇls
[
i
].
l⁄g_vÆ
);

232 
¥ev›
->
•
 -
«rgs
;

235 
	}
}

239 
	$öô_›_°ack
 (
°ack_‰ame_t
 * 
‰ame
, 
max_›rs
)

241 
‰ame
->
›_°ack
 = 
	`mÆloc
((
›_°ack_t
Ë+ (
v¨_t
)*
max_›rs
);

242 i‡(!
‰ame
->
›_°ack
) {

243 
	`HB_ERR
("CouldÇotállocate operand stack\n");

247 
	`mem£t
(
‰ame
->
›_°ack
, 0, (
›_°ack_t
Ë+ (
v¨_t
)*
max_›rs
);

248 
‰ame
->
›_°ack
->
max_›rs
 = max_oprs;

249 
‰ame
->
›_°ack
->
•
 = 0;

250 
‰ame
->
›_°ack
->frame = frame;

252 
	}
}

255 
ölöe
 

256 
	$öô_‰ame
 (
°ack_‰ame_t
 * 
‰ame
,

257 
jthªad_t
 * 
ow√r
,

258 
java_˛ass_t
 * 
˛s
,

259 
mëhod_öfo_t
* 
möfo
)

261 
‰ame
->
pc
 = 0;

262 
‰ame
->
ow√r
 = owner;

263 
‰ame
->
˛s
 = cls;

264 
‰ame
->
möfo
 = minfo;

265 
‰ame
->
√xt
 = 
NULL
;

266 
‰ame
->
¥ev
 = 
NULL
;

268 
‰ame
->
max_loˇls
 = 0;

269 
‰ame
->
loˇls
 = 
NULL
;

270 
	}
}

273 
ölöe
 

274 
	$lök_‰ame
 (
°ack_‰ame_t
 * 
‰ame
, 
jthªad_t
 * 
t
)

276 i‡(
t
->
cur_‰ame
) {

277 
t
->
cur_‰ame
->
√xt
 = 
‰ame
;

278 
‰ame
->
¥ev
 = 
t
->
cur_‰ame
;

281 
t
->
cur_‰ame
 = 
‰ame
;

282 
	}
}

286 
	$hb_push_‰ame_by_mëhod
 (
jthªad_t
 * 
t
,

287 
mëhod_öfo_t
 * 
mi
)

289 
java_˛ass_t
 * 
˛s
 = 
mi
->
ow√r
;

290 
°ack_‰ame_t
 * 
‰ame
 = 
	`mÆloc
((stack_frame_t));

291 
max_›rs
;

293 i‡(!
‰ame
) {

294 
	`HB_ERR
("CouldÇotállocate frame\n");

298 
	`mem£t
(
‰ame
, 0, (
°ack_‰ame_t
));

300 
	`öô_‰ame
(
‰ame
, 
t
, 
˛s
, 
mi
);

303 i‡(
mi
->
code_©å
) {

305 
‰ame
->
max_loˇls
 = 
mi
->
code_©å
->max_locals;

306 
‰ame
->
loˇls
 = 
	`mÆloc
((
v¨_t
)*‰ame->
max_loˇls
);

308 i‡(!
‰ame
->
loˇls
) {

309 
	`HB_ERR
("CouldÇotállocateÜocal vars\n");

313 
	`mem£t
(
‰ame
->
loˇls
, 0, (
v¨_t
)*‰ame->
max_loˇls
);

315 
max_›rs
 = 
mi
->
code_©å
->
max_°ack
 + 1;

317 i‡(
	`öô_›_°ack
(
‰ame
, 
max_›rs
) != 0) {

318 
	`HB_ERR
("CouldÇŸ sëu∞› sèck i¿%s\n", 
__func__
);

323 
	`lök_‰ame
(
‰ame
, 
t
);

326 
	}
}

330 
	$hb_push_˘‹_‰ame
 (
jthªad_t
 * 
t
,

331 
obj_ªf_t
 * 
‹ef
)

333 
«tive_obj_t
 * 
obj
 = («tive_obj_t*)
‹ef
->
hóp_±r
;

334 
java_˛ass_t
 * 
˛s
 = 
obj
->
˛ass
;

335 
mëhod_öfo_t
 * 
mi
 = 
NULL
;

337 
mi
 = 
	`hb_gë_˘‹_möfo
(
˛s
);

339 i‡(!
mi
) {

340 
	`HB_ERR
("Couldn'àgë ct‹ möfo\¿ö %s\n", 
__func__
);

344 i‡(
	`hb_push_‰ame_by_mëhod
(
t
, 
mi
) != 0) {

345 
	`HB_ERR
("CouldÇotÖush ctor frame\n");

349 
t
->
cur_‰ame
->
loˇls
[0].
obj
 = 
‹ef
;

352 
	}
}

359 
	$hb_push_‰ame
 (
jthªad_t
 * 
t
,

360 
java_˛ass_t
 * 
˛s
,

361 
u2
 
mëhod_idx
)

363 
mëhod_öfo_t
 * 
mi
 = &
˛s
->
mëhods
[
mëhod_idx
];

365  
	`hb_push_‰ame_by_mëhod
(
t
, 
mi
);

366 
	}
}

370 
	$hb_push_ba£_‰ame
 (
jthªad_t
 * 
t
,

371 
java_˛ass_t
 * 
˛s
,

372 
obj_ªf_t
 * 
ba£_obj
,

373 
u2
 
mëhod_idx
)

375 
mëhod_öfo_t
 * 
mi
 = &
˛s
->
mëhods
[
mëhod_idx
];

377 i‡(
	`hb_push_‰ame_by_mëhod
(
t
, 
mi
) != 0) {

378 
	`HB_ERR
("CouldÇotÖush base frame\n");

382 
t
->
cur_‰ame
->
loˇls
[0].
obj
 = 
ba£_obj
;

383 
	`ST_DEBUG
("Pushed ba£ fømêwôh %d o¥s\n", 
t
->
cur_‰ame
->
›_°ack
->
max_›rs
);

386 
	}
}

	@src/thread.c

15 
	~<°rög.h
>

17 
	~<ty≥s.h
>

18 
	~<thªad.h
>

19 
	~<°ack.h
>

20 
	~<˛ass.h
>

22 
jthªad_t
 *

23 
	$hb_¸óã_thªad
 (
java_˛ass_t
 * 
˛s
, c⁄° * 
«me
)

25 
jthªad_t
 * 
t
 = 
	`mÆloc
((jthread_t));

26 i‡(!
t
) {

27 
	`HB_ERR
("CouldÇŸ cª©êthªad f‹ cœs†(%s)\n", 
	`hb_gë_˛ass_«me
(
˛s
));

28  
NULL
;

30 
	`mem£t
(
t
, 0, (
jthªad_t
));

32 
	`THR_DEBUG
("Cª©ögÅhªad f‹ cœs†(%s)\n", 
	`hb_gë_˛ass_«me
(
˛s
));

34 
t
->
˛ass
 = 
˛s
;

35 
t
->
cur_‰ame
 = 
NULL
;

36 
t
->
«me
 =Çame;

38  
t
;

39 
	}
}

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #ifde‡
__USE_XOPEN2K8


75 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 
	~<bôs/°©.h
>

80 
	#S_IFMT
 
__S_IFMT


	)

81 
	#S_IFDIR
 
__S_IFDIR


	)

82 
	#S_IFCHR
 
__S_IFCHR


	)

83 
	#S_IFBLK
 
__S_IFBLK


	)

84 
	#S_IFREG
 
__S_IFREG


	)

85 #ifde‡
__S_IFIFO


86 
	#S_IFIFO
 
__S_IFIFO


	)

88 #ifde‡
__S_IFLNK


89 
	#S_IFLNK
 
__S_IFLNK


	)

91 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


92 
	#S_IFSOCK
 
__S_IFSOCK


	)

97 
	#S_ISUID
 
__S_ISUID


	)

98 
	#S_ISGID
 
__S_ISGID


	)

100 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


102 
	#S_ISVTX
 
__S_ISVTX


	)

105 
	#S_IRUSR
 
__S_IREAD


	)

106 
	#S_IWUSR
 
__S_IWRITE


	)

107 
	#S_IXUSR
 
__S_IEXEC


	)

109 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

111 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

112 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

113 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

115 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

117 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

118 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

119 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

121 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

124 #ifdef 
__USE_MISC


125 #i‚de‡
R_OK


128 
	#R_OK
 4

	)

129 
	#W_OK
 2

	)

130 
	#X_OK
 1

	)

131 
	#F_OK
 0

	)

136 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


137 
	#SEEK_SET
 0

	)

138 
	#SEEK_CUR
 1

	)

139 
	#SEEK_END
 2

	)

148 #ifde‡
__USE_ATFILE


149 
	#AT_FDCWD
 -100

	)

152 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

153 
	#AT_REMOVEDIR
 0x200

	)

155 
	#AT_SYMLINK_FOLLOW
 0x400

	)

156 #ifde‡
__USE_GNU


157 
	#AT_NO_AUTOMOUNT
 0x800

	)

159 
	#AT_EMPTY_PATH
 0x1000

	)

161 
	#AT_EACCESS
 0x200

	)

170 
f˙é
 (
__fd
, 
__cmd
, ...);

179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

182 #ifde‡
__REDIRECT


183 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

184 
	`__n⁄nuŒ
 ((1));

186 
	#›í
 
›í64


	)

189 #ifde‡
__USE_LARGEFILE64


190 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

193 #ifde‡
__USE_ATFILE


203 #i‚de‡
__USE_FILE_OFFSET64


204 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

205 
	`__n⁄nuŒ
 ((2));

207 #ifde‡
__REDIRECT


208 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

209 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

211 
	#›í©
 
›í©64


	)

214 #ifde‡
__USE_LARGEFILE64


215 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

216 
	`__n⁄nuŒ
 ((2));

225 #i‚de‡
__USE_FILE_OFFSET64


226 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

228 #ifde‡
__REDIRECT


229 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

230 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

232 
	#¸ót
 
¸ót64


	)

235 #ifde‡
__USE_LARGEFILE64


236 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

239 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

240 && !
deföed
 
__USE_POSIX
))

249 
	#F_ULOCK
 0

	)

250 
	#F_LOCK
 1

	)

251 
	#F_TLOCK
 2

	)

252 
	#F_TEST
 3

	)

254 #i‚de‡
__USE_FILE_OFFSET64


255 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

257 #ifde‡
__REDIRECT


258 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

260 
	#lockf
 
lockf64


	)

263 #ifde‡
__USE_LARGEFILE64


264 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

268 #ifde‡
__USE_XOPEN2K


271 #i‚de‡
__USE_FILE_OFFSET64


272 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

273 
__advi£
Ë
__THROW
;

275 #ifde‡
__REDIRECT_NTH


276 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

277 
__off64_t
 
__Àn
, 
__advi£
),

278 
posix_Ádvi£64
);

280 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

283 #ifde‡
__USE_LARGEFILE64


284 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

285 
__advi£
Ë
__THROW
;

293 #i‚de‡
__USE_FILE_OFFSET64


294 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

296 #ifde‡
__REDIRECT


297 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

298 
__off64_t
 
__Àn
),

299 
posix_ÁŒoˇã64
);

301 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

304 #ifde‡
__USE_LARGEFILE64


305 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

311 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

312 && 
deföed
 
__va_¨g_∑ck_Àn


313 
	~<bôs/f˙é2.h
>

316 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

36 #i‚de‡
__öt8_t_deföed


37 
	#__öt8_t_deföed


	)

38 sig√d 
	töt8_t
;

39 
	töt16_t
;

40 
	töt32_t
;

41 #i‡
__WORDSIZE
 == 64

42 
	töt64_t
;

44 
__exãnsi⁄__


45 
	töt64_t
;

50 
	tuöt8_t
;

51 
	tuöt16_t
;

52 #i‚de‡
__uöt32_t_deföed


53 
	tuöt32_t
;

54 
	#__uöt32_t_deföed


	)

56 #i‡
__WORDSIZE
 == 64

57 
	tuöt64_t
;

59 
__exãnsi⁄__


60 
	tuöt64_t
;

67 sig√d 
	töt_Àa°8_t
;

68 
	töt_Àa°16_t
;

69 
	töt_Àa°32_t
;

70 #i‡
__WORDSIZE
 == 64

71 
	töt_Àa°64_t
;

73 
__exãnsi⁄__


74 
	töt_Àa°64_t
;

78 
	tuöt_Àa°8_t
;

79 
	tuöt_Àa°16_t
;

80 
	tuöt_Àa°32_t
;

81 #i‡
__WORDSIZE
 == 64

82 
	tuöt_Àa°64_t
;

84 
__exãnsi⁄__


85 
	tuöt_Àa°64_t
;

92 sig√d 
	töt_Á°8_t
;

93 #i‡
__WORDSIZE
 == 64

94 
	töt_Á°16_t
;

95 
	töt_Á°32_t
;

96 
	töt_Á°64_t
;

98 
	töt_Á°16_t
;

99 
	töt_Á°32_t
;

100 
__exãnsi⁄__


101 
	töt_Á°64_t
;

105 
	tuöt_Á°8_t
;

106 #i‡
__WORDSIZE
 == 64

107 
	tuöt_Á°16_t
;

108 
	tuöt_Á°32_t
;

109 
	tuöt_Á°64_t
;

111 
	tuöt_Á°16_t
;

112 
	tuöt_Á°32_t
;

113 
__exãnsi⁄__


114 
	tuöt_Á°64_t
;

119 #i‡
__WORDSIZE
 == 64

120 #i‚de‡
__öçå_t_deföed


121 
	töçå_t
;

122 
	#__öçå_t_deföed


	)

124 
	tuöçå_t
;

126 #i‚de‡
__öçå_t_deföed


127 
	töçå_t
;

128 
	#__öçå_t_deföed


	)

130 
	tuöçå_t
;

135 
__ötmax_t
 
	tötmax_t
;

136 
__uötmax_t
 
	tuötmax_t
;

139 #i‡
__WORDSIZE
 == 64

140 
	#__INT64_C
(
c
Ë¯## 
L


	)

141 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

143 
	#__INT64_C
(
c
Ë¯## 
LL


	)

144 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

150 
	#INT8_MIN
 (-128)

	)

151 
	#INT16_MIN
 (-32767-1)

	)

152 
	#INT32_MIN
 (-2147483647-1)

	)

153 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

155 
	#INT8_MAX
 (127)

	)

156 
	#INT16_MAX
 (32767)

	)

157 
	#INT32_MAX
 (2147483647)

	)

158 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

161 
	#UINT8_MAX
 (255)

	)

162 
	#UINT16_MAX
 (65535)

	)

163 
	#UINT32_MAX
 (4294967295U)

	)

164 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

168 
	#INT_LEAST8_MIN
 (-128)

	)

169 
	#INT_LEAST16_MIN
 (-32767-1)

	)

170 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

171 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

173 
	#INT_LEAST8_MAX
 (127)

	)

174 
	#INT_LEAST16_MAX
 (32767)

	)

175 
	#INT_LEAST32_MAX
 (2147483647)

	)

176 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

179 
	#UINT_LEAST8_MAX
 (255)

	)

180 
	#UINT_LEAST16_MAX
 (65535)

	)

181 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

182 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

186 
	#INT_FAST8_MIN
 (-128)

	)

187 #i‡
__WORDSIZE
 == 64

188 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

189 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

191 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

192 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

194 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

196 
	#INT_FAST8_MAX
 (127)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

199 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

201 
	#INT_FAST16_MAX
 (2147483647)

	)

202 
	#INT_FAST32_MAX
 (2147483647)

	)

204 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

207 
	#UINT_FAST8_MAX
 (255)

	)

208 #i‡
__WORDSIZE
 == 64

209 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

210 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

212 
	#UINT_FAST16_MAX
 (4294967295U)

	)

213 
	#UINT_FAST32_MAX
 (4294967295U)

	)

215 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

219 #i‡
__WORDSIZE
 == 64

220 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

221 
	#INTPTR_MAX
 (9223372036854775807L)

	)

222 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

224 
	#INTPTR_MIN
 (-2147483647-1)

	)

225 
	#INTPTR_MAX
 (2147483647)

	)

226 
	#UINTPTR_MAX
 (4294967295U)

	)

231 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

233 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

236 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

242 #i‡
__WORDSIZE
 == 64

243 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

244 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

246 #i‡
__WORDSIZE32_PTRDIFF_LONG


247 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

248 
	#PTRDIFF_MAX
 (2147483647L)

	)

250 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

251 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #i‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

312 
	#INT8_WIDTH
 8

	)

313 
	#UINT8_WIDTH
 8

	)

314 
	#INT16_WIDTH
 16

	)

315 
	#UINT16_WIDTH
 16

	)

316 
	#INT32_WIDTH
 32

	)

317 
	#UINT32_WIDTH
 32

	)

318 
	#INT64_WIDTH
 64

	)

319 
	#UINT64_WIDTH
 64

	)

321 
	#INT_LEAST8_WIDTH
 8

	)

322 
	#UINT_LEAST8_WIDTH
 8

	)

323 
	#INT_LEAST16_WIDTH
 16

	)

324 
	#UINT_LEAST16_WIDTH
 16

	)

325 
	#INT_LEAST32_WIDTH
 32

	)

326 
	#UINT_LEAST32_WIDTH
 32

	)

327 
	#INT_LEAST64_WIDTH
 64

	)

328 
	#UINT_LEAST64_WIDTH
 64

	)

330 
	#INT_FAST8_WIDTH
 8

	)

331 
	#UINT_FAST8_WIDTH
 8

	)

332 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

333 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

334 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

335 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

336 
	#INT_FAST64_WIDTH
 64

	)

337 
	#UINT_FAST64_WIDTH
 64

	)

339 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

340 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

342 
	#INTMAX_WIDTH
 64

	)

343 
	#UINTMAX_WIDTH
 64

	)

345 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

346 
	#SIG_ATOMIC_WIDTH
 32

	)

347 
	#SIZE_WIDTH
 
__WORDSIZE


	)

348 
	#WCHAR_WIDTH
 32

	)

349 
	#WINT_WIDTH
 32

	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

28 
	~<bôs/libc-hódî-°¨t.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

103 #ifde‡
__USE_XOPEN2K8


104 #i‚de‡
__ssize_t_deföed


105 
__ssize_t
 
	tssize_t
;

106 
	#__ssize_t_deföed


	)

111 
__BEGIN_NAMESPACE_STD


112 #i‚de‡
__USE_FILE_OFFSET64


113 
_G_Âos_t
 
	tÂos_t
;

115 
_G_Âos64_t
 
	tÂos_t
;

117 
__END_NAMESPACE_STD


118 #ifde‡
__USE_LARGEFILE64


119 
_G_Âos64_t
 
	tÂos64_t
;

123 
	#_IOFBF
 0

	)

124 
	#_IOLBF
 1

	)

125 
	#_IONBF
 2

	)

129 #i‚de‡
BUFSIZ


130 
	#BUFSIZ
 
_IO_BUFSIZ


	)

136 #i‚de‡
EOF


137 
	#EOF
 (-1)

	)

143 
	#SEEK_SET
 0

	)

144 
	#SEEK_CUR
 1

	)

145 
	#SEEK_END
 2

	)

146 #ifde‡
__USE_GNU


147 
	#SEEK_DATA
 3

	)

148 
	#SEEK_HOLE
 4

	)

152 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


154 
	#P_tmpdú
 "/tmp"

	)

167 
	~<bôs/°dio_lim.h
>

171 
_IO_FILE
 *
°dö
;

172 
_IO_FILE
 *
°dout
;

173 
_IO_FILE
 *
°dîr
;

175 
	#°dö
 
°dö


	)

176 
	#°dout
 
°dout


	)

177 
	#°dîr
 
°dîr


	)

179 
__BEGIN_NAMESPACE_STD


181 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

183 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

184 
__END_NAMESPACE_STD


186 #ifde‡
__USE_ATFILE


188 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

189 c⁄° *
__√w
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


197 #i‚de‡
__USE_FILE_OFFSET64


198 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

200 #ifde‡
__REDIRECT


201 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

203 
	#tmpfûe
 
tmpfûe64


	)

207 #ifde‡
__USE_LARGEFILE64


208 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

212 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

213 
__END_NAMESPACE_STD


215 #ifde‡
__USE_MISC


218 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

222 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


230 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

231 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

235 
__BEGIN_NAMESPACE_STD


240 
	`f˛o£
 (
FILE
 *
__°ªam
);

245 
	`fÊush
 (
FILE
 *
__°ªam
);

246 
__END_NAMESPACE_STD


248 #ifde‡
__USE_MISC


255 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

258 #ifde‡
__USE_GNU


265 
	`f˛o£Æl
 ();

269 
__BEGIN_NAMESPACE_STD


270 #i‚de‡
__USE_FILE_OFFSET64


275 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

276 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

281 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

282 c⁄° *
__ª°ri˘
 
__modes
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

285 #ifde‡
__REDIRECT


286 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

288 
__wur
;

289 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

290 c⁄° *
__ª°ri˘
 
__modes
,

291 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

292 
__wur
;

294 
	#f›í
 
f›í64


	)

295 
	#‰e›í
 
‰e›í64


	)

298 
__END_NAMESPACE_STD


299 #ifde‡
__USE_LARGEFILE64


300 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

301 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

302 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

303 c⁄° *
__ª°ri˘
 
__modes
,

304 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

307 #ifdef 
__USE_POSIX


309 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

312 #ifdef 
__USE_GNU


315 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

316 c⁄° *
__ª°ri˘
 
__modes
,

317 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

320 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

322 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

323 
__THROW
 
__wur
;

328 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

332 
__BEGIN_NAMESPACE_STD


335 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

339 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

340 
__modes
, 
size_t
 
__n
Ë
__THROW
;

341 
__END_NAMESPACE_STD


343 #ifdef 
__USE_MISC


346 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

347 
size_t
 
__size
Ë
__THROW
;

350 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

354 
__BEGIN_NAMESPACE_STD


359 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

360 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

365 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

367 
	$•rötf
 (*
__ª°ri˘
 
__s
,

368 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

374 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

375 
_G_va_li°
 
__¨g
);

380 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

382 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

383 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

384 
__END_NAMESPACE_STD


386 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


387 
__BEGIN_NAMESPACE_C99


389 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

390 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

391 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

393 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

394 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

395 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

396 
__END_NAMESPACE_C99


399 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

402 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

403 
_G_va_li°
 
__¨g
)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

405 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

408 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

409 c⁄° *
__ª°ri˘
 
__fmt
, ...)

410 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

413 #ifde‡
__USE_XOPEN2K8


415 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

416 
_G_va_li°
 
__¨g
)

417 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

418 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

419 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

423 
__BEGIN_NAMESPACE_STD


428 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

429 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

434 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

437 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

440 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

441 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

442 #ifde‡
__REDIRECT


446 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

447 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

448 
__isoc99_fsˇnf
Ë
__wur
;

449 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_sˇnf
Ë
__wur
;

451 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

452 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_ssˇnf
);

455 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

457 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

458 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

459 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

460 
	#fsˇnf
 
__isoc99_fsˇnf


	)

461 
	#sˇnf
 
__isoc99_sˇnf


	)

462 
	#ssˇnf
 
__isoc99_ssˇnf


	)

466 
__END_NAMESPACE_STD


468 #ifdef 
__USE_ISOC99


469 
__BEGIN_NAMESPACE_C99


474 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

475 
_G_va_li°
 
__¨g
)

476 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

482 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

486 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

487 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 #i‡!
deföed
 
__USE_GNU
 \

491 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

492 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

493 #ifde‡
__REDIRECT


497 
	`__REDIRECT
 (
vfsˇnf
,

498 (
FILE
 *
__ª°ri˘
 
__s
,

499 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

500 
__isoc99_vfsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

502 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

503 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

505 
	`__REDIRECT_NTH
 (
vssˇnf
,

506 (c⁄° *
__ª°ri˘
 
__s
,

507 c⁄° *
__ª°ri˘
 
__f‹m©
,

508 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

509 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

511 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

512 c⁄° *
__ª°ri˘
 
__f‹m©
,

513 
_G_va_li°
 
__¨g
Ë
__wur
;

514 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__wur
;

516 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

517 c⁄° *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__THROW
;

519 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

520 
	#vsˇnf
 
__isoc99_vsˇnf


	)

521 
	#vssˇnf
 
__isoc99_vssˇnf


	)

525 
__END_NAMESPACE_C99


529 
__BEGIN_NAMESPACE_STD


534 
	`fgëc
 (
FILE
 *
__°ªam
);

535 
	`gëc
 (
FILE
 *
__°ªam
);

541 
	`gëch¨
 ();

542 
__END_NAMESPACE_STD


546 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

548 #ifde‡
__USE_POSIX199506


553 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

554 
	`gëch¨_u∆ocked
 ();

557 #ifde‡
__USE_MISC


564 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

568 
__BEGIN_NAMESPACE_STD


576 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

577 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

583 
	`putch¨
 (
__c
);

584 
__END_NAMESPACE_STD


588 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

590 #ifde‡
__USE_MISC


597 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

600 #ifde‡
__USE_POSIX199506


605 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

606 
	`putch¨_u∆ocked
 (
__c
);

610 #i‡
deföed
 
__USE_MISC
 \

611 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

613 
	`gëw
 (
FILE
 *
__°ªam
);

616 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

620 
__BEGIN_NAMESPACE_STD


625 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

626 
__wur
;

628 #i‡!
deföed
 
__USE_ISOC11
 \

629 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

641 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

643 
__END_NAMESPACE_STD


645 #ifde‡
__USE_GNU


652 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

668 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

671 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

672 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

673 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

682 
size_t
 *
__ª°ri˘
 
__n
,

683 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

687 
__BEGIN_NAMESPACE_STD


692 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

698 
	`puts
 (c⁄° *
__s
);

705 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

712 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

718 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

719 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

720 
__END_NAMESPACE_STD


722 #ifde‡
__USE_GNU


729 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

730 
FILE
 *
__ª°ri˘
 
__°ªam
);

733 #ifde‡
__USE_MISC


740 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

741 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

742 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

743 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

747 
__BEGIN_NAMESPACE_STD


752 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

757 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

762 
	`ªwöd
 (
FILE
 *
__°ªam
);

763 
__END_NAMESPACE_STD


770 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


771 #i‚de‡
__USE_FILE_OFFSET64


776 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

781 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

783 #ifde‡
__REDIRECT


784 
	`__REDIRECT
 (
f£eko
,

785 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

786 
f£eko64
);

787 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

789 
	#f£eko
 
f£eko64


	)

790 
	#·ñlo
 
·ñlo64


	)

795 
__BEGIN_NAMESPACE_STD


796 #i‚de‡
__USE_FILE_OFFSET64


801 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

806 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

808 #ifde‡
__REDIRECT


809 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

810 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

811 
	`__REDIRECT
 (
f£ços
,

812 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

814 
	#fgëpos
 
fgëpos64


	)

815 
	#f£ços
 
f£ços64


	)

818 
__END_NAMESPACE_STD


820 #ifde‡
__USE_LARGEFILE64


821 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

822 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

823 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

824 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

827 
__BEGIN_NAMESPACE_STD


829 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

831 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

833 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
__END_NAMESPACE_STD


836 #ifde‡
__USE_MISC


838 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

839 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

844 
__BEGIN_NAMESPACE_STD


849 
	`≥º‹
 (c⁄° *
__s
);

850 
__END_NAMESPACE_STD


856 
	~<bôs/sys_îæi°.h
>

859 #ifdef 
__USE_POSIX


861 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #ifde‡
__USE_MISC


866 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

870 #ifde‡
__USE_POSIX2


875 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

881 
	`p˛o£
 (
FILE
 *
__°ªam
);

885 #ifdef 
__USE_POSIX


887 *
	$˘îmid
 (*
__s
Ë
__THROW
;

891 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


893 *
	`cu£rid
 (*
__s
);

897 #ifdef 
__USE_GNU


898 
ob°ack
;

901 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

903 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

904 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

905 c⁄° *
__ª°ri˘
 
__f‹m©
,

906 
_G_va_li°
 
__¨gs
)

907 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

911 #ifde‡
__USE_POSIX199506


915 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

919 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

922 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

925 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


929 
	#__√ed_gë›t


	)

930 
	~<gë›t.h
>

935 #ifde‡
__USE_EXTERN_INLINES


936 
	~<bôs/°dio.h
>

938 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


939 
	~<bôs/°dio2.h
>

941 #ifde‡
__LDBL_COMPAT


942 
	~<bôs/°dio-ldbl.h
>

945 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

46 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

47 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

48 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

49 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

50 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

51 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

52 #ifde‡
__WIFCONTINUED


53 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

57 
__BEGIN_NAMESPACE_STD


61 
	mquŸ
;

62 
	mªm
;

63 } 
	tdiv_t
;

66 #i‚de‡
__ldiv_t_deföed


69 
	mquŸ
;

70 
	mªm
;

71 } 
	tldiv_t
;

72 
	#__ldiv_t_deföed
 1

	)

74 
	g__END_NAMESPACE_STD


76 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


77 
__BEGIN_NAMESPACE_C99


79 
__exãnsi⁄__
 struct

81 
	mquŸ
;

82 
	mªm
;

83 } 
	tŒdiv_t
;

84 
	#__Œdiv_t_deföed
 1

	)

85 
	g__END_NAMESPACE_C99


90 
	#RAND_MAX
 2147483647

	)

95 
	#EXIT_FAILURE
 1

	)

96 
	#EXIT_SUCCESS
 0

	)

100 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

101 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

104 
__BEGIN_NAMESPACE_STD


106 
	$©of
 (c⁄° *
__≈å
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

109 
	$©oi
 (c⁄° *
__≈å
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

112 
	$©ﬁ
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_ISOC99


117 
__BEGIN_NAMESPACE_C99


119 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

121 
__END_NAMESPACE_C99


124 
__BEGIN_NAMESPACE_STD


126 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

129 
__END_NAMESPACE_STD


131 #ifdef 
__USE_ISOC99


132 
__BEGIN_NAMESPACE_C99


134 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

137 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

138 **
__ª°ri˘
 
__íd±r
)

139 
__THROW
 
	`__n⁄nuŒ
 ((1));

140 
__END_NAMESPACE_C99


143 
__BEGIN_NAMESPACE_STD


145 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

146 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

147 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

150 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

151 
__THROW
 
	`__n⁄nuŒ
 ((1));

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_MISC


156 
__exãnsi⁄__


157 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

158 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1));

161 
__exãnsi⁄__


162 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

163 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

164 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 #ifde‡
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__exãnsi⁄__


171 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

172 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

173 
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
__exãnsi⁄__


176 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

179 
__END_NAMESPACE_C99


183 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

184 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

185 
__f
)

186 
__THROW
 
	`__n⁄nuŒ
 ((3));

188 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

189 
__f
)

190 
__THROW
 
	`__n⁄nuŒ
 ((3));

192 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

193 
__f
)

194 
__THROW
 
	`__n⁄nuŒ
 ((3));

198 #ifde‡
__USE_GNU


212 
	~<xloˇÀ.h
>

216 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

217 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

218 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

220 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

221 **
__ª°ri˘
 
__íd±r
,

222 
__ba£
, 
__loˇÀ_t
 
__loc
)

223 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

225 
__exãnsi⁄__


226 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

227 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

228 
__loˇÀ_t
 
__loc
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

231 
__exãnsi⁄__


232 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

233 **
__ª°ri˘
 
__íd±r
,

234 
__ba£
, 
__loˇÀ_t
 
__loc
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

237 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

238 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

239 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

241 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

242 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

243 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

245 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

246 **
__ª°ri˘
 
__íd±r
,

247 
__loˇÀ_t
 
__loc
)

248 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

252 #ifde‡
__USE_EXTERN_INLINES


253 
__BEGIN_NAMESPACE_STD


254 
__exã∫_ölöe
 

255 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

257  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

258 
	}
}

259 
__exã∫_ölöe
 

260 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

262  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

263 
	}
}

264 
	g__END_NAMESPACE_STD


266 #ifde‡
__USE_ISOC99


267 
__BEGIN_NAMESPACE_C99


268 
__exãnsi⁄__
 
__exã∫_ölöe
 

269 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

271  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

272 
	}
}

273 
	g__END_NAMESPACE_C99


278 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


282 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

285 
	$a64l
 (c⁄° *
__s
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

290 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


291 
	~<sys/ty≥s.h
>

298 
	$øndom
 (Ë
__THROW
;

301 
	$§™dom
 (
__£ed
Ë
__THROW
;

307 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

308 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

312 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

315 #ifde‡
__USE_MISC


320 
	søndom_d©a


322 
öt32_t
 *
Âå
;

323 
öt32_t
 *
Ωå
;

324 
öt32_t
 *
°©e
;

325 
ønd_ty≥
;

326 
ønd_deg
;

327 
ønd_£p
;

328 
öt32_t
 *
íd_±r
;

331 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

332 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

335 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

338 
size_t
 
__°©ñí
,

339 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

340 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

342 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

343 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

349 
__BEGIN_NAMESPACE_STD


351 
	$ønd
 (Ë
__THROW
;

353 
	$§™d
 (
__£ed
Ë
__THROW
;

354 
__END_NAMESPACE_STD


356 #ifde‡
__USE_POSIX199506


358 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


366 
	$dønd48
 (Ë
__THROW
;

367 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

370 
	$Ã™d48
 (Ë
__THROW
;

371 
	$ƒ™d48
 (
__xsubi
[3])

372 
__THROW
 
	`__n⁄nuŒ
 ((1));

375 
	$mønd48
 (Ë
__THROW
;

376 
	$jønd48
 (
__xsubi
[3])

377 
__THROW
 
	`__n⁄nuŒ
 ((1));

380 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

381 *
	$£ed48
 (
__£ed16v
[3])

382 
__THROW
 
	`__n⁄nuŒ
 ((1));

383 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_MISC


389 
	sdønd48_d©a


391 
__x
[3];

392 
__ﬁd_x
[3];

393 
__c
;

394 
__öô
;

395 
__exãnsi⁄__
 
__a
;

400 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

401 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

402 
	$î™d48_r
 (
__xsubi
[3],

403 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

404 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

407 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

408 *
__ª°ri˘
 
__ªsu…
)

409 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

410 
	$ƒ™d48_r
 (
__xsubi
[3],

411 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

412 *
__ª°ri˘
 
__ªsu…
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

416 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

417 *
__ª°ri˘
 
__ªsu…
)

418 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

419 
	$jønd48_r
 (
__xsubi
[3],

420 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

421 *
__ª°ri˘
 
__ªsu…
)

422 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

426 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	$£ed48_r
 (
__£ed16v
[3],

429 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

431 
	$lc⁄g48_r
 (
__∑øm
[7],

432 
dønd48_d©a
 *
__buf„r
)

433 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


440 
	#__mÆloc_™d_ˇŒoc_deföed


	)

441 
__BEGIN_NAMESPACE_STD


443 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

445 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

446 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

447 
__END_NAMESPACE_STD


450 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


451 
__BEGIN_NAMESPACE_STD


457 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

458 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

460 
	$‰ì
 (*
__±r
Ë
__THROW
;

461 
__END_NAMESPACE_STD


463 #ifdef 
__USE_MISC


465 
	$c‰ì
 (*
__±r
Ë
__THROW
;

468 #ifde‡
__USE_MISC


469 
	~<Æloˇ.h
>

472 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

473 || 
deföed
 
__USE_MISC


475 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

478 #ifde‡
__USE_XOPEN2K


480 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

481 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

484 #ifde‡
__USE_ISOC11


486 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

487 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

490 
__BEGIN_NAMESPACE_STD


492 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

496 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

498 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


500 #ifde‡
__˝lu•lus


501 "C++" 
	`©_quick_exô
 ((*
__func
) ())

502 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

504 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

507 
__END_NAMESPACE_STD


509 #ifdef 
__USE_MISC


512 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

513 
__THROW
 
	`__n⁄nuŒ
 ((1));

516 
__BEGIN_NAMESPACE_STD


520 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

522 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


526 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

528 
__END_NAMESPACE_STD


530 #ifde‡
__USE_ISOC99


531 
__BEGIN_NAMESPACE_C99


534 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

535 
__END_NAMESPACE_C99


539 
__BEGIN_NAMESPACE_STD


541 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

542 
__END_NAMESPACE_STD


544 #ifde‡
__USE_GNU


547 *
	$£cuª_gëív
 (c⁄° *
__«me
)

548 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

551 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


555 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

558 #ifde‡
__USE_XOPEN2K


561 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

562 
__THROW
 
	`__n⁄nuŒ
 ((2));

565 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

568 #ifdef 
__USE_MISC


572 
	$˛óªnv
 (Ë
__THROW
;

576 #i‡
deföed
 
__USE_MISC
 \

577 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

583 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


595 #i‚de‡
__USE_FILE_OFFSET64


596 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

598 #ifde‡
__REDIRECT


599 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

600 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

602 
	#mk°emp
 
mk°emp64


	)

605 #ifde‡
__USE_LARGEFILE64


606 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

610 #ifde‡
__USE_MISC


617 #i‚de‡
__USE_FILE_OFFSET64


618 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

620 #ifde‡
__REDIRECT


621 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

622 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

624 
	#mk°emps
 
mk°emps64


	)

627 #ifde‡
__USE_LARGEFILE64


628 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

629 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_XOPEN2K8


639 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

642 #ifde‡
__USE_GNU


649 #i‚de‡
__USE_FILE_OFFSET64


650 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

654 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 
	#mko°emp
 
mko°emp64


	)

659 #ifde‡
__USE_LARGEFILE64


660 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

669 #i‚de‡
__USE_FILE_OFFSET64


670 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

671 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

673 #ifde‡
__REDIRECT


674 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

675 
__Êags
), 
mko°emps64
)

676 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

678 
	#mko°emps
 
mko°emps64


	)

681 #ifde‡
__USE_LARGEFILE64


682 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

683 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 
__BEGIN_NAMESPACE_STD


693 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

694 
__END_NAMESPACE_STD


697 #ifdef 
__USE_GNU


700 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

701 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

704 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


710 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

711 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

716 #i‚de‡
__COMPAR_FN_T


717 
	#__COMPAR_FN_T


	)

718 (*
	t__com∑r_‚_t
) (const *, const *);

720 #ifdef 
__USE_GNU


721 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

724 #ifde‡
__USE_GNU


725 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

728 
__BEGIN_NAMESPACE_STD


731 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

732 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

733 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

735 #ifde‡
__USE_EXTERN_INLINES


736 
	~<bôs/°dlib-b£¨ch.h
>

741 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

742 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

743 #ifde‡
__USE_GNU


744 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

745 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

746 
	`__n⁄nuŒ
 ((1, 4));

751 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

752 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

753 
__END_NAMESPACE_STD


755 #ifde‡
__USE_ISOC99


756 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

757 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

761 
__BEGIN_NAMESPACE_STD


765 
div_t
 
	$div
 (
__numî
, 
__díom
)

766 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

767 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

768 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

769 
__END_NAMESPACE_STD


771 #ifde‡
__USE_ISOC99


772 
__BEGIN_NAMESPACE_C99


773 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

774 
__díom
)

775 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_C99


780 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

781 || 
deföed
 
__USE_MISC


788 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

789 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

794 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

795 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

800 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

801 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

804 #ifde‡
__USE_MISC


806 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

807 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

808 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

809 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

810 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

811 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

812 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

813 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

818 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

820 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

821 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

822 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

823 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

825 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

826 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

827 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

829 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

831 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

836 
__BEGIN_NAMESPACE_STD


839 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

842 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

843 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

846 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

850 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

851 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

853 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

854 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

855 
__THROW
;

856 
__END_NAMESPACE_STD


859 #ifde‡
__USE_MISC


864 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

868 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


875 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

876 *c⁄° *
__ª°ri˘
 
__tokís
,

877 **
__ª°ri˘
 
__vÆuï
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

882 #ifde‡
__USE_XOPEN


884 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

890 #ifde‡
__USE_XOPEN2KXSI


892 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

895 #ifde‡
__USE_XOPEN_EXTENDED


900 
	$gø¡±
 (
__fd
Ë
__THROW
;

904 
	$u∆ock±
 (
__fd
Ë
__THROW
;

909 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

912 #ifde‡
__USE_GNU


916 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

917 
__THROW
 
	`__n⁄nuŒ
 ((2));

920 
	`gë±
 ();

923 #ifde‡
__USE_MISC


927 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

928 
__THROW
 
	`__n⁄nuŒ
 ((1));

931 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


934 
	$ây¶Ÿ
 (Ë
__THROW
;

937 
	~<bôs/°dlib-Êﬂt.h
>

940 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


941 
	~<bôs/°dlib.h
>

943 #ifde‡
__LDBL_COMPAT


944 
	~<bôs/°dlib-ldbl.h
>

948 #unde‡
__√ed_mÆloc_™d_ˇŒoc


950 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 
__END_NAMESPACE_STD


54 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


55 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

56 
__c
, 
size_t
 
__n
)

57 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

61 
__BEGIN_NAMESPACE_STD


63 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

66 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

70 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


73 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

74 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

75 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 #ifde‡
__OPTIMIZE__


79 
__exã∫_Æways_ölöe
 *

80 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


82  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

85 
__exã∫_Æways_ölöe
 const *

86 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


88  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

91 
	}
}

93 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

94 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

96 
__END_NAMESPACE_STD


98 #ifde‡
__USE_GNU


101 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


102 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

103 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

104 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

112 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


113 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

114 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

124 
__BEGIN_NAMESPACE_STD


126 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

129 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

130 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

131 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

134 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

135 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

138 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

141 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

142 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

148 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

152 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

153 
__THROW
 
	`__n⁄nuŒ
 ((2));

154 
__END_NAMESPACE_STD


156 #ifde‡
__USE_XOPEN2K8


157 
	~<xloˇÀ.h
>

160 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

161 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

164 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

165 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

168 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

169 || 
	$__GLIBC_USE
 (
LIB_EXT2
))

171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

458 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

461 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

462 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

465 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


468 *
	`ödex
 (*
__s
, 
__c
)

469 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

470 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

471 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

473 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


474 
__exã∫_Æways_ölöe
 *

475 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


477  
	`__buûtö_ödex
 (
__s
, 
__c
);

480 
__exã∫_Æways_ölöe
 const *

481 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


483  
	`__buûtö_ödex
 (
__s
, 
__c
);

486 
	}
}

488 *
	$ödex
 (c⁄° *
__s
, 
__c
)

489 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

493 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


496 *
	`rödex
 (*
__s
, 
__c
)

497 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

498 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

499 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

501 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


502 
__exã∫_Æways_ölöe
 *

503 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


505  
	`__buûtö_rödex
 (
__s
, 
__c
);

508 
__exã∫_Æways_ölöe
 const *

509 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


511  
	`__buûtö_rödex
 (
__s
, 
__c
);

514 
	}
}

516 *
	$rödex
 (c⁄° *
__s
, 
__c
)

517 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

522 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

526 #ifdef 
__USE_GNU


527 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

533 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

538 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

541 #ifdef 
__USE_GNU


544 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

548 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

549 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

553 #ifdef 
__USE_MISC


556 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

557 c⁄° *
__ª°ri˘
 
__dñim
)

558 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

561 #ifdef 
__USE_XOPEN2K8


563 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

566 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

574 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 #ifdef 
__USE_GNU


583 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

584 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

587 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

590 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #i‚de‡
ba£«me


597 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


598 "C++" *
	$ba£«me
 (*
__fûíame
)

599 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

600 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

601 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
	`__GNUC_PREREQ
 (3,4)

610 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

611 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


631 
	~<bôs/°rög.h
>

634 
	~<bôs/°rög2.h
>

637 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


639 
	~<bôs/°rög3.h
>

643 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

644 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

645 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


647 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

650 
__exã∫_Æways_ölöe
 *

651 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

652 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

654  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

655 
	}
}

660 
	g__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_MISC


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

149 
__END_DECLS


	@/usr/include/sys/stat.h

22 #i‚def 
_SYS_STAT_H


23 
	#_SYS_STAT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #ifde‡
__USE_ATFILE


30 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 
	~<bôs/ty≥s/time_t.h
>

39 #i‚de‡
__dev_t_deföed


40 
__dev_t
 
	tdev_t
;

41 
	#__dev_t_deföed


	)

44 #i‚de‡
__gid_t_deföed


45 
__gid_t
 
	tgid_t
;

46 
	#__gid_t_deföed


	)

49 #i‚de‡
__öo_t_deföed


50 #i‚de‡
__USE_FILE_OFFSET64


51 
__öo_t
 
	töo_t
;

53 
__öo64_t
 
	töo_t
;

55 
	#__öo_t_deföed


	)

58 #i‚de‡
__mode_t_deföed


59 
__mode_t
 
	tmode_t
;

60 
	#__mode_t_deföed


	)

63 #i‚de‡
__∆ök_t_deföed


64 
__∆ök_t
 
	t∆ök_t
;

65 
	#__∆ök_t_deföed


	)

68 #i‚de‡
__off_t_deföed


69 #i‚de‡
__USE_FILE_OFFSET64


70 
__off_t
 
	toff_t
;

72 
__off64_t
 
	toff_t
;

74 
	#__off_t_deföed


	)

77 #i‚de‡
__uid_t_deföed


78 
__uid_t
 
	tuid_t
;

79 
	#__uid_t_deföed


	)

83 #ifde‡
__USE_UNIX98


84 #i‚de‡
__blk˙t_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__blk˙t_t
 
	tblk˙t_t
;

88 
__blk˙t64_t
 
	tblk˙t_t
;

90 
	#__blk˙t_t_deföed


	)

93 #i‚de‡
__blksize_t_deföed


94 
__blksize_t
 
	tblksize_t
;

95 
	#__blksize_t_deföed


	)

99 
	g__BEGIN_DECLS


101 
	~<bôs/°©.h
>

103 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


104 
	#S_IFMT
 
__S_IFMT


	)

105 
	#S_IFDIR
 
__S_IFDIR


	)

106 
	#S_IFCHR
 
__S_IFCHR


	)

107 
	#S_IFBLK
 
__S_IFBLK


	)

108 
	#S_IFREG
 
__S_IFREG


	)

109 #ifde‡
__S_IFIFO


110 
	#S_IFIFO
 
__S_IFIFO


	)

112 #ifde‡
__S_IFLNK


113 
	#S_IFLNK
 
__S_IFLNK


	)

115 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
) \

116 && 
deföed
 
	g__S_IFSOCK


117 
	#S_IFSOCK
 
__S_IFSOCK


	)

123 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

125 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

126 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

127 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

128 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

129 #ifde‡
__S_IFIFO


130 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

132 #ifde‡
__S_IFLNK


133 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

136 #i‡
deföed
 
__USE_MISC
 && !deföed 
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë0

	)

140 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K
) \

141 && 
deföed
 
	g__S_IFSOCK


142 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

143 #ñi‡
deföed
 
__USE_XOPEN2K


144 
	#S_ISSOCK
(
mode
Ë0

	)

151 #ifdef 
__USE_POSIX199309


152 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

153 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

154 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

160 
	#S_ISUID
 
__S_ISUID


	)

161 
	#S_ISGID
 
__S_ISGID


	)

163 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


165 
	#S_ISVTX
 
__S_ISVTX


	)

168 
	#S_IRUSR
 
__S_IREAD


	)

169 
	#S_IWUSR
 
__S_IWRITE


	)

170 
	#S_IXUSR
 
__S_IEXEC


	)

172 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

174 #ifde‡
__USE_MISC


175 
	#S_IREAD
 
S_IRUSR


	)

176 
	#S_IWRITE
 
S_IWUSR


	)

177 
	#S_IEXEC
 
S_IXUSR


	)

180 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

181 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

182 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

184 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

186 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

187 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

188 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

190 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

193 #ifdef 
__USE_MISC


195 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

196 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

197 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

199 
	#S_BLKSIZE
 512

	)

203 #i‚de‡
__USE_FILE_OFFSET64


205 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

206 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

210 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

212 #ifde‡
__REDIRECT_NTH


213 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

214 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

215 
	`__n⁄nuŒ
 ((1, 2));

216 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

217 
	`__n⁄nuŒ
 ((2));

219 
	#°©
 
°©64


	)

220 
	#f°©
 
f°©64


	)

223 #ifde‡
__USE_LARGEFILE64


224 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

225 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

226 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

229 #ifde‡
__USE_ATFILE


233 #i‚de‡
__USE_FILE_OFFSET64


234 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

235 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

236 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

238 #ifde‡
__REDIRECT_NTH


239 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

240 
°©
 *
__ª°ri˘
 
__buf
,

241 
__Êag
),

242 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

244 
	#f°©©
 
f°©©64


	)

248 #ifde‡
__USE_LARGEFILE64


249 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

250 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

251 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

255 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


256 #i‚de‡
__USE_FILE_OFFSET64


259 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

260 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT_NTH


263 
	`__REDIRECT_NTH
 (
l°©
,

264 (c⁄° *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

266 
	`__n⁄nuŒ
 ((1, 2));

268 
	#l°©
 
l°©64


	)

271 #ifde‡
__USE_LARGEFILE64


272 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

273 
°©64
 *
__ª°ri˘
 
__buf
)

274 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

280 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1));

283 #ifde‡
__USE_MISC


287 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


293 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

296 #ifde‡
__USE_ATFILE


299 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

300 
__Êag
)

301 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

308 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

310 #ifdef 
__USE_GNU


313 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

317 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1));

320 #ifde‡
__USE_ATFILE


324 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

325 
__THROW
 
	`__n⁄nuŒ
 ((2));

331 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


332 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 #ifde‡
__USE_ATFILE


339 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

340 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 #ifde‡
__USE_ATFILE


353 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

354 
__THROW
 
	`__n⁄nuŒ
 ((2));

357 #ifde‡
__USE_ATFILE


360 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

361 c⁄° 
time•ec
 
__times
[2],

362 
__Êags
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 #ifde‡
__USE_XOPEN2K8


368 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

386 #i‚de‡
_STAT_VER


387 
	#_STAT_VER
 0

	)

389 #i‚de‡
_MKNOD_VER


390 
	#_MKNOD_VER
 0

	)

394 #i‚de‡
__USE_FILE_OFFSET64


395 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

396 
__THROW
 
	`__n⁄nuŒ
 ((3));

397 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

398 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

399 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

400 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

401 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

402 
°©
 *
__°©_buf
, 
__Êag
)

403 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

405 #ifde‡
__REDIRECT_NTH


406 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

407 
°©
 *
__°©_buf
), 
__fx°©64
)

408 
	`__n⁄nuŒ
 ((3));

409 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

410 
°©
 *
__°©_buf
), 
__x°©64
)

411 
	`__n⁄nuŒ
 ((2, 3));

412 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

413 
°©
 *
__°©_buf
), 
__lx°©64
)

414 
	`__n⁄nuŒ
 ((2, 3));

415 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

416 c⁄° *
__fûíame
,

417 
°©
 *
__°©_buf
, 
__Êag
),

418 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

421 
	#__fx°©
 
__fx°©64


	)

422 
	#__x°©
 
__x°©64


	)

423 
	#__lx°©
 
__lx°©64


	)

427 #ifde‡
__USE_LARGEFILE64


428 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

429 
__THROW
 
	`__n⁄nuŒ
 ((3));

430 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

431 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

432 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

433 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

434 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

435 
°©64
 *
__°©_buf
, 
__Êag
)

436 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

438 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

439 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

441 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

442 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

443 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

445 #ifde‡
__USE_EXTERN_INLINES


448 
__exã∫_ölöe
 

449 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

451  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

452 
	}
}

454 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


455 
__exã∫_ölöe
 

456 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

458  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

459 
	}
}

462 
__exã∫_ölöe
 

463 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

465  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

466 
	}
}

468 #ifde‡
__USE_ATFILE


469 
__exã∫_ölöe
 

470 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

471 
__Êag
))

473  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

474 
	}
}

477 #ifde‡
__USE_MISC


478 
__exã∫_ölöe
 

479 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

481  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

482 
	}
}

485 #ifde‡
__USE_ATFILE


486 
__exã∫_ölöe
 

487 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

488 
__dev_t
 
__dev
))

490  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

491 
	}
}

494 #i‡
deföed
 
__USE_LARGEFILE64
 \

495 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

496 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

497 
__exã∫_ölöe
 

498 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

500  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

501 
	}
}

503 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


504 
__exã∫_ölöe
 

505 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

507  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

508 
	}
}

511 
__exã∫_ölöe
 

512 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

514  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

515 
	}
}

517 #ifde‡
__USE_ATFILE


518 
__exã∫_ölöe
 

519 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

520 
__Êag
))

522  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

523 
	}
}

530 
	g__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<xloˇÀ.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


70 
__BEGIN_NAMESPACE_STD


73 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

76 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

79 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

89 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

90 c⁄° *
__ª°ri˘
 
__f‹m©
,

91 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

92 
__END_NAMESPACE_STD


94 #ifde‡
__USE_XOPEN


97 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

98 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

99 
__THROW
;

102 #ifde‡
__USE_XOPEN2K8


106 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

107 c⁄° *
__ª°ri˘
 
__f‹m©
,

108 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

109 
__loˇÀ_t
 
__loc
Ë
__THROW
;

112 #ifde‡
__USE_GNU


113 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

114 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

115 
__loˇÀ_t
 
__loc
Ë
__THROW
;

119 
__BEGIN_NAMESPACE_STD


122 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

126 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

127 
__END_NAMESPACE_STD


129 #ifde‡
__USE_POSIX


132 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

133 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

137 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

138 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

141 
__BEGIN_NAMESPACE_STD


144 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

147 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

148 
__END_NAMESPACE_STD


150 #ifde‡
__USE_POSIX


155 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

156 *
__ª°ri˘
 
__buf
Ë
__THROW
;

159 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

160 *
__ª°ri˘
 
__buf
Ë
__THROW
;

165 *
__tz«me
[2];

166 
__daylight
;

167 
__timez⁄e
;

170 #ifdef 
__USE_POSIX


172 *
tz«me
[2];

176 
	$tz£t
 (Ë
__THROW
;

179 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


180 
daylight
;

181 
timez⁄e
;

184 #ifde‡
__USE_MISC


187 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

193 
	#__i¶óp
(
yór
) \

194 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

197 #ifde‡
__USE_MISC


202 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

205 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

208 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

212 #ifde‡
__USE_POSIX199309


217 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

218 
time•ec
 *
__ªmaöög
);

222 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

225 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

228 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

229 
__THROW
;

231 #ifde‡
__USE_XOPEN2K


236 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

237 c⁄° 
time•ec
 *
__ªq
,

238 
time•ec
 *
__ªm
);

241 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

246 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

247 
sigevít
 *
__ª°ri˘
 
__evp
,

248 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

251 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

254 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

255 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

256 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

259 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

260 
__THROW
;

263 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

267 #ifde‡
__USE_ISOC11


269 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

270 
__THROW
 
	`__n⁄nuŒ
 ((1));

274 #ifde‡
__USE_XOPEN_EXTENDED


286 
gëd©e_îr
;

295 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

298 #ifde‡
__USE_GNU


309 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

310 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

313 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #ifde‡
__USE_MISC


787 
	$ây¶Ÿ
 (Ë
__THROW
;

792 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

795 #ifde‡
__USE_ATFILE


798 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

799 c⁄° *
__to
, 
__Êags
)

800 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

803 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


805 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

811 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

812 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


818 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

819 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

822 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

823 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

824 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

828 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

830 #ifde‡
__USE_ATFILE


832 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

833 
__THROW
 
	`__n⁄nuŒ
 ((2));

837 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

841 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

844 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

851 *
	`gëlogö
 ();

852 #ifde‡
__USE_POSIX199506


859 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

862 #ifdef 
__USE_MISC


864 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

868 #ifdef 
__USE_POSIX2


872 
	#__√ed_gë›t


	)

873 
	~<gë›t.h
>

877 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


881 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #i‡
deföed
 
__USE_MISC


888 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

893 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

899 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

901 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

908 
	$vh™gup
 (Ë
__THROW
;

911 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

919 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

920 
size_t
 
__off£t
, 
__sˇÀ
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1));

927 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

931 *
	$gëu£rshñl
 (Ë
__THROW
;

932 
	$ídu£rshñl
 (Ë
__THROW
;

933 
	$£tu£rshñl
 (Ë
__THROW
;

939 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

943 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

946 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

958 
	`fsync
 (
__fd
);

961 #ifde‡
__USE_GNU


964 
	$syncfs
 (
__fd
Ë
__THROW
;

968 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


971 
	`gëho°id
 ();

974 
	$sync
 (Ë
__THROW
;

977 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


980 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

985 
	$gëdèbÀsize
 (Ë
__THROW
;

991 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


994 #i‚de‡
__USE_FILE_OFFSET64


995 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

996 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

998 #ifde‡
__REDIRECT_NTH


999 
	`__REDIRECT_NTH
 (
åunˇã
,

1000 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1001 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1003 
	#åunˇã
 
åunˇã64


	)

1006 #ifde‡
__USE_LARGEFILE64


1007 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1013 #i‡
deföed
 
__USE_POSIX199309
 \

1014 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1020 #ifde‡
__REDIRECT_NTH


1021 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1022 
·runˇã64
Ë
__wur
;

1024 
	#·runˇã
 
·runˇã64


	)

1027 #ifde‡
__USE_LARGEFILE64


1028 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1034 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1035 || 
deföed
 
__USE_MISC


1039 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1045 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1049 #ifde‡
__USE_MISC


1060 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1065 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1077 
	#F_ULOCK
 0

	)

1078 
	#F_LOCK
 1

	)

1079 
	#F_TLOCK
 2

	)

1080 
	#F_TEST
 3

	)

1082 #i‚de‡
__USE_FILE_OFFSET64


1083 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1085 #ifde‡
__REDIRECT


1086 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1087 
lockf64
Ë
__wur
;

1089 
	#lockf
 
lockf64


	)

1092 #ifde‡
__USE_LARGEFILE64


1093 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1098 #ifde‡
__USE_GNU


1103 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1104 (
__exãnsi⁄__
 \

1105 ({ 
__ªsu…
; \

1106 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1107 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1108 
__ªsu…
; 
	}
}))

	)

1111 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1114 
fd©async
 (
__fûdes
);

1120 #ifdef 
__USE_XOPEN


1122 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1123 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1127 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1128 
__THROW
 
	`__n⁄nuŒ
 ((1));

1135 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1136 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1148 *
	`cu£rid
 (*
__s
);

1154 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1155 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1156 (*
__∑ª¡
) (),

1157 (*
__chûd
Ë()Ë
__THROW
;

1160 #ifde‡
__USE_MISC


1163 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur
;

1167 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1168 
	~<bôs/uni°d.h
>

1171 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

47 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


48 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


49 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

51 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

56 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


57 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


58 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

60 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


27 #ifde‡
__USE_MISC


28 
	#MAP_32BIT
 0x40

	)

32 #ifde‡
__USE_MISC


33 
	#MAP_GROWSDOWN
 0x00100

	)

34 
	#MAP_DENYWRITE
 0x00800

	)

35 
	#MAP_EXECUTABLE
 0x01000

	)

36 
	#MAP_LOCKED
 0x02000

	)

37 
	#MAP_NORESERVE
 0x04000

	)

38 
	#MAP_POPULATE
 0x08000

	)

39 
	#MAP_NONBLOCK
 0x10000

	)

40 
	#MAP_STACK
 0x20000

	)

41 
	#MAP_HUGETLB
 0x40000

	)

45 
	~<bôs/mm™-löux.h
>

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

192 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #ifde‡
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__glibc_ª£rved4
;

110 
	m__glibc_ª£rved5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #ifde‡
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #ifde‡
__USE_POSIX


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #ifde‡
__USE_POSIX


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

34 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

37 #ifde‡
__USE_MISC


38 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

40 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

41 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

42 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‚de‡
_BITS_TIME_H


24 
	#_BITS_TIME_H
 1

	)

26 
	~<bôs/ty≥s.h
>

34 
	#CLOCKS_PER_SEC
 ((
__˛ock_t
Ë1000000)

	)

36 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

37 && !
deföed
 
__USE_XOPEN2K


40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

60 
	#CLOCK_BOOTTIME
 7

	)

62 
	#CLOCK_REALTIME_ALARM
 8

	)

64 
	#CLOCK_BOOTTIME_ALARM
 9

	)

66 
	#CLOCK_TAI
 11

	)

69 
	#TIMER_ABSTIME
 1

	)

72 #ifde‡
__USE_GNU


73 
	~<bôs/timex.h
>

75 
__BEGIN_DECLS


78 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

80 
__END_DECLS


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	t__ötmax_t
;

62 
	t__uötmax_t
;

64 
__exãnsi⁄__
 
	t__ötmax_t
;

65 
__exãnsi⁄__
 
	t__uötmax_t
;

98 
	#__S16_TYPE
 

	)

99 
	#__U16_TYPE
 

	)

100 
	#__S32_TYPE
 

	)

101 
	#__U32_TYPE
 

	)

102 
	#__SLONGWORD_TYPE
 

	)

103 
	#__ULONGWORD_TYPE
 

	)

104 #i‡
__WORDSIZE
 == 32

105 
	#__SQUAD_TYPE
 
__quad_t


	)

106 
	#__UQUAD_TYPE
 
__u_quad_t


	)

107 
	#__SWORD_TYPE
 

	)

108 
	#__UWORD_TYPE
 

	)

109 
	#__SLONG32_TYPE
 

	)

110 
	#__ULONG32_TYPE
 

	)

111 
	#__S64_TYPE
 
__quad_t


	)

112 
	#__U64_TYPE
 
__u_quad_t


	)

115 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

116 #ñi‡
__WORDSIZE
 == 64

117 
	t__SQUAD_TYPE
 

	)

118 
	t__UQUAD_TYPE
 

	)

119 
	t__SWORD_TYPE
 

	)

120 
	t__UWORD_TYPE
 

	)

121 
	t__SLONG32_TYPE
 

	)

122 
	t__ULONG32_TYPE
 

	)

123 
	t__S64_TYPE
 

	)

124 
	t__U64_TYPE
 

	)

126 
	t__STD_TYPE
 

	)

130 
	~<bôs/ty≥sizes.h
>

133 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

134 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

135 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

136 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

137 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

138 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

139 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

140 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

141 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

142 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

143 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

144 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

145 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

146 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

147 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

148 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

149 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

150 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

152 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

153 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

156 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

159 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

162 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

167 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

168 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

171 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

172 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

175 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

176 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

179 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

181 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

186 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

190 
__off64_t
 
	t__loff_t
;

191 
__quad_t
 *
	t__qaddr_t
;

192 *
	t__ˇddr_t
;

195 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

198 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

201 #unde‡
__STD_TYPE


	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

6 
__BEGIN_NAMESPACE_STD


8 
__˛ock_t
 
	t˛ock_t
;

9 
	g__END_NAMESPACE_STD


11 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


12 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/struct_itimerspec.h

1 #i‚de‡
__ôimî•ec_deföed


2 
	#__ôimî•ec_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

8 
	sôimî•ec


10 
time•ec
 
	mô_öãrvÆ
;

11 
time•ec
 
	mô_vÆue
;

	@/usr/include/bits/types/struct_timespec.h

1 #i‚de‡
__time•ec_deföed


2 
	#__time•ec_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stime•ec


10 
__time_t
 
	mtv_£c
;

11 
__sysˇŒ_¶⁄g_t
 
	mtv_n£c
;

	@/usr/include/bits/types/struct_tm.h

1 #i‚de‡
__°ru˘_tm_deföed


2 
	#__°ru˘_tm_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__BEGIN_NAMESPACE_STD


8 
	stm


10 
	mtm_£c
;

11 
	mtm_mö
;

12 
	mtm_hour
;

13 
	mtm_mday
;

14 
	mtm_m⁄
;

15 
	mtm_yór
;

16 
	mtm_wday
;

17 
	mtm_yday
;

18 
	mtm_isd°
;

20 #ifdef 
__USE_MISC


21 
	mtm_gmtoff
;

22 c⁄° *
	mtm_z⁄e
;

24 
	m__tm_gmtoff
;

25 c⁄° *
	m__tm_z⁄e
;

28 
	g__END_NAMESPACE_STD


29 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


30 
	$__USING_NAMESPACE_STD
(
tm
)

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

6 
__BEGIN_NAMESPACE_STD


8 
__time_t
 
	ttime_t
;

9 
	g__END_NAMESPACE_STD


10 #ifde‡
__USE_POSIX


11 
	$__USING_NAMESPACE_STD
(
time_t
)

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #ifde‡
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 #ifde‡
__x86_64__


12 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

14 
	#__SYSCALL_WORDSIZE
 64

	)

16 
	#__WORDSIZE_TIME64_COMPAT32
 0

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

116 #unde‡
__USE_ISOC11


117 #unde‡
__USE_ISOC99


118 #unde‡
__USE_ISOC95


119 #unde‡
__USE_ISOCXX11


120 #unde‡
__USE_POSIX


121 #unde‡
__USE_POSIX2


122 #unde‡
__USE_POSIX199309


123 #unde‡
__USE_POSIX199506


124 #unde‡
__USE_XOPEN


125 #unde‡
__USE_XOPEN_EXTENDED


126 #unde‡
__USE_UNIX98


127 #unde‡
__USE_XOPEN2K


128 #unde‡
__USE_XOPEN2KXSI


129 #unde‡
__USE_XOPEN2K8


130 #unde‡
__USE_XOPEN2K8XSI


131 #unde‡
__USE_LARGEFILE


132 #unde‡
__USE_LARGEFILE64


133 #unde‡
__USE_FILE_OFFSET64


134 #unde‡
__USE_MISC


135 #unde‡
__USE_ATFILE


136 #unde‡
__USE_GNU


137 #unde‡
__USE_FORTIFY_LEVEL


138 #unde‡
__KERNEL_STRICT_NAMES


142 #i‚de‡
_LOOSE_KERNEL_NAMES


143 
	#__KERNEL_STRICT_NAMES


	)

153 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


154 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

155 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

157 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

164 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


165 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

166 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

168 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

172 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

178 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

179 && !
deföed
 
	g_DEFAULT_SOURCE


181 #unde‡
_DEFAULT_SOURCE


182 
	#_DEFAULT_SOURCE
 1

	)

186 #ifde‡
_GNU_SOURCE


187 #unde‡
_ISOC95_SOURCE


188 
	#_ISOC95_SOURCE
 1

	)

189 #unde‡
_ISOC99_SOURCE


190 
	#_ISOC99_SOURCE
 1

	)

191 #unde‡
_ISOC11_SOURCE


192 
	#_ISOC11_SOURCE
 1

	)

193 #unde‡
_POSIX_SOURCE


194 
	#_POSIX_SOURCE
 1

	)

195 #unde‡
_POSIX_C_SOURCE


196 
	#_POSIX_C_SOURCE
 200809L

	)

197 #unde‡
_XOPEN_SOURCE


198 
	#_XOPEN_SOURCE
 700

	)

199 #unde‡
_XOPEN_SOURCE_EXTENDED


200 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

201 #unde‡
_LARGEFILE64_SOURCE


202 
	#_LARGEFILE64_SOURCE
 1

	)

203 #unde‡
_DEFAULT_SOURCE


204 
	#_DEFAULT_SOURCE
 1

	)

205 #unde‡
_ATFILE_SOURCE


206 
	#_ATFILE_SOURCE
 1

	)

211 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

212 || (!
deföed
 
	g__STRICT_ANSI__
 \

213 && !
deföed
 
	g_ISOC99_SOURCE
 \

214 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

215 && !
deföed
 
	g_XOPEN_SOURCE
))

216 #unde‡
_DEFAULT_SOURCE


217 
	#_DEFAULT_SOURCE
 1

	)

221 #i‡(
deföed
 
_ISOC11_SOURCE
 \

222 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

223 
	#__USE_ISOC11
 1

	)

227 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

228 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

229 
	#__USE_ISOC99
 1

	)

233 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

234 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

235 
	#__USE_ISOC95
 1

	)

242 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

243 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

244 
	#__USE_ISOCXX11
 1

	)

250 #ifde‡
_DEFAULT_SOURCE


251 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


252 
	#__USE_POSIX_IMPLICITLY
 1

	)

254 #unde‡
_POSIX_SOURCE


255 
	#_POSIX_SOURCE
 1

	)

256 #unde‡
_POSIX_C_SOURCE


257 
	#_POSIX_C_SOURCE
 200809L

	)

260 #i‡((!
deföed
 
__STRICT_ANSI__
 \

261 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

262 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

263 
	#_POSIX_SOURCE
 1

	)

264 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

265 
	#_POSIX_C_SOURCE
 2

	)

266 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

267 
	#_POSIX_C_SOURCE
 199506L

	)

268 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

269 
	#_POSIX_C_SOURCE
 200112L

	)

271 
	#_POSIX_C_SOURCE
 200809L

	)

273 
	#__USE_POSIX_IMPLICITLY
 1

	)

282 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

283 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

284 
	#_POSIX_SOURCE
 1

	)

285 #unde‡
_POSIX_C_SOURCE


286 
	#_POSIX_C_SOURCE
 199506L

	)

289 #i‡(
deföed
 
_POSIX_SOURCE
 \

290 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

291 || 
deföed
 
_XOPEN_SOURCE
)

292 
	#__USE_POSIX
 1

	)

295 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


296 
	#__USE_POSIX2
 1

	)

299 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

300 
	#__USE_POSIX199309
 1

	)

303 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

304 
	#__USE_POSIX199506
 1

	)

307 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

308 
	#__USE_XOPEN2K
 1

	)

309 #unde‡
__USE_ISOC95


310 
	#__USE_ISOC95
 1

	)

311 #unde‡
__USE_ISOC99


312 
	#__USE_ISOC99
 1

	)

315 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

316 
	#__USE_XOPEN2K8
 1

	)

317 #unde‡
_ATFILE_SOURCE


318 
	#_ATFILE_SOURCE
 1

	)

321 #ifdef 
_XOPEN_SOURCE


322 
	#__USE_XOPEN
 1

	)

323 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

324 
	#__USE_XOPEN_EXTENDED
 1

	)

325 
	#__USE_UNIX98
 1

	)

326 #unde‡
_LARGEFILE_SOURCE


327 
	#_LARGEFILE_SOURCE
 1

	)

328 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

329 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

330 
	#__USE_XOPEN2K8
 1

	)

331 
	#__USE_XOPEN2K8XSI
 1

	)

333 
	#__USE_XOPEN2K
 1

	)

334 
	#__USE_XOPEN2KXSI
 1

	)

335 #unde‡
__USE_ISOC95


336 
	#__USE_ISOC95
 1

	)

337 #unde‡
__USE_ISOC99


338 
	#__USE_ISOC99
 1

	)

341 #ifde‡
_XOPEN_SOURCE_EXTENDED


342 
	#__USE_XOPEN_EXTENDED
 1

	)

347 #ifde‡
_LARGEFILE_SOURCE


348 
	#__USE_LARGEFILE
 1

	)

351 #ifde‡
_LARGEFILE64_SOURCE


352 
	#__USE_LARGEFILE64
 1

	)

355 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

356 
	#__USE_FILE_OFFSET64
 1

	)

359 #i‡
deföed
 
_DEFAULT_SOURCE


360 
	#__USE_MISC
 1

	)

363 #ifdef 
_ATFILE_SOURCE


364 
	#__USE_ATFILE
 1

	)

367 #ifdef 
_GNU_SOURCE


368 
	#__USE_GNU
 1

	)

371 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

372 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

373 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

374 #ñi‡!
__GNUC_PREREQ
 (4, 1)

375 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


376 #ñi‡
_FORTIFY_SOURCE
 > 1

377 
	#__USE_FORTIFY_LEVEL
 2

	)

379 
	#__USE_FORTIFY_LEVEL
 1

	)

382 #i‚de‡
__USE_FORTIFY_LEVEL


383 
	#__USE_FORTIFY_LEVEL
 0

	)

388 
	~<°dc-¥edef.h
>

396 #unde‡
__GNU_LIBRARY__


397 
	#__GNU_LIBRARY__
 6

	)

401 
	#__GLIBC__
 2

	)

402 
	#__GLIBC_MINOR__
 25

	)

404 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

405 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

408 #i‚de‡
__ASSEMBLER__


409 #i‚de‡
_SYS_CDEFS_H


410 
	~<sys/cdefs.h
>

415 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


416 
	#__USE_LARGEFILE
 1

	)

417 
	#__USE_LARGEFILE64
 1

	)

423 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

424 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

425 && 
deföed
 
	g__exã∫_ölöe


426 
	#__USE_EXTERN_INLINES
 1

	)

434 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
__USE_GNU


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_MISC


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	~<bôs/ty≥s/˛ock_t.h
>

129 
	~<bôs/ty≥s/˛ockid_t.h
>

130 
	~<bôs/ty≥s/time_t.h
>

131 
	~<bôs/ty≥s/timî_t.h
>

133 #ifde‡
__USE_XOPEN


134 #i‚de‡
__u£c⁄ds_t_deföed


135 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

136 
	#__u£c⁄ds_t_deföed


	)

138 #i‚de‡
__su£c⁄ds_t_deföed


139 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

140 
	#__su£c⁄ds_t_deföed


	)

144 
	#__√ed_size_t


	)

145 
	~<°ddef.h
>

147 #ifde‡
__USE_MISC


149 
	tul⁄g
;

150 
	tush‹t
;

151 
	tuöt
;

156 #i‡!
__GNUC_PREREQ
 (2, 7)

159 #i‚de‡
__öt8_t_deföed


160 
	#__öt8_t_deföed


	)

161 
	töt8_t
;

162 
	töt16_t
;

163 
	töt32_t
;

164 #i‡
__WORDSIZE
 == 64

165 
	töt64_t
;

167 
__exãnsi⁄__
 
	töt64_t
;

172 
	tu_öt8_t
;

173 
	tu_öt16_t
;

174 
	tu_öt32_t
;

175 #i‡
__WORDSIZE
 == 64

176 
	tu_öt64_t
;

178 
__exãnsi⁄__
 
	tu_öt64_t
;

181 
	tªgi°î_t
;

186 
	#__ötN_t
(
N
, 
MODE
) \

187 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

188 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

189 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

191 #i‚de‡
	t__öt8_t_deföed


192 
	t__öt8_t_deföed


	)

193 
	t__ötN_t
 (8, 
	t__QI__
);

194 
__ötN_t
 (16, 
__HI__
);

195 
__ötN_t
 (32, 
__SI__
);

196 
__ötN_t
 (64, 
__DI__
);

199 
__u_ötN_t
 (8, 
__QI__
);

200 
__u_ötN_t
 (16, 
__HI__
);

201 
__u_ötN_t
 (32, 
__SI__
);

202 
__u_ötN_t
 (64, 
__DI__
);

204 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

210 
	#__BIT_TYPES_DEFINED__
 1

	)

213 #ifdef 
__USE_MISC


215 
	~<ídün.h
>

218 
	~<sys/£À˘.h
>

225 
	#__SYSMACROS_DEPRECATED_INCLUSION


	)

226 
	~<sys/sysma¸os.h
>

227 #unde‡
__SYSMACROS_DEPRECATED_INCLUSION


231 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

232 && !
deföed
 
__blksize_t_deföed


233 
__blksize_t
 
	tblksize_t
;

234 
	#__blksize_t_deföed


	)

238 #i‚de‡
__USE_FILE_OFFSET64


239 #i‚de‡
__blk˙t_t_deföed


240 
__blk˙t_t
 
	tblk˙t_t
;

241 
	#__blk˙t_t_deföed


	)

243 #i‚de‡
__fsblk˙t_t_deföed


244 
__fsblk˙t_t
 
	tfsblk˙t_t
;

245 
	#__fsblk˙t_t_deföed


	)

247 #i‚de‡
__fsfû˙t_t_deföed


248 
__fsfû˙t_t
 
	tfsfû˙t_t
;

249 
	#__fsfû˙t_t_deföed


	)

252 #i‚de‡
__blk˙t_t_deföed


253 
__blk˙t64_t
 
	tblk˙t_t
;

254 
	#__blk˙t_t_deföed


	)

256 #i‚de‡
__fsblk˙t_t_deföed


257 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

258 
	#__fsblk˙t_t_deföed


	)

260 #i‚de‡
__fsfû˙t_t_deföed


261 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

262 
	#__fsfû˙t_t_deföed


	)

266 #ifde‡
__USE_LARGEFILE64


267 
__blk˙t64_t
 
	tblk˙t64_t
;

268 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

269 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

274 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


275 
	~<bôs/±hªadty≥s.h
>

278 
	g__END_DECLS


	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

17 
	~<bôs/ty≥s/__mb°©e_t.h
>

18 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


19 
	~<bôs/ty≥s/wöt_t.h
>

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


33 
	~<gc⁄v.h
>

36 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_öfo
 
	m__cd
;

40 
__gc⁄v_°ï_d©a
 
	m__d©a
;

41 } 
	m__comböed
;

42 } 
	t_G_ic⁄v_t
;

47 
	#_G_va_li°
 
__gnuc_va_li°


	)

49 
	#_G_HAVE_MMAP
 1

	)

50 
	#_G_HAVE_MREMAP
 1

	)

52 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

55 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

57 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/ty≥s/°ru˘_iovec.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 (020000000 | 
__O_DIRECTORY
)

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

131 #ifde‡
__USE_GNU


132 
	#F_OFD_GETLK
 36

	)

133 
	#F_OFD_SETLK
 37

	)

134 
	#F_OFD_SETLKW
 38

	)

137 #ifde‡
__USE_LARGEFILE64


138 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

141 #ifde‡
__USE_XOPEN2K8


142 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

143 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

144 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

147 #ifde‡
__USE_GNU


148 
	#O_DIRECT
 
__O_DIRECT


	)

149 
	#O_NOATIME
 
__O_NOATIME


	)

150 
	#O_PATH
 
__O_PATH


	)

151 
	#O_TMPFILE
 
__O_TMPFILE


	)

157 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


158 
	#O_DSYNC
 
__O_DSYNC


	)

159 #i‡
deföed
 
__O_RSYNC


160 
	#O_RSYNC
 
__O_RSYNC


	)

162 
	#O_RSYNC
 
O_SYNC


	)

167 
	#F_DUPFD
 0

	)

168 
	#F_GETFD
 1

	)

169 
	#F_SETFD
 2

	)

170 
	#F_GETFL
 3

	)

171 
	#F_SETFL
 4

	)

173 #i‚de‡
__F_SETOWN


174 
	#__F_SETOWN
 8

	)

175 
	#__F_GETOWN
 9

	)

178 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


179 
	#F_SETOWN
 
__F_SETOWN


	)

180 
	#F_GETOWN
 
__F_GETOWN


	)

183 #i‚de‡
__F_SETSIG


184 
	#__F_SETSIG
 10

	)

185 
	#__F_GETSIG
 11

	)

187 #i‚de‡
__F_SETOWN_EX


188 
	#__F_SETOWN_EX
 15

	)

189 
	#__F_GETOWN_EX
 16

	)

192 #ifde‡
__USE_GNU


193 
	#F_SETSIG
 
__F_SETSIG


	)

194 
	#F_GETSIG
 
__F_GETSIG


	)

195 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

196 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

199 #ifde‡
__USE_GNU


200 
	#F_SETLEASE
 1024

	)

201 
	#F_GETLEASE
 1025

	)

202 
	#F_NOTIFY
 1026

	)

203 
	#F_SETPIPE_SZ
 1031

	)

204 
	#F_GETPIPE_SZ
 1032

	)

206 #ifde‡
__USE_XOPEN2K8


207 
	#F_DUPFD_CLOEXEC
 1030

	)

212 
	#FD_CLOEXEC
 1

	)

214 #i‚de‡
F_RDLCK


216 
	#F_RDLCK
 0

	)

217 
	#F_WRLCK
 1

	)

218 
	#F_UNLCK
 2

	)

223 #i‚de‡
F_EXLCK


224 
	#F_EXLCK
 4

	)

225 
	#F_SHLCK
 8

	)

228 #ifde‡
__USE_MISC


230 
	#LOCK_SH
 1

	)

231 
	#LOCK_EX
 2

	)

232 
	#LOCK_NB
 4

	)

234 
	#LOCK_UN
 8

	)

237 #ifde‡
__USE_GNU


238 
	#LOCK_MAND
 32

	)

239 
	#LOCK_READ
 64

	)

240 
	#LOCK_WRITE
 128

	)

241 
	#LOCK_RW
 192

	)

244 #ifde‡
__USE_GNU


246 
	#DN_ACCESS
 0x00000001

	)

247 
	#DN_MODIFY
 0x00000002

	)

248 
	#DN_CREATE
 0x00000004

	)

249 
	#DN_DELETE
 0x00000008

	)

250 
	#DN_RENAME
 0x00000010

	)

251 
	#DN_ATTRIB
 0x00000020

	)

252 
	#DN_MULTISHOT
 0x80000000

	)

256 #ifde‡
__USE_GNU


258 
	e__pid_ty≥


260 
	mF_OWNER_TID
 = 0,

261 
	mF_OWNER_PID
,

262 
	mF_OWNER_PGRP
,

263 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


267 
	sf_ow√r_ex


269 
__pid_ty≥
 
	mty≥
;

270 
__pid_t
 
	mpid
;

276 #ifdef 
__USE_MISC


277 
	#FAPPEND
 
O_APPEND


	)

278 
	#FFSYNC
 
O_FSYNC


	)

279 
	#FASYNC
 
O_ASYNC


	)

280 
	#FNONBLOCK
 
O_NONBLOCK


	)

281 
	#FNDELAY
 
O_NDELAY


	)

284 #i‚de‡
__POSIX_FADV_DONTNEED


285 
	#__POSIX_FADV_DONTNEED
 4

	)

286 
	#__POSIX_FADV_NOREUSE
 5

	)

289 #ifde‡
__USE_XOPEN2K


290 
	#POSIX_FADV_NORMAL
 0

	)

291 
	#POSIX_FADV_RANDOM
 1

	)

292 
	#POSIX_FADV_SEQUENTIAL
 2

	)

293 
	#POSIX_FADV_WILLNEED
 3

	)

294 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

295 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

299 #ifde‡
__USE_GNU


301 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

304 
	#SYNC_FILE_RANGE_WRITE
 2

	)

307 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

312 
	#SPLICE_F_MOVE
 1

	)

313 
	#SPLICE_F_NONBLOCK
 2

	)

316 
	#SPLICE_F_MORE
 4

	)

317 
	#SPLICE_F_GIFT
 8

	)

321 
	~<löux/ÁŒoc.h
>

325 
	sfûe_h™dÀ


327 
	mh™dÀ_byãs
;

328 
	mh™dÀ_ty≥
;

330 
	mf_h™dÀ
[0];

334 
	#MAX_HANDLE_SZ
 128

	)

337 
	g__BEGIN_DECLS


339 #ifde‡
__USE_GNU


342 
__ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

343 
__THROW
;

350 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

351 
__Êags
);

358 
__ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

359 
size_t
 
__cou¡
, 
__Êags
);

365 
__ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

366 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

367 
__Êags
);

373 
__ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

374 
__Êags
);

380 #i‚de‡
__USE_FILE_OFFSET64


381 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

383 #ifde‡
__REDIRECT


384 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

385 
__off64_t
 
__Àn
),

386 
ÁŒoˇã64
);

388 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

391 #ifde‡
__USE_LARGEFILE64


392 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

393 
__off64_t
 
__Àn
);

398 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

399 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

400 
__Êags
Ë
__THROW
;

406 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

407 
__Êags
);

411 
__END_DECLS


	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/mman-linux.h

19 #i‚de‡
_SYS_MMAN_H


35 
	#PROT_READ
 0x1

	)

36 
	#PROT_WRITE
 0x2

	)

37 
	#PROT_EXEC
 0x4

	)

38 
	#PROT_NONE
 0x0

	)

39 
	#PROT_GROWSDOWN
 0x01000000

	)

41 
	#PROT_GROWSUP
 0x02000000

	)

45 
	#MAP_SHARED
 0x01

	)

46 
	#MAP_PRIVATE
 0x02

	)

47 #ifde‡
__USE_MISC


48 
	#MAP_TYPE
 0x0‡

	)

52 
	#MAP_FIXED
 0x10

	)

53 #ifde‡
__USE_MISC


54 
	#MAP_FILE
 0

	)

55 #ifde‡
__MAP_ANONYMOUS


56 
	#MAP_ANONYMOUS
 
__MAP_ANONYMOUS


	)

58 
	#MAP_ANONYMOUS
 0x20

	)

60 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

62 
	#MAP_HUGE_SHIFT
 26

	)

63 
	#MAP_HUGE_MASK
 0x3f

	)

67 
	#MS_ASYNC
 1

	)

68 
	#MS_SYNC
 4

	)

69 
	#MS_INVALIDATE
 2

	)

72 #ifde‡
__USE_GNU


73 
	#MREMAP_MAYMOVE
 1

	)

74 
	#MREMAP_FIXED
 2

	)

78 #ifde‡
__USE_MISC


79 
	#MADV_NORMAL
 0

	)

80 
	#MADV_RANDOM
 1

	)

81 
	#MADV_SEQUENTIAL
 2

	)

82 
	#MADV_WILLNEED
 3

	)

83 
	#MADV_DONTNEED
 4

	)

84 
	#MADV_FREE
 8

	)

85 
	#MADV_REMOVE
 9

	)

86 
	#MADV_DONTFORK
 10

	)

87 
	#MADV_DOFORK
 11

	)

88 
	#MADV_MERGEABLE
 12

	)

89 
	#MADV_UNMERGEABLE
 13

	)

90 
	#MADV_HUGEPAGE
 14

	)

91 
	#MADV_NOHUGEPAGE
 15

	)

92 
	#MADV_DONTDUMP
 16

	)

94 
	#MADV_DODUMP
 17

	)

95 
	#MADV_HWPOISON
 100

	)

99 #ifde‡
__USE_XOPEN2K


100 
	#POSIX_MADV_NORMAL
 0

	)

101 
	#POSIX_MADV_RANDOM
 1

	)

102 
	#POSIX_MADV_SEQUENTIAL
 2

	)

103 
	#POSIX_MADV_WILLNEED
 3

	)

104 
	#POSIX_MADV_DONTNEED
 4

	)

108 #i‚de‡
MCL_CURRENT


109 
	#MCL_CURRENT
 1

	)

110 
	#MCL_FUTURE
 2

	)

112 
	#MCL_ONFAULT
 4

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

22 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

26 
	stimex


28 
	mmodes
;

29 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

30 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

31 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

32 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

33 
	m°©us
;

34 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

35 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

36 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

37 
timevÆ
 
	mtime
;

38 
__sysˇŒ_¶⁄g_t
 
	mtick
;

39 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

40 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

41 
	mshi·
;

42 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

43 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

46 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

48 
	mèi
;

57 
	#ADJ_OFFSET
 0x0001

	)

58 
	#ADJ_FREQUENCY
 0x0002

	)

59 
	#ADJ_MAXERROR
 0x0004

	)

60 
	#ADJ_ESTERROR
 0x0008

	)

61 
	#ADJ_STATUS
 0x0010

	)

62 
	#ADJ_TIMECONST
 0x0020

	)

63 
	#ADJ_TAI
 0x0080

	)

64 
	#ADJ_SETOFFSET
 0x0100

	)

65 
	#ADJ_MICRO
 0x1000

	)

66 
	#ADJ_NANO
 0x2000

	)

67 
	#ADJ_TICK
 0x4000

	)

68 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

69 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

72 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

73 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

74 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

75 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

76 
	#MOD_STATUS
 
ADJ_STATUS


	)

77 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

78 
	#MOD_CLKB
 
ADJ_TICK


	)

79 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

80 
	#MOD_TAI
 
ADJ_TAI


	)

81 
	#MOD_MICRO
 
ADJ_MICRO


	)

82 
	#MOD_NANO
 
ADJ_NANO


	)

86 
	#STA_PLL
 0x0001

	)

87 
	#STA_PPSFREQ
 0x0002

	)

88 
	#STA_PPSTIME
 0x0004

	)

89 
	#STA_FLL
 0x0008

	)

91 
	#STA_INS
 0x0010

	)

92 
	#STA_DEL
 0x0020

	)

93 
	#STA_UNSYNC
 0x0040

	)

94 
	#STA_FREQHOLD
 0x0080

	)

96 
	#STA_PPSSIGNAL
 0x0100

	)

97 
	#STA_PPSJITTER
 0x0200

	)

98 
	#STA_PPSWANDER
 0x0400

	)

99 
	#STA_PPSERROR
 0x0800

	)

101 
	#STA_CLOCKERR
 0x1000

	)

102 
	#STA_NANO
 0x2000

	)

103 
	#STA_MODE
 0x4000

	)

104 
	#STA_CLK
 0x8000

	)

107 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

108 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

88 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

92 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

61 
	~<bôs/uöä-idítôy.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

80 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

81 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

82 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

83 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

85 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

86 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

87 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

88 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

90 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

91 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

92 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

93 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

61 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

58 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__NTHNL
(
f˘
Ëf˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

69 
	#__NTHNL
(
f˘
Ë
	)
fct

75 
	#__ölöe


	)

77 
	#__THROW


	)

78 
	#__THROWNL


	)

79 
	#__NTH
(
f˘
Ë
	)
fct

86 #i‡
deföed
 
__˛™g__
 && deföed 
__has_exãnsi⁄


87 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

89 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë0

	)

94 
	#__P
(
¨gs
Ë
	)
args

95 
	#__PMT
(
¨gs
Ë
	)
args

100 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

101 
	#__STRING
(
x
Ë#x

	)

104 
	#__±r_t
 *

	)

105 
	#__l⁄g_doubÀ_t
 

	)

109 #ifdef 
__˝lu•lus


110 
	#__BEGIN_DECLS
 "C" {

	)

111 
	#__END_DECLS
 }

	)

113 
	#__BEGIN_DECLS


	)

114 
	#__END_DECLS


	)

119 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

120 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

122 #i‡
__GNUC_PREREQ
 (4,3)

123 
	#__w¨nde˛
(
«me
, 
msg
) \

124 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

125 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

126 
	#__îr‹de˛
(
«me
, 
msg
) \

127 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

129 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

130 
	#__w¨«âr
(
msg
)

	)

131 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

138 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

139 
	#__Êex¨r
 []

	)

140 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

141 #ñi‡
__GNUC_PREREQ
 (2,97)

144 
	#__Êex¨r
 []

	)

145 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

146 #ñi‡
deföed
 
__GNUC__


149 
	#__Êex¨r
 [0]

	)

150 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

153 
	#__Êex¨r
 [1]

	)

154 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

168 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

170 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

171 #ifde‡
__˝lu•lus


172 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

173 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

174 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

175 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

177 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

178 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

179 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

182 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

183 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

196 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

197 
	#__©åibuã__
(
xyz
Ë

	)

203 #i‡
__GNUC_PREREQ
 (2,96)

204 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

206 
	#__©åibuã_mÆloc__


	)

211 #i‡
__GNUC_PREREQ
 (4, 3)

212 
	#__©åibuã_Æloc_size__
(
∑øms
) \

213 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

215 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

221 #i‡
__GNUC_PREREQ
 (2,96)

222 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

224 
	#__©åibuã_puª__


	)

228 #i‡
__GNUC_PREREQ
 (2,5)

229 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

231 
	#__©åibuã_c⁄°__


	)

237 #i‡
__GNUC_PREREQ
 (3,1)

238 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

239 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

241 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

242 
	#__©åibuã_noölöe__


	)

246 #i‡
__GNUC_PREREQ
 (3,2)

247 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

249 
	#__©åibuã_dïªˇãd__


	)

255 #i‡
__GNUC_PREREQ
 (4,5) || \

256 
	$__glibc_˛™g_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

257 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

258 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

260 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

269 #i‡
	`__GNUC_PREREQ
 (2,8)

270 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

272 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

279 #i‡
	`__GNUC_PREREQ
 (2,97)

280 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

281 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

283 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

288 #i‡
	`__GNUC_PREREQ
 (3,3)

289 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

291 
	#__n⁄nuŒ
(
∑øms
)

	)

296 #i‡
	`__GNUC_PREREQ
 (3,4)

297 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

298 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

299 #i‡
__USE_FORTIFY_LEVEL
 > 0

300 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

303 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

305 #i‚de‡
__wur


306 
	#__wur


	)

310 #i‡
	`__GNUC_PREREQ
 (3,2)

314 #unde‡
__Æways_ölöe


315 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

317 #unde‡
__Æways_ölöe


318 
	#__Æways_ölöe
 
__ölöe


	)

323 #i‡
	`__GNUC_PREREQ
 (4,3)

324 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

326 
	#__©åibuã_¨tificül__


	)

338 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

339 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

340 || 
deföed
 
__GNUC_GNU_INLINE__
)))

341 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


342 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

343 
	#__exã∫_Æways_ölöe
 \

344 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

346 
	#__exã∫_ölöe
 
__ölöe


	)

347 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

351 #ifde‡
__exã∫_Æways_ölöe


352 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

357 #i‡
	`__GNUC_PREREQ
 (4,3)

358 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

359 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

366 #i‡!
	`__GNUC_PREREQ
 (2,8)

367 
	#__exãnsi⁄__


	)

371 #i‡!
	`__GNUC_PREREQ
 (2,92)

372 
	#__ª°ri˘


	)

378 #i‡
	`__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


379 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

381 #ifde‡
__GNUC__


382 
	#__ª°ri˘_¨r


	)

384 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

385 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

388 
	#__ª°ri˘_¨r


	)

393 #i‡
__GNUC__
 >= 3

394 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

395 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

397 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

398 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

401 #i‡(!
deföed
 
_N‹ëu∫
 \

402 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

403 && !
	$__GNUC_PREREQ
 (4,7))

404 #i‡
	`__GNUC_PREREQ
 (2,8)

405 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

407 
	#_N‹ëu∫


	)

411 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

412 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

413 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

414 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

415 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

416 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

419 
	~<bôs/w‹dsize.h
>

420 
	~<bôs/l⁄g-doubÀ.h
>

422 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


423 
	#__LDBL_COMPAT
 1

	)

424 #ifde‡
__REDIRECT


425 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

426 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

427 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

428 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

429 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

430 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

431 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

432 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

433 
	#__LDBL_REDIR_DECL
(
«me
) \

434 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

435 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

436 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

437 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

438 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

441 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


442 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

443 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

444 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

445 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

446 
	#__LDBL_REDIR_DECL
(
«me
)

	)

447 #ifde‡
__REDIRECT


448 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

449 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

450 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

459 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

460 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

461 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

462 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

464 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

474 #i‡!
deföed
 
__˝lu•lus
 \

475 && (
	`__GNUC_PREREQ
 (4, 9) \

476 || 
	`__glibc_˛™g_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

477 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

478 && 
__STDC_VERSION__
 >= 201112L))

479 
	#__HAVE_GENERIC_SELECTION
 1

	)

481 
	#__HAVE_GENERIC_SELECTION
 0

	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
__BEGIN_DECLS


101 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

102 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

103 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

104 
timevÆ
 *
__ª°ri˘
 
__timeout
);

106 #ifde‡
__USE_XOPEN2K


113 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

114 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

115 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

116 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

117 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

122 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


123 
	~<bôs/£À˘2.h
>

126 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H_OUTER


21 #i‚de‡
__SYSMACROS_DEPRECATED_INCLUSION


22 
	#_SYS_SYSMACROS_H_OUTER
 1

	)

30 #unde‡
maj‹


31 #unde‡
mö‹


32 #unde‡
makedev


36 #i‚de‡
_SYS_SYSMACROS_H


37 
	#_SYS_SYSMACROS_H
 1

	)

39 
	~<„©uªs.h
>

40 
	~<bôs/ty≥s.h
>

41 
	~<bôs/sysma¸os.h
>

52 
	#__SYSMACROS_DM
(
symbﬁ
Ë
__SYSMACROS_DM1
 \

53 (
In
 
the
 
GNU
 
C
 
Libøry
, #symbﬁ 
is
 
deföed
\
n
\

54 
by
 <
sys
/
sysma¸os
.
h
>. 
F‹
 
hi°‹iˇl
 
com∑tibûôy
, 
ô
 
is
\
n
\

55 
cuºíéy
 
deföed
 
by
 <
sys
/
ty≥s
.
h
> 
as
 
wñl
, 
but
 
we
 
∂™
 
to
\
n
\

56 
ªmove
 
this
 
so⁄
. 
To
 
u£
 #symbﬁ, 
ö˛ude
 <
sys
/
sysma¸os
.
h
>\
n
\

57 
dúe˘ly
. 
If
 
you
 
did
 
nŸ
 
öãnd
 
to
 
u£
 
a
 
sy°em
-
deföed
 
ma¸o
\
n
\

58 #symbﬁ, 
you
 
should
 
undeföe
 
ô
 
a·î
 
ö˛udög
 <
sys
/
ty≥s
.
h
>.)

	)

62 
	#__SYSMACROS_DM1
(...Ë
	`__glibc_ma¸o_w¨nög
 (#__VA_ARGS__)

	)

64 
	#__SYSMACROS_DECL_TEMPL
(
πy≥
, 
«me
, 
¥Ÿo
) \

65 
πy≥
 
gnu_dev_
##
«me
 
¥Ÿo
 
__THROW
 
__©åibuã_c⁄°__
;

	)

67 
	#__SYSMACROS_IMPL_TEMPL
(
πy≥
, 
«me
, 
¥Ÿo
) \

68 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 
πy≥
 \

69 
	`__NTH
 (
gnu_dev_
##
«me
 
¥Ÿo
)

	)

71 
__BEGIN_DECLS


73 
	$__SYSMACROS_DECLARE_MAJOR
 (
__SYSMACROS_DECL_TEMPL
)

74 
	$__SYSMACROS_DECLARE_MINOR
 (
__SYSMACROS_DECL_TEMPL
)

75 
	$__SYSMACROS_DECLARE_MAKEDEV
 (
__SYSMACROS_DECL_TEMPL
)

77 #ifde‡
__USE_EXTERN_INLINES


79 
	$__SYSMACROS_DEFINE_MAJOR
 (
__SYSMACROS_IMPL_TEMPL
)

80 
	$__SYSMACROS_DEFINE_MINOR
 (
__SYSMACROS_IMPL_TEMPL
)

81 
	$__SYSMACROS_DEFINE_MAKEDEV
 (
__SYSMACROS_IMPL_TEMPL
)

85 
__END_DECLS


89 #i‚de‡
__SYSMACROS_NEED_IMPLEMENTATION


90 #unde‡
__SYSMACROS_DECL_TEMPL


91 #unde‡
__SYSMACROS_IMPL_TEMPL


92 #unde‡
__SYSMACROS_DECLARE_MAJOR


93 #unde‡
__SYSMACROS_DECLARE_MINOR


94 #unde‡
__SYSMACROS_DECLARE_MAKEDEV


95 #unde‡
__SYSMACROS_DEFINE_MAJOR


96 #unde‡
__SYSMACROS_DEFINE_MINOR


97 #unde‡
__SYSMACROS_DEFINE_MAKEDEV


100 #ifde‡
__SYSMACROS_DEPRECATED_INCLUSION


101 
	#maj‹
(
dev
Ë
	`__SYSMACROS_DM
 (
maj‹
Ë
	`gnu_dev_maj‹
 (dev)

	)

102 
	#mö‹
(
dev
Ë
	`__SYSMACROS_DM
 (
mö‹
Ë
	`gnu_dev_mö‹
 (dev)

	)

103 
	#makedev
(
maj
, 
mö
Ë
	`__SYSMACROS_DM
 (
makedev
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

105 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

106 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

107 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/long-double.h

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sysmacros.h

19 #i‚de‡
_BITS_SYSMACROS_H


20 
	#_BITS_SYSMACROS_H
 1

	)

22 #i‚de‡
_SYS_SYSMACROS_H


36 
	#__SYSMACROS_DECLARE_MAJOR
(
DECL_TEMPL
) \

37 
	`DECL_TEMPL
(, 
maj‹
, (
__dev_t
 
__dev
))

	)

39 
	#__SYSMACROS_DEFINE_MAJOR
(
DECL_TEMPL
) \

40 
	`__SYSMACROS_DECLARE_MAJOR
 (
DECL_TEMPL
) \

42 
__maj‹
; \

43 
__maj‹
 = ((
__dev
 & (
__dev_t
) 0x00000000000fff00u) >> 8); \

44 
__maj‹
 |((
__dev
 & (
__dev_t
) 0xfffff00000000000u) >> 32); \

45  
__maj‹
; \

46 }

	)

48 
	#__SYSMACROS_DECLARE_MINOR
(
DECL_TEMPL
) \

49 
	`DECL_TEMPL
(, 
mö‹
, (
__dev_t
 
__dev
))

	)

51 
	#__SYSMACROS_DEFINE_MINOR
(
DECL_TEMPL
) \

52 
	`__SYSMACROS_DECLARE_MINOR
 (
DECL_TEMPL
) \

54 
__mö‹
; \

55 
__mö‹
 = ((
__dev
 & (
__dev_t
) 0x00000000000000ffu) >> 0); \

56 
__mö‹
 |((
__dev
 & (
__dev_t
) 0x00000ffffff00000u) >> 12); \

57  
__mö‹
; \

58 }

	)

60 
	#__SYSMACROS_DECLARE_MAKEDEV
(
DECL_TEMPL
) \

61 
	`DECL_TEMPL
(
__dev_t
, 
makedev
, (
__maj‹
, 
__mö‹
))

	)

63 
	#__SYSMACROS_DEFINE_MAKEDEV
(
DECL_TEMPL
) \

64 
	`__SYSMACROS_DECLARE_MAKEDEV
 (
DECL_TEMPL
) \

66 
__dev_t
 
__dev
; \

67 
__dev
 = (((
__dev_t
Ë(
__maj‹
 & 0x00000fffu)) << 8); \

68 
__dev
 |(((
__dev_t
Ë(
__maj‹
 & 0xfffff000u)) << 32); \

69 
__dev
 |(((
__dev_t
Ë(
__mö‹
 & 0x000000ffu)) << 0); \

70 
__dev
 |(((
__dev_t
Ë(
__mö‹
 & 0xffffff00u)) << 12); \

71  
__dev
; \

72 }

	)

	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

58 
	~<bôs/±hªadty≥s-¨ch.h
>

62 #i‡
__WORDSIZE
 == 64

63 
	s__±hªad_öã∫Æ_li°


65 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

66 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

67 } 
	t__±hªad_li°_t
;

69 
	s__±hªad_öã∫Æ_¶i°


71 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

72 } 
	t__±hªad_¶i°_t
;

76 #i‡
__PTHREAD_MUTEX_LOCK_ELISION


77 #i‡
__WORDSIZE
 == 64

78 
	#__PTHREAD_SPINS_DATA
 \

79 
__•ös
; \

80 
__ñisi⁄


	)

81 
	#__PTHREAD_SPINS
 0, 0

	)

83 
	#__PTHREAD_SPINS_DATA
 \

86 
__e•ös
; \

87 
__ìlisi⁄
; \

88 } 
__ñisi⁄_d©a


	)

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

90 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

91 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

94 
	#__PTHREAD_SPINS_DATA
 
__•ös


	)

96 
	#__PTHREAD_SPINS
 0

	)

99 
	s__±hªad_muãx_s


101 
__lock
 
	m__LOCK_ALIGNMENT
;

102 
	m__cou¡
;

103 
	m__ow√r
;

104 #i‡
__WORDSIZE
 == 64

105 
	m__nu£rs
;

109 
	m__köd
;

110 
	m__PTHREAD_COMPAT_PADDING_MID


111 #i‡
__WORDSIZE
 == 64

112 
	m__PTHREAD_SPINS_DATA
;

113 
__±hªad_li°_t
 
	m__li°
;

114 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

116 
	m__nu£rs
;

117 
__exãnsi⁄__
 union

119 
	m__PTHREAD_SPINS_DATA
;

120 
__±hªad_¶i°_t
 
	m__li°
;

123 
	m__PTHREAD_COMPAT_PADDING_END


129 
	s__±hªad_c⁄d_s


131 
__exãnsi⁄__
 union

133 
__exãnsi⁄__
 
	m__w£q
;

136 
	m__low
;

137 
	m__high
;

138 } 
	m__w£q32
;

140 
__exãnsi⁄__
 union

142 
__exãnsi⁄__
 
	m__g1_°¨t
;

145 
	m__low
;

146 
	m__high
;

147 } 
	m__g1_°¨t32
;

149 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

150 
	m__g_size
[2];

151 
	m__g1_‹ig_size
;

152 
	m__wªfs
;

153 
	m__g_sig«ls
[2];

	@/usr/include/bits/types/__mbstate_t.h

1 #i‚de‡
____mb°©e_t_deföed


2 
	#____mb°©e_t_deföed
 1

	)

8 #i‚de‡
__WINT_TYPE__


9 
	#__WINT_TYPE__
 

	)

15 
	m__cou¡
;

18 
__WINT_TYPE__
 
	m__wch
;

19 
	m__wchb
[4];

20 } 
	m__vÆue
;

21 } 
	t__mb°©e_t
;

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/struct_iovec.h

19 #i‚de‡
__iovec_deföed


20 
	#__iovec_deföed
 1

	)

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 
	siovec


28 *
	miov_ba£
;

29 
size_t
 
	miov_Àn
;

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 
__time_t
 
	mtv_£c
;

11 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types/wint_t.h

1 #i‚de‡
__wöt_t_deföed


2 
	#__wöt_t_deföed
 1

	)

9 #i‚de‡
_WINT_T


10 
	#_WINT_T
 1

	)

16 #i‚de‡
__WINT_TYPE__


17 
	#__WINT_TYPE__
 

	)

20 
__WINT_TYPE__
 
	twöt_t
;

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s/__mb°©e_t.h
>

27 
	~<bôs/ty≥s/wöt_t.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
[0];

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/falloc.h

1 #i‚de‡
_FALLOC_H_


2 
	#_FALLOC_H_


	)

4 
	#FALLOC_FL_KEEP_SIZE
 0x01

	)

5 
	#FALLOC_FL_PUNCH_HOLE
 0x02

	)

6 
	#FALLOC_FL_NO_HIDE_STALE
 0x04

	)

28 
	#FALLOC_FL_COLLAPSE_RANGE
 0x08

	)

42 
	#FALLOC_FL_ZERO_RANGE
 0x10

	)

59 
	#FALLOC_FL_INSERT_RANGE
 0x20

	)

77 
	#FALLOC_FL_UNSHARE_RANGE
 0x40

	)

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

17 
	#ENOSYS
 38

	)

19 
	#ENOTEMPTY
 39

	)

20 
	#ELOOP
 40

	)

21 
	#EWOULDBLOCK
 
EAGAIN


	)

22 
	#ENOMSG
 42

	)

23 
	#EIDRM
 43

	)

24 
	#ECHRNG
 44

	)

25 
	#EL2NSYNC
 45

	)

26 
	#EL3HLT
 46

	)

27 
	#EL3RST
 47

	)

28 
	#ELNRNG
 48

	)

29 
	#EUNATCH
 49

	)

30 
	#ENOCSI
 50

	)

31 
	#EL2HLT
 51

	)

32 
	#EBADE
 52

	)

33 
	#EBADR
 53

	)

34 
	#EXFULL
 54

	)

35 
	#ENOANO
 55

	)

36 
	#EBADRQC
 56

	)

37 
	#EBADSLT
 57

	)

39 
	#EDEADLOCK
 
EDEADLK


	)

41 
	#EBFONT
 59

	)

42 
	#ENOSTR
 60

	)

43 
	#ENODATA
 61

	)

44 
	#ETIME
 62

	)

45 
	#ENOSR
 63

	)

46 
	#ENONET
 64

	)

47 
	#ENOPKG
 65

	)

48 
	#EREMOTE
 66

	)

49 
	#ENOLINK
 67

	)

50 
	#EADV
 68

	)

51 
	#ESRMNT
 69

	)

52 
	#ECOMM
 70

	)

53 
	#EPROTO
 71

	)

54 
	#EMULTIHOP
 72

	)

55 
	#EDOTDOT
 73

	)

56 
	#EBADMSG
 74

	)

57 
	#EOVERFLOW
 75

	)

58 
	#ENOTUNIQ
 76

	)

59 
	#EBADFD
 77

	)

60 
	#EREMCHG
 78

	)

61 
	#ELIBACC
 79

	)

62 
	#ELIBBAD
 80

	)

63 
	#ELIBSCN
 81

	)

64 
	#ELIBMAX
 82

	)

65 
	#ELIBEXEC
 83

	)

66 
	#EILSEQ
 84

	)

67 
	#ERESTART
 85

	)

68 
	#ESTRPIPE
 86

	)

69 
	#EUSERS
 87

	)

70 
	#ENOTSOCK
 88

	)

71 
	#EDESTADDRREQ
 89

	)

72 
	#EMSGSIZE
 90

	)

73 
	#EPROTOTYPE
 91

	)

74 
	#ENOPROTOOPT
 92

	)

75 
	#EPROTONOSUPPORT
 93

	)

76 
	#ESOCKTNOSUPPORT
 94

	)

77 
	#EOPNOTSUPP
 95

	)

78 
	#EPFNOSUPPORT
 96

	)

79 
	#EAFNOSUPPORT
 97

	)

80 
	#EADDRINUSE
 98

	)

81 
	#EADDRNOTAVAIL
 99

	)

82 
	#ENETDOWN
 100

	)

83 
	#ENETUNREACH
 101

	)

84 
	#ENETRESET
 102

	)

85 
	#ECONNABORTED
 103

	)

86 
	#ECONNRESET
 104

	)

87 
	#ENOBUFS
 105

	)

88 
	#EISCONN
 106

	)

89 
	#ENOTCONN
 107

	)

90 
	#ESHUTDOWN
 108

	)

91 
	#ETOOMANYREFS
 109

	)

92 
	#ETIMEDOUT
 110

	)

93 
	#ECONNREFUSED
 111

	)

94 
	#EHOSTDOWN
 112

	)

95 
	#EHOSTUNREACH
 113

	)

96 
	#EALREADY
 114

	)

97 
	#EINPROGRESS
 115

	)

98 
	#ESTALE
 116

	)

99 
	#EUCLEAN
 117

	)

100 
	#ENOTNAM
 118

	)

101 
	#ENAVAIL
 119

	)

102 
	#EISNAM
 120

	)

103 
	#EREMOTEIO
 121

	)

104 
	#EDQUOT
 122

	)

106 
	#ENOMEDIUM
 123

	)

107 
	#EMEDIUMTYPE
 124

	)

108 
	#ECANCELED
 125

	)

109 
	#ENOKEY
 126

	)

110 
	#EKEYEXPIRED
 127

	)

111 
	#EKEYREVOKED
 128

	)

112 
	#EKEYREJECTED
 129

	)

115 
	#EOWNERDEAD
 130

	)

116 
	#ENOTRECOVERABLE
 131

	)

118 
	#ERFKILL
 132

	)

120 
	#EHWPOISON
 133

	)

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

29 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

31 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

32 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

33 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

34 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

35 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

38 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

39 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

40 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

45 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

46 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

47 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

48 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

51 
	#__PTHREAD_COMPAT_PADDING_MID


	)

52 
	#__PTHREAD_COMPAT_PADDING_END


	)

53 
	#__PTHREAD_MUTEX_LOCK_ELISION
 1

	)

55 
	#__LOCK_ALIGNMENT


	)

56 
	#__ONCE_ALIGNMENT


	)

58 
	s__±hªad_rwlock_¨ch_t


60 
	m__ªadîs
;

61 
	m__wrôîs
;

62 
	m__wΩha£_fuãx
;

63 
	m__wrôîs_fuãx
;

64 
	m__∑d3
;

65 
	m__∑d4
;

66 #ifde‡
__x86_64__


67 
	m__cur_wrôî
;

68 
	m__sh¨ed
;

69 sig√d 
	m__rwñisi⁄
;

70 #ifde‡ 
__ILP32__


71 
	m__∑d1
[3];

72 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

74 
	m__∑d1
[7];

75 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

77 
	m__∑d2
;

80 
	m__Êags
;

81 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

85 
	m__Êags
;

86 
	m__sh¨ed
;

87 sig√d 
	m__rwñisi⁄
;

88 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

89 
	m__∑d2
;

90 
	m__cur_wrôî
;

94 #i‚de‡
__x86_64__


96 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
115
3018
include/arch/x64-linux/bootstrap_loader.h
include/arch/x64-linux/util.h
include/bc_interp.h
include/class.h
include/config.h
include/constants.h
include/exceptions.h
include/gc.h
include/hashtable.h
include/hawkbeans.h
include/hb_util.h
include/list.h
include/methods.h
include/mm.h
include/mnemonics.h
include/native.h
include/opcode_map.h
include/stack.h
include/thread.h
include/types.h
src/arch/x64-linux/bootstrap_loader.c
src/arch/x64-linux/hawkbeans.c
src/bc_interp.c
src/class.c
src/exceptions.c
src/gc.c
src/hashtable.c
src/mm.c
src/native.c
src/stack.c
src/thread.c
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/mman.h
/usr/include/sys/stat.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/mman.h
/usr/include/bits/posix_opt.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/struct_itimerspec.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/struct_tm.h
/usr/include/bits/types/time_t.h
/usr/include/bits/types/timer_t.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/sys/types.h
/usr/include/_G_config.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/mman-linux.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/asm/errno.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/long-double.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sysmacros.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/types/__mbstate_t.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/struct_iovec.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/types/wint_t.h
/usr/include/bits/uintn-identity.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/falloc.h
/usr/include/asm-generic/errno.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/pthreadtypes-arch.h
/usr/include/bits/types/__sigset_t.h
/usr/include/asm-generic/errno-base.h
